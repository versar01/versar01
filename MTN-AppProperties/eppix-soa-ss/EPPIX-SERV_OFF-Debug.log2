20190511: 143243     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:139) - loading appProperties
20190511: 143243     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:146) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190511: 143243     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:159) - DB Connection start
20190511: 143243     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:162) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190511: 143244     DEBUG   708[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190511: 143244     DEBUG   710[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190511: 143244     DEBUG   710[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190511: 143244     DEBUG   711[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190511: 143244     DEBUG   733[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190511: 143244     DEBUG   738[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@1b8f864
20190511: 143244     DEBUG   740[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190511: 143244     DEBUG   765[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143244     DEBUG   765[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190511: 143244     DEBUG   767[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190511: 143244     DEBUG   769[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190511: 143244     DEBUG   771[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@3e89c3
20190511: 143244     DEBUG   771[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190511: 143244     DEBUG   772[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143244     DEBUG   772[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190511: 143244     DEBUG   774[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190511: 143244     DEBUG   776[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190511: 143244     DEBUG   778[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1bc82e7
20190511: 143244     DEBUG   779[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190511: 143244     DEBUG   779[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143244     DEBUG   779[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190511: 143244     DEBUG   781[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190511: 143244     DEBUG   783[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190511: 143244     DEBUG   785[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@140c281
20190511: 143244     DEBUG   785[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190511: 143244     DEBUG   785[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143244     DEBUG   786[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190511: 143244     DEBUG   786[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190511: 143244     DEBUG   794[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190511: 143244     DEBUG   967[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190511: 143244     DEBUG   976[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@162dbb6
20190511: 143244     DEBUG   976[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190511: 143244     DEBUG   983[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143244     DEBUG   983[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190511: 143244     DEBUG   983[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190511: 143244     DEBUG   983[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190511: 143244     DEBUG   984[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190511: 143244     DEBUG   984[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190511: 143244     DEBUG   984[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:189) - DB Connection successfull
20190511: 143244     DEBUG   984[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1379) - 
Integer subscriberID: 607878
String msisdn: null
String serviceCode: AMR5
String partnerId: null
20190511: 143244     DEBUG   988[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190511: 143245     DEBUG  1088[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbdSubDetsDAC(BaseAbstractDACFactory.java:234) - getSbdSubDetsDAC()
20190511: 143245     DEBUG  1098[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl com.eppixcomm.eppix.base.dml.SbdSubDetsAbstractDMLFactory@1d0fafc
20190511: 143245     DEBUG  1098[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl
20190511: 143245     DEBUG  1101[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143245     DEBUG  1101[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl TO MAP
20190511: 143245     DEBUG  1101[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190511: 143245     DEBUG  1101[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190511: 143245     DEBUG  1111[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190511: 143245     DEBUG  1271[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143245     DEBUG  1275[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@fcfa52
20190511: 143245     DEBUG  1377[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190511: 143245     DEBUG  1378[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190511: 143245     DEBUG  1387[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@e5bbd6
20190511: 143245     DEBUG  1387[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190511: 143245     DEBUG  1389[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143245     DEBUG  1389[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190511: 143245     DEBUG  1390[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190511: 143245     DEBUG  1390[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190511: 143245     DEBUG  1391[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190511: 143245     DEBUG  1559[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143245     DEBUG  1566[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1e845c2
20190511: 143245     DEBUG  1615[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190511: 143245     DEBUG  1616[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVasActiveServiceDAC(BaseAbstractDACFactory.java:1177) - getVasActiveServiceDAC()
20190511: 143245     DEBUG  1621[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl com.eppixcomm.eppix.base.dml.VasActiveServiceDMLFactory@102799c
20190511: 143245     DEBUG  1621[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl
20190511: 143245     DEBUG  1623[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143245     DEBUG  1624[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl TO MAP
20190511: 143245     DEBUG  1624[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190511: 143245     DEBUG  1624[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190511: 143245     DEBUG  1625[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode|

20190511: 143245     DEBUG  1777[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ? 
Argument(s): |607878|AMR5|
20190511: 143245     DEBUG  1778[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@472d48
20190511: 143245     ERROR  1882[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1957) - The service is already active for the subscriber
20190511: 143245      INFO  1883[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:156) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: Service (AMR5) is already active for subscriber=607878
20190511: 143318     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:139) - loading appProperties
20190511: 143318     DEBUG     5[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:146) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190511: 143318     DEBUG     5[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:159) - DB Connection start
20190511: 143318     DEBUG     5[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:162) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190511: 143318     DEBUG   802[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190511: 143318     DEBUG   804[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190511: 143318     DEBUG   804[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190511: 143318     DEBUG   805[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190511: 143318     DEBUG   828[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190511: 143318     DEBUG   834[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@1b8f864
20190511: 143318     DEBUG   836[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190511: 143318     DEBUG   862[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143318     DEBUG   863[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190511: 143318     DEBUG   864[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190511: 143318     DEBUG   867[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190511: 143318     DEBUG   869[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@3e89c3
20190511: 143318     DEBUG   869[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190511: 143318     DEBUG   870[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143318     DEBUG   870[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190511: 143318     DEBUG   871[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190511: 143318     DEBUG   873[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190511: 143318     DEBUG   875[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1bc82e7
20190511: 143318     DEBUG   876[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190511: 143318     DEBUG   877[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143318     DEBUG   877[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190511: 143318     DEBUG   878[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190511: 143318     DEBUG   881[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190511: 143318     DEBUG   883[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@140c281
20190511: 143318     DEBUG   883[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190511: 143318     DEBUG   883[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143318     DEBUG   884[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190511: 143318     DEBUG   884[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190511: 143318     DEBUG   893[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190511: 143319     DEBUG  1062[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190511: 143319     DEBUG  1068[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@162dbb6
20190511: 143319     DEBUG  1068[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190511: 143319     DEBUG  1073[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143319     DEBUG  1073[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190511: 143319     DEBUG  1073[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190511: 143319     DEBUG  1073[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190511: 143319     DEBUG  1074[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190511: 143319     DEBUG  1074[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190511: 143319     DEBUG  1074[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:189) - DB Connection successfull
20190511: 143319     DEBUG  1074[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1379) - 
Integer subscriberID: 607878
String msisdn: null
String serviceCode: AMR5
String partnerId: null
20190511: 143319     DEBUG  1077[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190511: 143319     DEBUG  1154[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbdSubDetsDAC(BaseAbstractDACFactory.java:234) - getSbdSubDetsDAC()
20190511: 143319     DEBUG  1163[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl com.eppixcomm.eppix.base.dml.SbdSubDetsAbstractDMLFactory@10dc6b5
20190511: 143319     DEBUG  1163[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl
20190511: 143319     DEBUG  1164[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143319     DEBUG  1165[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl TO MAP
20190511: 143319     DEBUG  1165[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190511: 143319     DEBUG  1165[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190511: 143319     DEBUG  1171[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190511: 143319     DEBUG  1357[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143319     DEBUG  1360[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@fcfa52
20190511: 143319     DEBUG  1473[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190511: 143319     DEBUG  1474[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190511: 143319     DEBUG  1482[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@8ee016
20190511: 143319     DEBUG  1482[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190511: 143319     DEBUG  1484[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143319     DEBUG  1485[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190511: 143319     DEBUG  1485[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190511: 143319     DEBUG  1485[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190511: 143319     DEBUG  1486[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190511: 143324     DEBUG  6137[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143324     DEBUG  6143[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@186df0f
20190511: 143324     DEBUG  6195[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190511: 143324     DEBUG  6196[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVasActiveServiceDAC(BaseAbstractDACFactory.java:1177) - getVasActiveServiceDAC()
20190511: 143324     DEBUG  6199[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl com.eppixcomm.eppix.base.dml.VasActiveServiceDMLFactory@7109c4
20190511: 143324     DEBUG  6200[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl
20190511: 143324     DEBUG  6201[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143324     DEBUG  6201[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl TO MAP
20190511: 143324     DEBUG  6202[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190511: 143324     DEBUG  6202[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190511: 143324     DEBUG  6202[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode|

20190511: 143324     DEBUG  6349[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ? 
Argument(s): |607878|AMR5|
20190511: 143324     DEBUG  6452[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TsTariffService )
20190511: 143324     DEBUG  6453[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getTsTariffServiceDAC(BaseDACFactory.java:287) - getTsTariffServiceDAC()
20190511: 143324     DEBUG  6456[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl com.eppixcomm.eppix.base.dml.TsTariffServiceAbstractDMLFactory@1359c1b
20190511: 143324     DEBUG  6456[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl
20190511: 143324     DEBUG  6458[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143324     DEBUG  6458[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl TO MAP
20190511: 143324     DEBUG  6458[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractBLO.get(TsTariffServiceAbstractBLO.java:593) - get( filter )
20190511: 143324     DEBUG  6458[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractDACImpl.get(TsTariffServiceAbstractDACImpl.java:589) - get( filter )
20190511: 143324     DEBUG  6459[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TsTariffService|0|equalTsServiceCode+equalTsPackageCode+equalTsInternalTariff|

20190511: 143324     DEBUG  6609[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TsTariffService
Execute SQL Statement: SELECT TS_PACKAGE_CODE, TS_INTERNAL_TARIFF, TS_SERVICE_CODE, TS_NET_SERV_CODE, TS_ACT_CHARGE, TS_TDEACT_CHARGE, TS_REACT_CHARGE, TS_PDEACT_CHARGE, TS_SUB_CHARGE1, TS_SUB_CHARGE2, TS_SUB_CHARGE3, TS_CHARGE_PERIOD, TS_CHARGE_FREQ, TS_DISCOUNT_REF, TS_ACT_INCLUSIVE
FROM TS_TARIFF_SERVICE
WHERE (TS_SERVICE_CODE) = ? AND (TS_PACKAGE_CODE) = ? AND (TS_INTERNAL_TARIFF) = ?
Argument(s): |AMR5|500FF|ASKYL36M|
20190511: 143324     DEBUG  6610[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1a28362
20190511: 143324     DEBUG  6711[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getServRuleVas
20190511: 143324     DEBUG  6712[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getServRuleVas|0||

20190511: 143324     DEBUG  6854[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getServRuleVas
Execute SQL Statement: SELECT count(*) FROM svr_serv_rule, vas_active_service WHERE svr_serv_type = 'E' AND svr_target_serv = vas_service_code AND svr_primary_serv = ? AND vas_subscriber_id =? 
Argument(s): |AMR5|607878|
20190511: 143324     DEBUG  6856[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@f7c31d
20190511: 143325     DEBUG  6959[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190511: 143325     DEBUG  6959[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190511: 143325     DEBUG  6959[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190511: 143325     DEBUG  6959[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190511: 143325     DEBUG  7008[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143325     DEBUG  7009[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@9980d5
20190511: 143325     DEBUG  7105[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbaSubAux )
20190511: 143325     DEBUG  7105[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbaSubAuxDAC(BaseAbstractDACFactory.java:995) - getSbaSubAuxDAC()
20190511: 143325     DEBUG  7115[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbaSubAuxDACImpl com.eppixcomm.eppix.base.dml.SbaSubAuxDMLFactory@2200d5
20190511: 143325     DEBUG  7115[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbaSubAuxDACImpl
20190511: 143325     DEBUG  7117[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143325     DEBUG  7117[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbaSubAuxDACImpl TO MAP
20190511: 143325     DEBUG  7117[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractBLO.get(SbaSubAuxAbstractBLO.java:283) - get( filter )
20190511: 143325     DEBUG  7118[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractDACImpl.get(SbaSubAuxAbstractDACImpl.java:101) - get( filter )
20190511: 143325     DEBUG  7119[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbaSubAux|0|equalSbaSubscriberId|

20190511: 143325     DEBUG  7300[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbaSubAux
Execute SQL Statement: SELECT SBA_SUBSCRIBER_ID, SBA_ID_NUMBER, SBA_MATCHCODE, SBA_MARKETING, SBA_THIRD_PARTY, SBA_CUST_DEPT, SBA_DEALER_ID, SBA_DEPARTMENT, SBA_SALESMAN, SBA_REGION, SBA_INVOICE_ADDRID, SBA_INV_ACCOUNT, SBA_PREPAID_STAT, SBA_ANALYSIS_1, SBA_ANALYSIS_2, SBA_ANALYSIS_3, SBA_ANALYSIS_4, SBA_ANALYSIS_5, SBA_ANALYSIS_6, SBA_ANALYSIS_7, SBA_ANALYSIS_8, SBA_ANALYSIS_9, SBA_ANALYSIS_10, SBA_ANALYSIS_11, SBA_ANALYSIS_12, SBA_ANALYSIS_13, SBA_ANALYSIS_14, SBA_ANALYSIS_15, SBA_ANALYSIS_16, SBA_ANALYSIS_17, SBA_ANALYSIS_18, SBA_ANALYSIS_19, SBA_ANALYSIS_20, SBA_ANALYSIS_21, SBA_ANALYSIS_22, SBA_ANALYSIS_23, SBA_ANALYSIS_24, SBA_ANALYSIS_25, SBA_ANALYSIS_26, SBA_ANALYSIS_27, SBA_ANALYSIS_28, SBA_ANALYSIS_29, SBA_ANALYSIS_30,SBA_COMMENTS
FROM SBA_SUB_AUX
WHERE SBA_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143325     DEBUG  7301[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@6c585a
20190511: 143325     DEBUG  7414[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd1
20190511: 143325     DEBUG  7415[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd1|0||

20190511: 143325     DEBUG  7577[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd1
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |P|500FF||||
20190511: 143325     DEBUG  7688[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd1
20190511: 143325     DEBUG  7688[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd1|0||

20190511: 143325     DEBUG  7734[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd1
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |T|ASKYL36M||||
20190511: 143325     DEBUG  7835[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd1
20190511: 143325     DEBUG  7835[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd1|0||

20190511: 143325     DEBUG  7884[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd1
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |S|AMR5||||
20190511: 143326     DEBUG  7999[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd3
20190511: 143326     DEBUG  7999[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd3|0||

20190511: 143326     DEBUG  8157[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd3
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND ur_right_id IN  (SELECT ur2.ur_right_id FROM ur_user_restrict ur2  WHERE ur_type = ?  AND ur_code = ?  AND ur1.ur_group_id = ur2.ur_group_id  AND ur_right_id IN  (SELECT ur3.ur_right_id FROM ur_user_restrict ur3  WHERE ur_type = ?  AND ur_code = ?  AND ur1.ur_group_id = ur3.ur_group_id))  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |P3|500FF|S3|AMR5|T3|ASKYL36M||||
20190511: 143326     DEBUG  8292[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190511: 143326     DEBUG  8293[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSmnSimNosDAC(BaseAbstractDACFactory.java:387) - getSmnSimNosDAC()
20190511: 143326     DEBUG  8297[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SmnSimNosDACImpl com.eppixcomm.eppix.base.dml.SmnSimNosDMLFactory@15ad5c6
20190511: 143326     DEBUG  8297[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SmnSimNosDACImpl
20190511: 143326     DEBUG  8300[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143326     DEBUG  8300[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SmnSimNosDACImpl TO MAP
20190511: 143326     DEBUG  8300[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190511: 143326     DEBUG  8302[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190511: 143326     DEBUG  8304[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo|

20190511: 143326     DEBUG  8476[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ?
Argument(s): |0004102502505|
20190511: 143326     DEBUG  8477[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@ad8659
20190511: 143326     DEBUG  8593[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9345) - 
=======================================================================================
PARAM OPTION: ACTIVE
PARAM SIM NO: 0004102502505
PARAM NETWORK ID: 
PARAM HLR: 
PARAM DEALER ID: 
PARAM CUSTOMER: 
=======================================================================================
20190511: 143326     DEBUG  8594[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SacSimAssignCus )
20190511: 143326     DEBUG  8594[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSacSimAssignCusDAC(BaseAbstractDACFactory.java:1345) - getSacSimAssignCusDAC()
20190511: 143326     DEBUG  8596[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SacSimAssignCusDACImpl com.eppixcomm.eppix.base.dml.SacSimAssignCusDMLFactory@d3db51
20190511: 143326     DEBUG  8597[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SacSimAssignCusDACImpl
20190511: 143326     DEBUG  8598[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143326     DEBUG  8598[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SacSimAssignCusDACImpl TO MAP
20190511: 143326     DEBUG  8598[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractBLO.get(SacSimAssignCusAbstractBLO.java:287) - get( filter )
20190511: 143326     DEBUG  8598[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractDACImpl.get(SacSimAssignCusAbstractDACImpl.java:205) - get( filter )
20190511: 143326     DEBUG  8598[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SacSimAssignCus|0|equalSacSimNo|

20190511: 143326     DEBUG  8751[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SacSimAssignCus
Execute SQL Statement: SELECT SAC_BILL_AC_NO, SAC_SIM_NO 
FROM sac_sim_assign_cus
WHERE SAC_SIM_NO = ? 
Argument(s): |0004102502505|
20190511: 143326      INFO  8853[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9974) - Passed customer no  not found in Sac_Sim_assign_cus
20190511: 143326     DEBUG  8853[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190511: 143326     DEBUG  8854[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190511: 143326     DEBUG  8854[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190511: 143326     DEBUG  8854[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo+equalSmnStatus|

20190511: 143327     DEBUG  9081[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ? AND SMN_STATUS = ?
Argument(s): |0004102502505|1|
20190511: 143327     DEBUG  9082[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@5d9084
20190511: 143327     DEBUG  9179[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:10065) - NETWORK PARAMS: OPTION: ACTIVE NETWORK ID:  NETWORKID.LENGTH: 0
20190511: 143327     DEBUG  9179[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5655) - 
STEP 1
20190511: 143327     DEBUG  9179[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5674) - 
STEP 3
20190511: 143327     DEBUG  9180[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5679) - 
STEP 4
20190511: 143327     DEBUG  9180[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5681) - BASE: com.eppixcomm.eppix.base.blo.BaseBLOBinder@bad8a8
20190511: 143327     DEBUG  9181[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsrService )
20190511: 143327     DEBUG  9181[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVsrServiceDAC(BaseAbstractDACFactory.java:486) - getVsrServiceDAC()
20190511: 143327     DEBUG  9187[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VsrServiceDACImpl com.eppixcomm.eppix.base.dml.VsrServiceDMLFactory@1950198
20190511: 143327     DEBUG  9187[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VsrServiceDACImpl
20190511: 143327     DEBUG  9188[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143327     DEBUG  9188[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VsrServiceDACImpl TO MAP
20190511: 143327     DEBUG  9188[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractBLO.get(VsrServiceAbstractBLO.java:576) - get( filter )
20190511: 143327     DEBUG  9189[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractDACImpl.get(VsrServiceAbstractDACImpl.java:517) - get( filter )
20190511: 143327     DEBUG  9189[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsrService|0|equalVsrServiceCode|

20190511: 143327     DEBUG  9360[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VsrService
Execute SQL Statement: SELECT VSR_SERVICE_CODE, VSR_SERVICE_TYPE, VSR_SERVICE_DESC, VSR_ORIGINATOR, VSR_SERVICE_CLASS, VSR_TEMP_DEACT, VSR_PRORATA, VSR_PROVIDER_ID, VSR_SHORT_DESC, VSR_SUSPEND
FROM VSR_SERVICE
WHERE VSR_SERVICE_CODE = ?
Argument(s): |AMR5|
20190511: 143327     DEBUG  9361[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@da6bf4
20190511: 143327     DEBUG  9461[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5685) - 
STEP 5
20190511: 143327     DEBUG  9463[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190511: 143327     DEBUG  9463[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSksKeySettingDAC(BaseAbstractDACFactory.java:314) - getSksKeySettingDAC()
20190511: 143327     DEBUG  9468[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SksKeySettingDACImpl com.eppixcomm.eppix.base.dml.SksKeySettingAbstractDMLFactory@11ff436
20190511: 143327     DEBUG  9468[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SksKeySettingDACImpl
20190511: 143327     DEBUG  9469[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143327     DEBUG  9469[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SksKeySettingDACImpl TO MAP
20190511: 143327     DEBUG  9469[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190511: 143327     DEBUG  9470[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190511: 143327     DEBUG  9470[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190511: 143327     DEBUG  9623[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |PRTNSRVTYP|
20190511: 143327     DEBUG  9624[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@11dba45
20190511: 143327     DEBUG  9724[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VpsPackageServ )
20190511: 143327     DEBUG  9725[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVpsPackageServDAC(BaseAbstractDACFactory.java:473) - getVpsPackageServDAC()
20190511: 143327     DEBUG  9729[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VpsPackageServDACImpl com.eppixcomm.eppix.base.dml.VpsPackageServDMLFactory@8238f4
20190511: 143327     DEBUG  9729[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VpsPackageServDACImpl
20190511: 143327     DEBUG  9732[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143327     DEBUG  9733[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VpsPackageServDACImpl TO MAP
20190511: 143327     DEBUG  9733[main] - com.eppixcomm.eppix.base.blo.VpsPackageServAbstractBLO.get(VpsPackageServAbstractBLO.java:570) - get( filter )
20190511: 143327     DEBUG  9733[main] - com.eppixcomm.eppix.base.blo.VpsPackageServAbstractDACImpl.get(VpsPackageServAbstractDACImpl.java:489) - get( filter )
20190511: 143327     DEBUG  9733[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VpsPackageServ|0|equalVpsPackageCode+equalVpsServiceCode|

20190511: 143327     DEBUG  9905[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VpsPackageServ
Execute SQL Statement: SELECT VPS_PACKAGE_CODE, VPS_SERVICE_CODE, VPS_ALTER_CHARGE, VPS_MULTI_CHARGE, VPS_CHANGE_MULTI, VPS_PRICE_BY_TARIF, VPS_AUTO_CONNECT
FROM VPS_PACKAGE_SERV
WHERE (VPS_PACKAGE_CODE) = ? AND (VPS_SERVICE_CODE) = ?
Argument(s): |500FF|AMR5|
20190511: 143327     DEBUG  9906[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@787d6a
20190511: 143328     DEBUG 10000[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TsTariffService )
20190511: 143328     DEBUG 10001[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractBLO.get(TsTariffServiceAbstractBLO.java:593) - get( filter )
20190511: 143328     DEBUG 10001[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractDACImpl.get(TsTariffServiceAbstractDACImpl.java:589) - get( filter )
20190511: 143328     DEBUG 10001[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TsTariffService|0|equalTsPackageCode+equalTsServiceCode+equalornullTsInternalTariff|

20190511: 143328     DEBUG 10169[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TsTariffService
Execute SQL Statement: SELECT TS_PACKAGE_CODE, TS_INTERNAL_TARIFF, TS_SERVICE_CODE, TS_NET_SERV_CODE, TS_ACT_CHARGE, TS_TDEACT_CHARGE, TS_REACT_CHARGE, TS_PDEACT_CHARGE, TS_SUB_CHARGE1, TS_SUB_CHARGE2, TS_SUB_CHARGE3, TS_CHARGE_PERIOD, TS_CHARGE_FREQ, TS_DISCOUNT_REF, TS_ACT_INCLUSIVE
FROM TS_TARIFF_SERVICE
WHERE (TS_PACKAGE_CODE) = ? AND (TS_SERVICE_CODE) = ? AND ((TS_INTERNAL_TARIFF) = ? OR TS_INTERNAL_TARIFF IS NULL)
Argument(s): |500FF|AMR5|ASKYL36M|
20190511: 143328     DEBUG 10170[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@71dc3d
20190511: 143328     DEBUG 10272[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VstServiceTypes )
20190511: 143328     DEBUG 10273[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVstServiceTypesDAC(BaseAbstractDACFactory.java:499) - getVstServiceTypesDAC()
20190511: 143328     DEBUG 10276[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VstServiceTypesDACImpl com.eppixcomm.eppix.base.dml.VstServiceTypesDMLFactory@14520eb
20190511: 143328     DEBUG 10276[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VstServiceTypesDACImpl
20190511: 143328     DEBUG 10277[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143328     DEBUG 10277[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VstServiceTypesDACImpl TO MAP
20190511: 143328     DEBUG 10278[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractBLO.get(VstServiceTypesAbstractBLO.java:595) - get( filter )
20190511: 143328     DEBUG 10278[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractDACImpl.get(VstServiceTypesAbstractDACImpl.java:540) - get( filter )
20190511: 143328     DEBUG 10278[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VstServiceTypes|0|equalVstServiceType|

20190511: 143328     DEBUG 10434[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VstServiceTypes
Execute SQL Statement: SELECT VST_SERVICE_TYPE, VST_SERVICE_DESC, VST_MULTI_CHARGE, VST_SERVICE_CLASS, VST_AUTO_CONNECT, VST_ORIGINATOR, VST_TARIFF_RELATED, VST_PARAMETERISED, VST_PARAMS_LEVEL, VST_ARCHIVE_MONTHS, VST_FUTURE_ACT, VST_NODE_LEVEL
FROM VST_SERVICE_TYPES
WHERE VST_SERVICE_TYPE = ?
Argument(s): |SW|
20190511: 143328     DEBUG 10434[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@acb158
20190511: 143328      INFO 10535[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getServiceType(SubscriberUpgradeMigradeBLO.java:12925) - FOUND Service type from VST for SW
20190511: 143328     DEBUG 10536[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getMinVamConnectDate
20190511: 143328     DEBUG 10536[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getMinVamConnectDate|0||

20190511: 143328     DEBUG 10698[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getMinVamConnectDate
Execute SQL Statement: SELECT MIN((VAM_CONNECT_DATE)) FROM VAM_ACTIVE_MSISDN  WHERE VAM_SUBSCRIBER_ID = ?  AND VAM_STAT_CODE IN ( 1 , 4 )
Argument(s): |607878|
20190511: 143328     DEBUG 10699[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@16c9867
20190511: 143328     DEBUG 10812[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NmNetmat )
20190511: 143328     DEBUG 10813[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getNmNetmatDAC(BaseAbstractDACFactory.java:167) - getNmNetmatDAC()
20190511: 143328     DEBUG 10816[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.NmNetmatDACImpl com.eppixcomm.eppix.base.dml.NmNetmatDMLFactory@182bcde
20190511: 143328     DEBUG 10816[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.NmNetmatDACImpl
20190511: 143328     DEBUG 10817[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143328     DEBUG 10817[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.NmNetmatDACImpl TO MAP
20190511: 143328     DEBUG 10818[main] - com.eppixcomm.eppix.base.blo.NmNetmatAbstractBLO.get(NmNetmatAbstractBLO.java:527) - get( filter )
20190511: 143328     DEBUG 10818[main] - com.eppixcomm.eppix.base.blo.NmNetmatAbstractDACImpl.get(NmNetmatAbstractDACImpl.java:501) - get( filter )
20190511: 143328     DEBUG 10820[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NmNetmat|0|equalNmInternalTariff|

20190511: 143329     DEBUG 10974[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: NmNetmat
Execute SQL Statement: SELECT NM_INTERNAL_TARIFF, NM_NETWORK_TARIFF, NM_CONTRACT_PERIOD, NM_NTWRK_CONTR_PER, NM_MIN_CANC_PERIOD, NM_HIGHER_MIG_TYPE, NM_LOWER_MIG_TYPE, NM_SAME_MIG_TYPE, NM_NETWORK_ID, NM_NET_TYPE 
FROM nm_netmat
WHERE NM_INTERNAL_TARIFF = ? 
Argument(s): |ASKYL36M|
20190511: 143329     DEBUG 10974[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@10bbf9e
20190511: 143329     DEBUG 11080[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.ChgCharges )
20190511: 143329     DEBUG 11081[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getChgChargesDAC(BaseAbstractDACFactory.java:578) - getChgChargesDAC()
20190511: 143329     DEBUG 11083[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.ChgChargesDACImpl com.eppixcomm.eppix.base.dml.ChgChargesDMLFactory@12884e0
20190511: 143329     DEBUG 11084[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.ChgChargesDACImpl
20190511: 143329     DEBUG 11085[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143329     DEBUG 11085[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.ChgChargesDACImpl TO MAP
20190511: 143329     DEBUG 11085[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractBLO.max(ChgChargesAbstractBLO.java:593) - max( filter )
20190511: 143329     DEBUG 11085[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractDACImpl.max(ChgChargesAbstractDACImpl.java:542) - max( filter )
20190511: 143329     DEBUG 11088[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
ChgCharges|14|equalChgCode+equalChgNetid+lessthanorequalChgEffectiveDate+equalChgChargef|

20190511: 143329     DEBUG 11239[main] - com.eppixcomm.eppix.common.data.DAOImpl.max(DAOImpl.java:1220) - max(param SQL): DML Name: ChgCharges
Execute SQL Statement: SELECT MAX(CHG_CODE, CHG_NETID, CHG_EFFECTIVE_DATE)
FROM CHG_CHARGES
WHERE CHG_CODE = ? AND CHG_NETID = ? AND CHG_EFFECTIVE_DATE <= ? AND CHG_CHARGEF = ?
Argument(s): |AR500|M1|2019-05-11|F|
20190511: 143329     DEBUG 11299[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getChg(SubscriberUpgradeMigradeBLO.java:14642) - 1 EFF DATE: 2018-04-04
20190511: 143329     DEBUG 11299[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getChg(SubscriberUpgradeMigradeBLO.java:14801) - Effective Date set to 2018-04-04
20190511: 143329     DEBUG 11300[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.ChgCharges )
20190511: 143329     DEBUG 11300[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractBLO.get(ChgChargesAbstractBLO.java:564) - get( filter )
20190511: 143329     DEBUG 11300[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractDACImpl.get(ChgChargesAbstractDACImpl.java:523) - get( filter )
20190511: 143329     DEBUG 11300[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
ChgCharges|0|equalChgCode+equalChgNetid+equalChgEffectiveDate+equalChgChargef|

20190511: 143329     DEBUG 11464[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: ChgCharges
Execute SQL Statement: SELECT CHG_CODE, CHG_DESCRIPTION, CHG_VALUE, CHG_VAT_CODE, CHG_NCODE, CHG_NETID, CHG_CHARGEF, CHG_PERIOD, CHG_FREQUENCY, CHG_EFFECTIVE_DATE, CHG_CLASS_ID
FROM CHG_CHARGES
WHERE CHG_CODE = ? AND CHG_NETID = ? AND CHG_EFFECTIVE_DATE = ? AND CHG_CHARGEF = ?
Argument(s): |AR500|M1|2018-04-04|F|
20190511: 143329     DEBUG 11465[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1060478
20190511: 143329     DEBUG 11567[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TtTypeText )
20190511: 143329     DEBUG 11568[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getTtTypeTextDAC(BaseAbstractDACFactory.java:144) - getTtTypeTextDAC()
20190511: 143329     DEBUG 11573[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.TtTypeTextDACImpl com.eppixcomm.eppix.base.dml.TtTypeTextAbstractDMLFactory@32efa7
20190511: 143329     DEBUG 11573[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.TtTypeTextDACImpl
20190511: 143329     DEBUG 11575[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143329     DEBUG 11576[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.TtTypeTextDACImpl TO MAP
20190511: 143329     DEBUG 11576[main] - com.eppixcomm.eppix.base.blo.TtTypeTextAbstractBLO.get(TtTypeTextAbstractBLO.java:542) - get( filter )
20190511: 143329     DEBUG 11576[main] - com.eppixcomm.eppix.base.blo.TtTypeTextAbstractDACImpl.get(TtTypeTextAbstractDACImpl.java:451) - get( filter )
20190511: 143329     DEBUG 11577[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TtTypeText|0|equalTtGroup+equalTtType+equalTtLang|

20190511: 143329     DEBUG 11727[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TtTypeText
Execute SQL Statement: SELECT TT_GROUP, TT_LANG, TT_TYPE, TT_TEXT, TT_CONFIG
FROM TT_TYPE_TEXT
WHERE (TT_GROUP) = ? AND (TT_TYPE) = ? AND (TT_LANG) = ?
Argument(s): |BILLING|M|ENG|
20190511: 143329     DEBUG 11727[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1bb5c09
20190511: 143329     DEBUG 11826[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: serviceExistsOnSim
20190511: 143329     DEBUG 11826[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
serviceExistsOnSim|0||

20190511: 143330     DEBUG 11984[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: serviceExistsOnSim
Execute SQL Statement: SELECT UNIQUE(0) FROM vam_active_msisdn, vsm_service_msisdn  WHERE vam_msisdn_no = vsm_msisdn_no AND vam_sim_no = ? AND vsm_service_code = ? 
Argument(s): |0004102502505|AMR5|
20190511: 143330     DEBUG 11984[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1976011
20190511: 143330     ERROR 12084[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65073) - Service exist on SIM: 0004102502505 and Service Code: AMR5
20190511: 143330     DEBUG 12087[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190511: 143330     DEBUG 12087[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190511: 143330     DEBUG 12088[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190511: 143330     DEBUG 12088[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190511: 143330     DEBUG 12142[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |VRSERVICE|
20190511: 143330     DEBUG 12143[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1878144
20190511: 143330     DEBUG 12244[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190511: 143330     DEBUG 12244[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190511: 143330     DEBUG 12244[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190511: 143330     DEBUG 12244[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode+equalornullVasInternTariff|

20190511: 143330     DEBUG 12409[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ?  AND (VAS_INTERN_TARIFF = ? OR VAS_INTERN_TARIFF IS NULL) 
Argument(s): |607878|AMR5|ASKYL36M|
20190511: 143330     ERROR 12515[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSubscriberService(SubscriberUpgradeMigradeBLO.java:5762) - Cannot SELECT subscriber service details from table vas_active_service for subscriber 607878 Service: AMR5 Tariff: ASKYL36M
20190511: 143330     DEBUG 12516[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65176) - 1 Before VAS create
20190511: 143330     DEBUG 12516[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65178) - 1A Before VAS createSW
20190511: 143330     DEBUG 12516[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65181) - 
Subscriber: 607878
connect_date: 2019-05-11
sub charge 1: AR500
sub charge 2: 
sub charge 3: 
multiCharge: N
tariff: ASKYL36M
20190511: 143330     DEBUG 12516[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65187) - VST TARIFF RELATED: Y
20190511: 143330     DEBUG 12516[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65207) - INSIDE TARIFF RELATED = 
20190511: 143330     DEBUG 12516[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65210) - 2 Before VAS create
20190511: 143330     DEBUG 12516[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
createVas|12||

20190511: 143330     DEBUG 12682[main] - com.eppixcomm.eppix.common.data.DAOImpl.execute(DAOImpl.java:3581) - execute(static SQL): DML Name: createVas
Execute SQL Statement: INSERT INTO VAS_ACTIVE_SERVICE (VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE)VALUES (?,?,?,?,?,?,?,?,?,?,?)
Argument(s): |607878|AMR5|ASKYL36M|SW|2019-05-11||AR500|||0|N|
20190511: 143330     DEBUG 12682[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getVasBillLimitByMsisdnTariff
20190511: 143330     DEBUG 12682[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getVasBillLimitByMsisdnTariff|0||

20190511: 143330     DEBUG 12840[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getVasBillLimitByMsisdnTariff
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE, VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE  FROM vas_active_service, vam_active_msisdn  WHERE vas_service_code = ?  AND vam_msisdn_no = ?  AND vas_subscriber_id = vam_subscriber_id  AND (vas_intern_tariff = ?  OR vas_intern_tariff IS NULL)
Argument(s): |AMR5|833819663|ASKYL36M|
20190511: 143330     DEBUG 12840[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@858bf1
20190511: 143331     ERROR 12942[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65278) - Failed to get twinbill
20190511: 143331     DEBUG 12942[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190511: 143331     DEBUG 12943[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190511: 143331     DEBUG 12943[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190511: 143331     DEBUG 12943[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId+equalVamSimNo+INVamStatCode_2|VamHierarchyasc,VamMsisdnKnownasc

20190511: 143331     DEBUG 13103[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ? AND (VAM_SIM_NO) = ? AND VAM_STAT_CODE IN ( ? , ? ) ORDER BY VAM_HIERARCHY ASC,VAM_MSISDN_KNOWN ASC
Argument(s): |607878|0004102502505|1|4|
20190511: 143331     DEBUG 13104[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1f48262
20190511: 143331     DEBUG 13160[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190511: 143331     DEBUG 13160[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190511: 143331     DEBUG 13160[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190511: 143331     DEBUG 13161[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190511: 143331     DEBUG 13208[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143331     DEBUG 13209[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@19bfb30
20190511: 143331     DEBUG 13307[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190511: 143331     DEBUG 13308[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190511: 143331     DEBUG 13308[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190511: 143331     DEBUG 13308[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190511: 143331     DEBUG 13363[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |PRESTIGSVC|
20190511: 143331     DEBUG 13363[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1884174
20190511: 143331     DEBUG 13468[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190511: 143331     DEBUG 13468[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190511: 143331     DEBUG 13468[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190511: 143331     DEBUG 13468[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode+equalornullVasInternTariff|

20190511: 143331     DEBUG 13528[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ?  AND (VAS_INTERN_TARIFF = ? OR VAS_INTERN_TARIFF IS NULL) 
Argument(s): |607878|PRST|ASKYL36M|
20190511: 143331     ERROR 13634[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.checkPrestigeSubscriber(SubscriberUpgradeMigradeBLO.java:9058) - Failed to get VAS records for subscriber: 607878 old service: ASKYL36M old tariff: PRST
20190511: 143331     DEBUG 13638[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsmServiceMsisdn )
20190511: 143331     DEBUG 13639[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVsmServiceMsisdnDAC(BaseDACFactory.java:271) - getVsmServiceMsisdnDAC()
20190511: 143331     DEBUG 13642[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VsmServiceMsisdnDACImpl com.eppixcomm.eppix.base.dml.VsmServiceMsisdnAbstractDMLFactory@16f144c
20190511: 143331     DEBUG 13642[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VsmServiceMsisdnDACImpl
20190511: 143331     DEBUG 13643[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143331     DEBUG 13643[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VsmServiceMsisdnDACImpl TO MAP
20190511: 143331     DEBUG 13643[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractBLO.create(VsmServiceMsisdnAbstractBLO.java:209) - create( vsmServiceMsisdnDMO )
20190511: 143331     DEBUG 13643[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractBLO.exists(VsmServiceMsisdnAbstractBLO.java:453) - exists(vsmServiceMsisdn)
20190511: 143331     DEBUG 13643[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractDACImpl.exists(VsmServiceMsisdnAbstractDACImpl.java:249) - exists( VsmServiceMsisdnDMO)
20190511: 143331     DEBUG 13644[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsmServiceMsisdn|9|filterByPrimaryKey|

20190511: 143331     DEBUG 13857[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: VsmServiceMsisdn
Execute SQL Statement: SELECT DISTINCT(0)
FROM VSM_SERVICE_MSISDN
WHERE VSM_SUBSCRIBER_ID = ? AND  VSM_SERVICE_CODE = ? AND  VSM_MSISDN_NO = ?
Argument(s): |607878|AMR5|833819663|
20190511: 143332      INFO 13923[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:156) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: vsmServiceMsisdnDMO does exist
20190511: 143332     ERROR 13923[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65376) - Exception inserting new VSM record for subscriber: 607878 EXCEPTION: com.eppixcomm.eppix.base.error.EPPIXBusinessException: vsmServiceMsisdnDMO does exist
20190511: 143332     DEBUG 13927[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.MshMsisdnHistory )
20190511: 143332     DEBUG 13928[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getMshMsisdnHistoryDAC(BaseAbstractDACFactory.java:762) - getMshMsisdnHistoryDAC()
20190511: 143332     DEBUG 13930[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.MshMsisdnHistoryDACImpl com.eppixcomm.eppix.base.dml.MshMsisdnHistoryDMLFactory@54c4ad
20190511: 143332     DEBUG 13930[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.MshMsisdnHistoryDACImpl
20190511: 143332     DEBUG 13931[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143332     DEBUG 13931[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.MshMsisdnHistoryDACImpl TO MAP
20190511: 143332     DEBUG 13931[main] - com.eppixcomm.eppix.base.blo.MshMsisdnHistoryAbstractBLO.create(MshMsisdnHistoryAbstractBLO.java:138) - create( mshMsisdnHistoryDMO )
20190511: 143332     DEBUG 13931[main] - com.eppixcomm.eppix.base.blo.MshMsisdnHistoryAbstractDACImpl.create(MshMsisdnHistoryAbstractDACImpl.java:98) - create( mshMsisdnHistoryDMO )
20190511: 143332     DEBUG 13931[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
MshMsisdnHistory|11||

20190511: 143332     DEBUG 13987[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 607878|833819663      |ESWA      |BSWA A0311553 AMR5 0004102502505 2019-05-11       |||2019-05-11 14:33:32
20190511: 143332     DEBUG 14101[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: MshMsisdnHistory
Execute SQL Statement: INSERT INTO MSH_MSISDN_HISTORY (MSH_SUBSCRIBER_ID, MSH_MSISDN_NO, MSH_HIST_CODE, MSH_COMMENT, MSH_USER_ID, MSH_TERMINAL_ID, MSH_TIMESTAMP) VALUES (?,?,?,?,?,?,?)
Argument(s): |607878|833819663      |ESWA      |BSWA A0311553 AMR5 0004102502505 2019-05-11       |||2019-05-11 14:33:32|
20190511: 143332     DEBUG 14102[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.ShcSmsHistcode )
20190511: 143332     DEBUG 14103[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getShcSmsHistcodeDAC(BaseAbstractDACFactory.java:1429) - getShcSmsHistcodeDAC()
20190511: 143332     DEBUG 14106[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.ShcSmsHistcodeDACImpl com.eppixcomm.eppix.base.dml.ShcSmsHistcodeDMLFactory@82d37
20190511: 143332     DEBUG 14106[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.ShcSmsHistcodeDACImpl
20190511: 143332     DEBUG 14107[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143332     DEBUG 14107[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.ShcSmsHistcodeDACImpl TO MAP
20190511: 143332     DEBUG 14107[main] - com.eppixcomm.eppix.base.blo.ShcSmsHistcodeAbstractBLO.get(ShcSmsHistcodeAbstractBLO.java:267) - get( filter )
20190511: 143332     DEBUG 14107[main] - com.eppixcomm.eppix.base.blo.ShcSmsHistcodeAbstractDACImpl.get(ShcSmsHistcodeAbstractDACImpl.java:192) - get( filter )
20190511: 143332     DEBUG 14108[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
ShcSmsHistcode|0|equalShcHistCode|

20190511: 143332     DEBUG 14254[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: ShcSmsHistcode
Execute SQL Statement: SELECT SHC_MESG_ID, SHC_HIST_CODE 
FROM shc_sms_histcode
WHERE SHC_HIST_CODE = ? 
Argument(s): |ESWA|
20190511: 143332     DEBUG 14434[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65414) - BEFORE CHECK : (multiCharge.equals('Y') || firstOnSim
20190511: 143332     DEBUG 14434[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65416) - 
multiCharge: N
firstOnSim: true
vamDmo.getVamMsisdnNo: 833819663
20190511: 143332     DEBUG 14434[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65431) - BEFORE updateVsmBilledupto
20190511: 143332     DEBUG 14434[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.updateVsmBilledupto(SubscriberUpgradeMigradeBLO.java:6443) - 
updateVsmBilledupto 
Subscriber: 607878
msisdnNo: 833819663
serviceCode: AMR5
PRORATA DATE: 2019-05-11
20190511: 143332     DEBUG 14434[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190511: 143332     DEBUG 14434[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190511: 143332     DEBUG 14435[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190511: 143332     DEBUG 14435[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190511: 143332     DEBUG 14488[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143332     DEBUG 14491[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@609959
20190511: 143332     DEBUG 14597[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BcyBillingCycle )
20190511: 143332     DEBUG 14598[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getBcyBillingCycleDAC(BaseAbstractDACFactory.java:550) - getBcyBillingCycleDAC()
20190511: 143332     DEBUG 14601[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.BcyBillingCycleDACImpl com.eppixcomm.eppix.base.dml.BcyBillingCycleDMLFactory@15e0873
20190511: 143332     DEBUG 14601[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.BcyBillingCycleDACImpl
20190511: 143332     DEBUG 14603[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143332     DEBUG 14603[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.BcyBillingCycleDACImpl TO MAP
20190511: 143332     DEBUG 14603[main] - com.eppixcomm.eppix.base.blo.BcyBillingCycleAbstractBLO.get(BcyBillingCycleAbstractBLO.java:587) - get( filter )
20190511: 143332     DEBUG 14603[main] - com.eppixcomm.eppix.base.blo.BcyBillingCycleAbstractDACImpl.get(BcyBillingCycleAbstractDACImpl.java:492) - get( filter )
20190511: 143332     DEBUG 14604[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BcyBillingCycle|0|equalBcyBillCycle|

20190511: 143332     DEBUG 14767[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: BcyBillingCycle
Execute SQL Statement: SELECT BCY_BILL_CYCLE, BCY_DESCRIPTION, BCY_PERIOD, BCY_FREQUENCY, BCY_DAY_OF_RUN, BCY_NEXT_RUN, BCY_SUSPENDED, BCY_USE_STATUS, BCY_NEXT_CALL_RUN, BCY_IN_ADVANCE
FROM BCY_BILLING_CYCLE
WHERE BCY_BILL_CYCLE = ?
Argument(s): |CYC13|
20190511: 143332     DEBUG 14768[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@340101
20190511: 143332     DEBUG 14861[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17864) - initialDate: 26 Apr 2019
20190511: 143332     DEBUG 14862[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17865) - period: M
20190511: 143332     DEBUG 14862[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17866) - freq: 1
20190511: 143332     DEBUG 14862[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17867) - day: 26
20190511: 143332     DEBUG 14862[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17868) - type: F
20190511: 143332     DEBUG 14862[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17913) - MONTH calcDate: 26 May 2019
20190511: 143332     DEBUG 14862[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsmServiceMsisdn )
20190511: 143332     DEBUG 14862[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractBLO.modify(VsmServiceMsisdnAbstractBLO.java:369) - modify( filter )
20190511: 143332     DEBUG 14863[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractDACImpl.modify(VsmServiceMsisdnAbstractDACImpl.java:181) - modify( filter )
20190511: 143332     DEBUG 14863[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsmServiceMsisdn|16|equalVsmSubscriberId+equalVsmMsisdnNo+equalVsmServiceCode|

20190511: 143333     DEBUG 15023[main] - com.eppixcomm.eppix.common.data.DAOImpl.updateCustom(DAOImpl.java:2935) - updateCustom(DBO): DML Name: VsmServiceMsisdn
Execute SQL Statement: UPDATE VSM_SERVICE_MSISDN SET VSM_BILLED_UPTO = ?
WHERE VSM_SUBSCRIBER_ID = ? AND (VSM_MSISDN_NO) = ? AND (VSM_SERVICE_CODE) = ?
Argument(s): |2019-05-25|607878|833819663|AMR5|
20190511: 143333     DEBUG 15024[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65437) - AFTER updateVsmBilledupto
20190511: 143333     DEBUG 15024[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65460) - AFTER CHECK : (multiCharge.equals('Y') || firstOnSim
20190511: 143333     DEBUG 15024[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getSbuActive
20190511: 143333     DEBUG 15026[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getSbuActive|0||

20190511: 143333     ERROR 15088[main] - com.eppixcomm.eppix.common.data.DAOThrower.unexpected(DAOThrower.java:150) - com.eppixcomm.eppix.base.error.EPPIXSeriousException: A database error has occurred: SQL Error: Reason: A syntax error has occurred., SQL State: 42000, Vendor Code: -201, DML Name: getSbuActive, SQL Statement: SELECT * FROM sbu_sub_upgrade WHERE sbu_subscriber_id = ? AND sbu_subupgrade_id = (SELECT MAX (sbu_subupgrade_id) FROM sbu_sub_upgrade WHERE sbu_subscriber_id = ? AND sbu_record_status = 'A', Argument(s): None
20190511: 143333     ERROR 15088[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65469) - Digital Service - Exception getting the active SBU record for the subscriber
20190511: 143333     DEBUG 15088[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsrService )
20190511: 143333     DEBUG 15088[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractBLO.get(VsrServiceAbstractBLO.java:576) - get( filter )
20190511: 143333     DEBUG 15089[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractDACImpl.get(VsrServiceAbstractDACImpl.java:517) - get( filter )
20190511: 143333     DEBUG 15089[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsrService|0|equalVsrServiceCode|

20190511: 143333     DEBUG 15136[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VsrService
Execute SQL Statement: SELECT VSR_SERVICE_CODE, VSR_SERVICE_TYPE, VSR_SERVICE_DESC, VSR_ORIGINATOR, VSR_SERVICE_CLASS, VSR_TEMP_DEACT, VSR_PRORATA, VSR_PROVIDER_ID, VSR_SHORT_DESC, VSR_SUSPEND
FROM VSR_SERVICE
WHERE VSR_SERVICE_CODE = ?
Argument(s): |AMR5|
20190511: 143333     DEBUG 15136[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@100ebec
20190511: 143333     DEBUG 15240[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VstServiceTypes )
20190511: 143333     DEBUG 15240[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractBLO.get(VstServiceTypesAbstractBLO.java:595) - get( filter )
20190511: 143333     DEBUG 15240[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractDACImpl.get(VstServiceTypesAbstractDACImpl.java:540) - get( filter )
20190511: 143333     DEBUG 15240[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VstServiceTypes|0|equalVstServiceType|

20190511: 143333     DEBUG 15292[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VstServiceTypes
Execute SQL Statement: SELECT VST_SERVICE_TYPE, VST_SERVICE_DESC, VST_MULTI_CHARGE, VST_SERVICE_CLASS, VST_AUTO_CONNECT, VST_ORIGINATOR, VST_TARIFF_RELATED, VST_PARAMETERISED, VST_PARAMS_LEVEL, VST_ARCHIVE_MONTHS, VST_FUTURE_ACT, VST_NODE_LEVEL
FROM VST_SERVICE_TYPES
WHERE VST_SERVICE_TYPE = ?
Argument(s): |SW|
20190511: 143333     DEBUG 15292[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@180f96c
20190511: 143333      INFO 15402[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1820) - 
IS PARAMETER SERVICES: false
20190511: 143333     DEBUG 15403[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7041) - 
SUBSCRIBER: 607878
MSISDN: 833819663
SERVICE CODE: AMR5
TARIFF: ASKYL36M
PRORATA DATE: 2019-05-11
20190511: 143333     DEBUG 15403[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5655) - 
STEP 1
20190511: 143333     DEBUG 15404[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5674) - 
STEP 3
20190511: 143333     DEBUG 15404[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5679) - 
STEP 4
20190511: 143333     DEBUG 15404[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5681) - BASE: com.eppixcomm.eppix.base.blo.BaseBLOBinder@bad8a8
20190511: 143333     DEBUG 15404[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsrService )
20190511: 143333     DEBUG 15405[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractBLO.get(VsrServiceAbstractBLO.java:576) - get( filter )
20190511: 143333     DEBUG 15405[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractDACImpl.get(VsrServiceAbstractDACImpl.java:517) - get( filter )
20190511: 143333     DEBUG 15405[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsrService|0|equalVsrServiceCode|

20190511: 143333     DEBUG 15459[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VsrService
Execute SQL Statement: SELECT VSR_SERVICE_CODE, VSR_SERVICE_TYPE, VSR_SERVICE_DESC, VSR_ORIGINATOR, VSR_SERVICE_CLASS, VSR_TEMP_DEACT, VSR_PRORATA, VSR_PROVIDER_ID, VSR_SHORT_DESC, VSR_SUSPEND
FROM VSR_SERVICE
WHERE VSR_SERVICE_CODE = ?
Argument(s): |AMR5|
20190511: 143333     DEBUG 15460[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@aadc97
20190511: 143333     DEBUG 15553[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5685) - 
STEP 5
20190511: 143333     DEBUG 15555[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Vsr2ServiceAux )
20190511: 143333     DEBUG 15556[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVsr2ServiceAuxDAC(BaseAbstractDACFactory.java:917) - getVsr2ServiceAuxDAC()
20190511: 143333     DEBUG 15558[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.Vsr2ServiceAuxDACImpl com.eppixcomm.eppix.base.dml.Vsr2ServiceAuxDMLFactory@419d05
20190511: 143333     DEBUG 15559[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.Vsr2ServiceAuxDACImpl
20190511: 143333     DEBUG 15561[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143333     DEBUG 15561[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.Vsr2ServiceAuxDACImpl TO MAP
20190511: 143333     DEBUG 15561[main] - com.eppixcomm.eppix.base.blo.Vsr2ServiceAuxAbstractBLO.get(Vsr2ServiceAuxAbstractBLO.java:553) - get( filter )
20190511: 143333     DEBUG 15561[main] - com.eppixcomm.eppix.base.blo.Vsr2ServiceAuxAbstractDACImpl.get(Vsr2ServiceAuxAbstractDACImpl.java:454) - get( filter )
20190511: 143333     DEBUG 15562[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Vsr2ServiceAux|0|equalVsr2ServiceCode|

20190511: 143333     DEBUG 15724[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Vsr2ServiceAux
Execute SQL Statement: SELECT VSR2_SERVICE_CODE, VSR2_SERVICE_ORDER, VSR2_SIM_RELATED, VSR2_ENTRY_TYPE, VSR2_TECHNOLOGY
FROM VSR2_SERVICE_AUX
WHERE (VSR2_SERVICE_CODE) = ?
Argument(s): |AMR5|
20190511: 143333     DEBUG 15724[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@cafb56
20190511: 143333     DEBUG 15819[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190511: 143333     DEBUG 15819[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190511: 143333     DEBUG 15820[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190511: 143333     DEBUG 15820[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190511: 143333     DEBUG 15871[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143333     DEBUG 15872[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@3ae941
20190511: 143334     DEBUG 15978[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BcyBillingCycle )
20190511: 143334     DEBUG 15978[main] - com.eppixcomm.eppix.base.blo.BcyBillingCycleAbstractBLO.get(BcyBillingCycleAbstractBLO.java:587) - get( filter )
20190511: 143334     DEBUG 15978[main] - com.eppixcomm.eppix.base.blo.BcyBillingCycleAbstractDACImpl.get(BcyBillingCycleAbstractDACImpl.java:492) - get( filter )
20190511: 143334     DEBUG 15979[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BcyBillingCycle|0|equalBcyBillCycle|

20190511: 143334     DEBUG 16032[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: BcyBillingCycle
Execute SQL Statement: SELECT BCY_BILL_CYCLE, BCY_DESCRIPTION, BCY_PERIOD, BCY_FREQUENCY, BCY_DAY_OF_RUN, BCY_NEXT_RUN, BCY_SUSPENDED, BCY_USE_STATUS, BCY_NEXT_CALL_RUN, BCY_IN_ADVANCE
FROM BCY_BILLING_CYCLE
WHERE BCY_BILL_CYCLE = ?
Argument(s): |CYC13|
20190511: 143334     DEBUG 16033[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1da669c
20190511: 143334     DEBUG 16142[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TsTariffService )
20190511: 143334     DEBUG 16142[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractBLO.get(TsTariffServiceAbstractBLO.java:593) - get( filter )
20190511: 143334     DEBUG 16142[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractDACImpl.get(TsTariffServiceAbstractDACImpl.java:589) - get( filter )
20190511: 143334     DEBUG 16143[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TsTariffService|0|equalTsPackageCode+equalTsServiceCode+equalornullTsInternalTariff|

20190511: 143334     DEBUG 16197[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TsTariffService
Execute SQL Statement: SELECT TS_PACKAGE_CODE, TS_INTERNAL_TARIFF, TS_SERVICE_CODE, TS_NET_SERV_CODE, TS_ACT_CHARGE, TS_TDEACT_CHARGE, TS_REACT_CHARGE, TS_PDEACT_CHARGE, TS_SUB_CHARGE1, TS_SUB_CHARGE2, TS_SUB_CHARGE3, TS_CHARGE_PERIOD, TS_CHARGE_FREQ, TS_DISCOUNT_REF, TS_ACT_INCLUSIVE
FROM TS_TARIFF_SERVICE
WHERE (TS_PACKAGE_CODE) = ? AND (TS_SERVICE_CODE) = ? AND ((TS_INTERNAL_TARIFF) = ? OR TS_INTERNAL_TARIFF IS NULL)
Argument(s): |500FF|AMR5|ASKYL36M|
20190511: 143334     DEBUG 16197[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@17f242c
20190511: 143334     DEBUG 16308[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190511: 143334     DEBUG 16308[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190511: 143334     DEBUG 16308[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190511: 143334     DEBUG 16308[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode+equalornullVasInternTariff|

20190511: 143334     DEBUG 16360[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ?  AND (VAS_INTERN_TARIFF = ? OR VAS_INTERN_TARIFF IS NULL) 
Argument(s): |607878|AMR5|ASKYL36M|
20190511: 143334     DEBUG 16361[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@12f9ee
20190511: 143334     DEBUG 16470[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.ChgCharges )
20190511: 143334     DEBUG 16470[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractBLO.max(ChgChargesAbstractBLO.java:593) - max( filter )
20190511: 143334     DEBUG 16470[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractDACImpl.max(ChgChargesAbstractDACImpl.java:542) - max( filter )
20190511: 143334     DEBUG 16470[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
ChgCharges|14|equalChgCode+equalChgNetid+lessthanorequalChgEffectiveDate+equalChgChargef|

20190511: 143334     DEBUG 16528[main] - com.eppixcomm.eppix.common.data.DAOImpl.max(DAOImpl.java:1220) - max(param SQL): DML Name: ChgCharges
Execute SQL Statement: SELECT MAX(CHG_CODE, CHG_NETID, CHG_EFFECTIVE_DATE)
FROM CHG_CHARGES
WHERE CHG_CODE = ? AND CHG_NETID = ? AND CHG_EFFECTIVE_DATE <= ? AND CHG_CHARGEF = ?
Argument(s): |AR500|M1|2019-05-11|F|
20190511: 143334     DEBUG 16574[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getChg(SubscriberUpgradeMigradeBLO.java:14642) - 1 EFF DATE: 2018-04-04
20190511: 143334     DEBUG 16574[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getChg(SubscriberUpgradeMigradeBLO.java:14801) - Effective Date set to 2018-04-04
20190511: 143334     DEBUG 16574[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.ChgCharges )
20190511: 143334     DEBUG 16574[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractBLO.get(ChgChargesAbstractBLO.java:564) - get( filter )
20190511: 143334     DEBUG 16574[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractDACImpl.get(ChgChargesAbstractDACImpl.java:523) - get( filter )
20190511: 143334     DEBUG 16575[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
ChgCharges|0|equalChgCode+equalChgNetid+equalChgEffectiveDate+equalChgChargef|

20190511: 143334     DEBUG 16628[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: ChgCharges
Execute SQL Statement: SELECT CHG_CODE, CHG_DESCRIPTION, CHG_VALUE, CHG_VAT_CODE, CHG_NCODE, CHG_NETID, CHG_CHARGEF, CHG_PERIOD, CHG_FREQUENCY, CHG_EFFECTIVE_DATE, CHG_CLASS_ID
FROM CHG_CHARGES
WHERE CHG_CODE = ? AND CHG_NETID = ? AND CHG_EFFECTIVE_DATE = ? AND CHG_CHARGEF = ?
Argument(s): |AR500|M1|2018-04-04|F|
20190511: 143334     DEBUG 16630[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@106fc94
20190511: 143334     DEBUG 16725[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Opservm )
20190511: 143334     DEBUG 16726[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getOpservmDAC(BaseDACFactory.java:376) - getOpservmDAC()
20190511: 143334     DEBUG 16729[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.OpservmDACImpl com.eppixcomm.eppix.base.dml.OpservmDMLFactory@676437
20190511: 143334     DEBUG 16729[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.OpservmDACImpl
20190511: 143334     DEBUG 16731[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143334     DEBUG 16731[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.OpservmDACImpl TO MAP
20190511: 143334     DEBUG 16731[main] - com.eppixcomm.eppix.base.blo.OpservmAbstractBLO.get(OpservmAbstractBLO.java:530) - get( filter )
20190511: 143334     DEBUG 16731[main] - com.eppixcomm.eppix.base.blo.OpservmAbstractDACImpl.get(OpservmAbstractDACImpl.java:592) - get( filter )
20190511: 143334     DEBUG 16732[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Opservm|0|equalProduct|

20190511: 143334     DEBUG 16896[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Opservm
Execute SQL Statement: SELECT PRODUCT, DESCRIPTION, LONG_DESCRIPTION, UNIT_OF_SALE, VAT_CATEGORY, PROD_DISC_CODE, NOMINAL_CATEGORY, PRODUCT_GROUP_A, PRODUCT_GROUP_B, PRODUCT_GROUP_C, LIST_PRICE, COST, WEIGHT, UNIT_GROUP, VAT_INCLUSIVE_FLAG, UNIT_QTY_PER_PRICE, VAT_TYPE, STAGE_CATEGORY
FROM OPSERVM
WHERE PRODUCT = ?
Argument(s): |AR500|
20190511: 143334     DEBUG 16896[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@992bae
20190511: 143335     DEBUG 16993[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TtTypeText )
20190511: 143335     DEBUG 16993[main] - com.eppixcomm.eppix.base.blo.TtTypeTextAbstractBLO.get(TtTypeTextAbstractBLO.java:542) - get( filter )
20190511: 143335     DEBUG 16993[main] - com.eppixcomm.eppix.base.blo.TtTypeTextAbstractDACImpl.get(TtTypeTextAbstractDACImpl.java:451) - get( filter )
20190511: 143335     DEBUG 16993[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TtTypeText|0|equalTtGroup+equalTtType+equalTtLang|

20190511: 143335     DEBUG 17042[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TtTypeText
Execute SQL Statement: SELECT TT_GROUP, TT_LANG, TT_TYPE, TT_TEXT, TT_CONFIG
FROM TT_TYPE_TEXT
WHERE (TT_GROUP) = ? AND (TT_TYPE) = ? AND (TT_LANG) = ?
Argument(s): |BILLING|M|ENG|
20190511: 143335     DEBUG 17042[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@2bd3a
20190511: 143335     DEBUG 17138[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17864) - initialDate: 26 Apr 2019
20190511: 143335     DEBUG 17138[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17865) - period: M
20190511: 143335     DEBUG 17138[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17866) - freq: 1
20190511: 143335     DEBUG 17138[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17867) - day: 26
20190511: 143335     DEBUG 17139[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17868) - type: F
20190511: 143335     DEBUG 17139[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17913) - MONTH calcDate: 26 May 2019
20190511: 143335     DEBUG 17139[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7740) - LOOP POS: 0
20190511: 143335     DEBUG 17139[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17864) - initialDate: 26 May 2019
20190511: 143335     DEBUG 17139[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17865) - period: M
20190511: 143335     DEBUG 17139[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17866) - freq: 1
20190511: 143335     DEBUG 17139[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17867) - day: 26
20190511: 143335     DEBUG 17140[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17868) - type: B
20190511: 143335     DEBUG 17140[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17913) - MONTH calcDate: 26 Apr 2019
20190511: 143335     DEBUG 17140[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7761) - BEFORE BCY CHECK Y
20190511: 143335     DEBUG 17140[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7800) - BEFORE BILL CREATE
20190511: 143335     DEBUG 17143[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getVasBillLimitByMsisdnTariff
20190511: 143335     DEBUG 17143[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getVasBillLimitByMsisdnTariff|0||

20190511: 143335     DEBUG 17196[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getVasBillLimitByMsisdnTariff
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE, VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE  FROM vas_active_service, vam_active_msisdn  WHERE vas_service_code = ?  AND vam_msisdn_no = ?  AND vas_subscriber_id = vam_subscriber_id  AND (vas_intern_tariff = ?  OR vas_intern_tariff IS NULL)
Argument(s): |AMR5|833819663|ASKYL36M|
20190511: 143335     DEBUG 17196[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@26d607
20190511: 143335     DEBUG 17298[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7907) - 
========================================================
DAYS ACTIVE: 15
20190511: 143335     DEBUG 17298[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7909) - 
DAYS PERIOD: 30
20190511: 143335     DEBUG 17298[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7910) - 
FULL PERIOD: 0
20190511: 143335     DEBUG 17299[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7911) - 
FACTOR: 0.50
========================================================
20190511: 143335     DEBUG 17299[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbaSubAux )
20190511: 143335     DEBUG 17299[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractBLO.get(SbaSubAuxAbstractBLO.java:283) - get( filter )
20190511: 143335     DEBUG 17299[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractDACImpl.get(SbaSubAuxAbstractDACImpl.java:101) - get( filter )
20190511: 143335     DEBUG 17299[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbaSubAux|0|equalSbaSubscriberId|

20190511: 143335     DEBUG 17349[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbaSubAux
Execute SQL Statement: SELECT SBA_SUBSCRIBER_ID, SBA_ID_NUMBER, SBA_MATCHCODE, SBA_MARKETING, SBA_THIRD_PARTY, SBA_CUST_DEPT, SBA_DEALER_ID, SBA_DEPARTMENT, SBA_SALESMAN, SBA_REGION, SBA_INVOICE_ADDRID, SBA_INV_ACCOUNT, SBA_PREPAID_STAT, SBA_ANALYSIS_1, SBA_ANALYSIS_2, SBA_ANALYSIS_3, SBA_ANALYSIS_4, SBA_ANALYSIS_5, SBA_ANALYSIS_6, SBA_ANALYSIS_7, SBA_ANALYSIS_8, SBA_ANALYSIS_9, SBA_ANALYSIS_10, SBA_ANALYSIS_11, SBA_ANALYSIS_12, SBA_ANALYSIS_13, SBA_ANALYSIS_14, SBA_ANALYSIS_15, SBA_ANALYSIS_16, SBA_ANALYSIS_17, SBA_ANALYSIS_18, SBA_ANALYSIS_19, SBA_ANALYSIS_20, SBA_ANALYSIS_21, SBA_ANALYSIS_22, SBA_ANALYSIS_23, SBA_ANALYSIS_24, SBA_ANALYSIS_25, SBA_ANALYSIS_26, SBA_ANALYSIS_27, SBA_ANALYSIS_28, SBA_ANALYSIS_29, SBA_ANALYSIS_30,SBA_COMMENTS
FROM SBA_SUB_AUX
WHERE SBA_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143335     DEBUG 17350[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1ad98ef
20190511: 143335     DEBUG 17459[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Slcustm )
20190511: 143335     DEBUG 17460[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSlcustmDAC(BaseAbstractDACFactory.java:212) - getSlcustmDAC()
20190511: 143335     DEBUG 17472[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SlcustmDACImpl com.eppixcomm.eppix.base.dml.SlcustmAbstractDMLFactory@1eec35
20190511: 143335     DEBUG 17472[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SlcustmDACImpl
20190511: 143335     DEBUG 17475[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143335     DEBUG 17476[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SlcustmDACImpl TO MAP
20190511: 143335     DEBUG 17476[main] - com.eppixcomm.eppix.base.blo.SlcustmAbstractBLO.get(SlcustmAbstractBLO.java:679) - get( filter )
20190511: 143335     DEBUG 17476[main] - com.eppixcomm.eppix.base.blo.SlcustmAbstractDACImpl.get(SlcustmAbstractDACImpl.java:1461) - get( filter )
20190511: 143335     DEBUG 17478[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Slcustm|0|equalCustomer|

20190511: 143335     DEBUG 17745[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Slcustm
Execute SQL Statement: SELECT CUSTOMER, ALPHA, NAME, ADDRESS1, ADDRESS2, ADDRESS3, ADDRESS4, ADDRESS5, CREDIT_CATEGORY, EXPORT_INDICATOR, CUST_DISC_CODE, CURRENCY, TERRITORY, CLASS, REGION, INVOICE_CUSTOMER, STATEMENT_CUSTOMER, GROUP_CUSTOMER, DATE_LAST_ISSUE, DATE_CREATED, ANALYSIS_CODES1, ANALYSIS_CODES2, ANALYSIS_CODES3, ANALYSIS_CODES4, ANALYSIS_CODES5, REMINDER_CAT, SETTLEMENT_CODE, SETT_DAYS_CODE, PRICE_LIST, LETTER_CODE, BALANCE_FWD, CREDIT_LIMIT, YTD_SALES, YTD_COST_OF_SALES, CUMULATIVE_SALES, ORDER_BALANCE, SALES_NL_CAT, SPECIAL_PRICE, VAT_REGISTRATION, DIRECT_DEBIT, INVOICES_PRINTED, CONSOLIDATED_INV, COMMENT_ONLY_INV, BANK_ACCOUNT_NO, BANK_SORT_CODE, BANK_NAME, BANK_ADDRESS1, BANK_ADDRESS2, BANK_ADDRESS3, BANK_ADDRESS4, ANALYSIS_CODE_6, PRODUCE_STATEMENTS, EDI_CUSTOMER, VAT_TYPE, LANGUAGE, DELIVERY_METHOD, CARRIER, VAT_REG_NUMBER, VAT_EXE_NUMBER, PAYDAYS1, PAYDAYS2, PAYDAYS3, BANK_BRANCH_CODE, PRINT_CP_WITH_STAT, PAYMENT_METHOD, CUSTOMER_CLASS, SALES_TYPE, CP_LOWER_VALUE, ADDRESS6, FAX, TELEX, BTX, CP_CHARGE, CONTROL_DIGIT, PAYER, RESPONSIBILITY, DESPATCH_HELD, CREDIT_CONTROLLER, REMINDER_LETTERS, SEVERITY_DAYS1, SEVERITY_DAYS2, SEVERITY_DAYS3, SEVERITY_DAYS4, SEVERITY_DAYS5, SEVERITY_DAYS6, DELIVERY_REASON, SHIPPER_CODE1, SHIPPER_CODE2, SHIPPER_CODE3, SHIPPING_NOTE_IND, ACCOUNT_TYPE, ADMIN_FEE, INTREST_RATE
FROM SLCUSTM
WHERE (CUSTOMER) = ?
Argument(s): |A0311553|
20190511: 143335     DEBUG 17747[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@955cd5
20190511: 143335      INFO 17858[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.insertBillTable(SubscriberUpgradeMigradeBLO.java:18154) - BILL TABLE TO INSERT INTO: bill_CYC1320190426
20190511: 143335     DEBUG 17861[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BillCccccyyyymmdd )
20190511: 143335     DEBUG 17862[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getBillCccccyyyymmddDAC(BaseAbstractDACFactory.java:905) - getBillCccccyyyymmddDAC()
20190511: 143335     DEBUG 17866[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.BillCccccyyyymmddDACImpl com.eppixcomm.eppix.base.dml.BillCccccyyyymmddDMLFactory@1addb59
20190511: 143335     DEBUG 17866[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.BillCccccyyyymmddDACImpl
20190511: 143335     DEBUG 17867[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143335     DEBUG 17868[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.BillCccccyyyymmddDACImpl TO MAP
20190511: 143335     DEBUG 17868[main] - com.eppixcomm.eppix.base.blo.BillCccccyyyymmddAbstractBLO.get(BillCccccyyyymmddAbstractBLO.java:603) - get( filter )
20190511: 143335     DEBUG 17868[main] - com.eppixcomm.eppix.base.blo.BillCccccyyyymmddAbstractDACImpl.get(BillCccccyyyymmddAbstractDACImpl.java:649) - get( filter )
20190511: 143335     DEBUG 17868[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BillCccccyyyymmdd|0|equalSubscriberId+equalChaserv+equalBilldat+equalPackge|

20190511: 143336     DEBUG 18029[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: BillCccccyyyymmdd
Execute SQL Statement: SELECT BILL_ID, SUBSCRIBER_ID, HANDSET, CHASERV, BILLIND, BILLDAT, COST, CHARGE, SPARECH, INVOICE_NO, TWINBILL_NO, VATAMT, VATRATE, CYCLE_NO, VATCODE, START_PERIOD, END_PERIOD, BATCH_RUN_NUM, TIMESTAMP, CURRENCY_CHARGE, EXCHANGE_RATE, EXCH_OPERATOR, CHARGE_CLASS_ID, TECHNOLOGY, PACKAGE
FROM BILL_CCCCCYYYYMMDD
WHERE SUBSCRIBER_ID = ? AND (CHASERV) = ? AND BILLDAT = ? AND (PACKAGE) = ?
Argument(s): |607878|AR500|2019-05-11|500FF|
20190511: 143336     DEBUG 18030[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@19f3736
20190511: 143336     DEBUG 18133[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BillCccccyyyymmdd )
20190511: 143336     DEBUG 18133[main] - com.eppixcomm.eppix.base.blo.BillCccccyyyymmddAbstractBLO.modify(BillCccccyyyymmddAbstractBLO.java:388) - modify( filter )
20190511: 143336     DEBUG 18134[main] - com.eppixcomm.eppix.base.blo.BillCccccyyyymmddAbstractDACImpl.modify(BillCccccyyyymmddAbstractDACImpl.java:193) - modify( filter )
20190511: 143336     DEBUG 18134[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BillCccccyyyymmdd|16|equalBillId|

20190511: 143336     DEBUG 18893[main] - com.eppixcomm.eppix.common.data.DAOImpl.updateCustom(DAOImpl.java:2935) - updateCustom(DBO): DML Name: BillCccccyyyymmdd
Execute SQL Statement: UPDATE BILL_CCCCCYYYYMMDD SET BILLDAT = ?,BILLIND = ?,CHARGE_CLASS_ID = ?,CHARGE = ?,CHASERV = ?,CURRENCY_CHARGE = ?,CYCLE_NO = ?,END_PERIOD = ?,EXCHANGE_RATE = ?,EXCH_OPERATOR = ?,HANDSET = ?,INVOICE_NO = ?,PACKAGE = ?,SPARECH = ?,START_PERIOD = ?,SUBSCRIBER_ID = ?,TECHNOLOGY = ?,TIMESTAMP = ?,TWINBILL_NO = ?,VATAMT = ?,VATCODE = ?,VATRATE = ?
WHERE BILL_ID = ?
Argument(s): |2019-05-11|n|312|250.00|AR500|250.00|CYC13|2019-05-25|1.00|*|833819663|0|500FF|CFF             BSWAMR5|2019-05-11|607878|GSM|2019-05-11 14:33:35|0|0.00||0.00|95027|
20190511: 143336     DEBUG 18895[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.CrbCustRiskBal )
20190511: 143336     DEBUG 18895[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getCrbCustRiskBalDAC(BaseAbstractDACFactory.java:943) - getCrbCustRiskBalDAC()
20190511: 143336     DEBUG 18900[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.CrbCustRiskBalDACImpl com.eppixcomm.eppix.base.dml.CrbCustRiskBalDMLFactory@1687e7c
20190511: 143336     DEBUG 18901[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.CrbCustRiskBalDACImpl
20190511: 143336     DEBUG 18902[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143336     DEBUG 18902[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.CrbCustRiskBalDACImpl TO MAP
20190511: 143336     DEBUG 18903[main] - com.eppixcomm.eppix.base.blo.CrbCustRiskBalAbstractBLO.get(CrbCustRiskBalAbstractBLO.java:256) - get( filter )
20190511: 143336     DEBUG 18903[main] - com.eppixcomm.eppix.base.blo.CrbCustRiskBalAbstractDACImpl.get(CrbCustRiskBalAbstractDACImpl.java:96) - get( filter )
20190511: 143336     DEBUG 18903[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
crbCustRiskBal|0|equalCrbBillAcNo|

20190511: 143337     DEBUG 19064[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: crbCustRiskBal
Execute SQL Statement: SELECT CRB_BILL_AC_NO, CRB_ACCOUNT_TYPE, CRB_CREDIT_LIMIT, CRB_ACC_BAL, CRB_UNBILL_CHARGES, CRB_UNBILL_CALLS, CRB_DIFF, CRB_NEXT_THRESHOLD, CRB_PREV_THRESHOLD, CRB_COLL_PLAN, CRB_MIN_THRESHOLD, CRB_ACTIVATE_FLAG, CRB_EAP_FLAG, CRB_BL_STATUS, CRB_BL_TYPE, CRB_BL_LIMIT, CRB_BL_DIFF, CRB_BL_NEXT_THRESH, CRB_BL_PREV_THRESH, CRB_BL_NEXT_ACN_ID, CRB_BL_PREV_ACN_ID, CRB_BL_TRIG_FLAG, CRB_BL_LAST_UPDATE
FROM CRB_CUST_RISK_BAL
WHERE CRB_BILL_AC_NO = ?
Argument(s): |A0311553|
20190511: 143337     DEBUG 19065[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1cffeb4
20190511: 143337     DEBUG 19205[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.CrbCustRiskBal )
20190511: 143337     DEBUG 19206[main] - com.eppixcomm.eppix.base.blo.CrbCustRiskBalAbstractBLO.modify(CrbCustRiskBalAbstractBLO.java:159) - modify( filter )
20190511: 143337     DEBUG 19206[main] - com.eppixcomm.eppix.base.blo.CrbCustRiskBalAbstractDACImpl.modify(CrbCustRiskBalAbstractDACImpl.java:165) - modify( filter )
20190511: 143337     DEBUG 19206[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
crbCustRiskBal|16|equalCrbBillAcNo|

20190511: 143337     DEBUG 19354[main] - com.eppixcomm.eppix.common.data.DAOImpl.updateCustom(DAOImpl.java:2935) - updateCustom(DBO): DML Name: crbCustRiskBal
Execute SQL Statement: UPDATE CRB_CUST_RISK_BAL SET CRB_UNBILL_CHARGES = ?
WHERE CRB_BILL_AC_NO = ?
Argument(s): |2917.1390000000001236912794411182403564453125|A0311553|
20190511: 143337     DEBUG 19354[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.CrbCustRiskBal )
20190511: 143337     DEBUG 19355[main] - com.eppixcomm.eppix.base.blo.CrbCustRiskBalAbstractBLO.get(CrbCustRiskBalAbstractBLO.java:256) - get( filter )
20190511: 143337     DEBUG 19355[main] - com.eppixcomm.eppix.base.blo.CrbCustRiskBalAbstractDACImpl.get(CrbCustRiskBalAbstractDACImpl.java:96) - get( filter )
20190511: 143337     DEBUG 19355[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
crbCustRiskBal|0|equalCrbBillAcNo|

20190511: 143337     DEBUG 19484[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: crbCustRiskBal
Execute SQL Statement: SELECT CRB_BILL_AC_NO, CRB_ACCOUNT_TYPE, CRB_CREDIT_LIMIT, CRB_ACC_BAL, CRB_UNBILL_CHARGES, CRB_UNBILL_CALLS, CRB_DIFF, CRB_NEXT_THRESHOLD, CRB_PREV_THRESHOLD, CRB_COLL_PLAN, CRB_MIN_THRESHOLD, CRB_ACTIVATE_FLAG, CRB_EAP_FLAG, CRB_BL_STATUS, CRB_BL_TYPE, CRB_BL_LIMIT, CRB_BL_DIFF, CRB_BL_NEXT_THRESH, CRB_BL_PREV_THRESH, CRB_BL_NEXT_ACN_ID, CRB_BL_PREV_ACN_ID, CRB_BL_TRIG_FLAG, CRB_BL_LAST_UPDATE
FROM CRB_CUST_RISK_BAL
WHERE CRB_BILL_AC_NO = ?
Argument(s): |A0311553|
20190511: 143337     DEBUG 19485[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1c50507
20190511: 143337     DEBUG 19601[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19580) - Step 1
20190511: 143337     DEBUG 19601[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19593) - ACCOUNT BALANCE: 2213.01
20190511: 143337     DEBUG 19601[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19594) - UNBILL CHARGES: 2917.1390000000001236912794411182403564453125
20190511: 143337     DEBUG 19601[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19595) - UNBILL CALLS: 0
20190511: 143337     DEBUG 19601[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19596) - CREDIT LIMIT: 4399.27000000000043655745685100555419921875
20190511: 143337     DEBUG 19602[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19604) - CrValue: 2213.0166309615004307529072134934446408026057
20190511: 143337     DEBUG 19602[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19611) - Step 2
20190511: 143337     DEBUG 19603[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19627) - Step 3
20190511: 143337     DEBUG 19603[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19695) - Step 4
20190511: 143337     DEBUG 19603[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19704) - Step 5
20190511: 143337     DEBUG 19603[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19735) - Step 6
20190511: 143337     DEBUG 19603[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19743) - Step 7
20190511: 143337     DEBUG 19605[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BlhBillLimitHd )
20190511: 143337     DEBUG 19606[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getBlhBillLimitHdDAC(BaseAbstractDACFactory.java:930) - getBlhBillLimitHdDAC()
20190511: 143337     DEBUG 19609[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.BlhBillLimitHdDACImpl com.eppixcomm.eppix.base.dml.BlhBillLimitHdDMLFactory@b122a1
20190511: 143337     DEBUG 19609[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.BlhBillLimitHdDACImpl
20190511: 143337     DEBUG 19611[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143337     DEBUG 19611[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.BlhBillLimitHdDACImpl TO MAP
20190511: 143337     DEBUG 19611[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractBLO.iterate(BlhBillLimitHdAbstractBLO.java:248) - iterate( filter )
20190511: 143337     DEBUG 19611[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractDACImpl.iterate(BlhBillLimitHdAbstractDACImpl.java:120) - iterate( filter )
20190511: 143337     DEBUG 19612[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BlhBillLimitHd|0|equalBlhSubscriberId|

20190511: 143337     DEBUG 19802[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: BlhBillLimitHd
Execute SQL Statement: SELECT BLH_SUBSCRIBER_ID, BLH_SERVICE_CODE, BLH_BILL_LIMIT_VAL, BLH_LEVEL,BLH_TYPE, BLH_VAT_IND, BLH_UNBILL_USAGE, BLH_UNBILL_CHARGES, BLH_DIFF,BLH_USER_STATUS, BLH_NEXT_THRESHOLD, BLH_PREV_THRESHOLD, BLH_NEXT_ACN_ID,BLH_PREV_ACN_ID, BLH_NETWORK_ACN, BLH_TRIG_FLAG, BLH_LAST_UPDATE
FROM BLH_BILL_LIMIT_HD
WHERE BLH_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143337     DEBUG 19803[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@f18e8e
20190511: 143337     DEBUG 19803[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BlhBillLimitHd )
20190511: 143337     DEBUG 19803[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractBLO.modify(BlhBillLimitHdAbstractBLO.java:181) - modify( filter )
20190511: 143337     DEBUG 19804[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractDACImpl.modify(BlhBillLimitHdAbstractDACImpl.java:165) - modify( filter )
20190511: 143337     DEBUG 19804[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BlhBillLimitHd|16|equalBlhSubscriberId+equalBlhServiceCode|

20190511: 143338     DEBUG 19951[main] - com.eppixcomm.eppix.common.data.DAOImpl.updateCustom(DAOImpl.java:2935) - updateCustom(DBO): DML Name: BlhBillLimitHd
Execute SQL Statement: UPDATE BLH_BILL_LIMIT_HD SET BLH_UNBILL_CHARGES = ?
WHERE BLH_SUBSCRIBER_ID = ? AND BLH_SERVICE_CODE = ?
Argument(s): |860.02899999999999636202119290828704833984375|607878|SUL|
20190511: 143338     DEBUG 19951[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BlhBillLimitHd )
20190511: 143338     DEBUG 19952[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractBLO.iterate(BlhBillLimitHdAbstractBLO.java:248) - iterate( filter )
20190511: 143338     DEBUG 19952[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractDACImpl.iterate(BlhBillLimitHdAbstractDACImpl.java:120) - iterate( filter )
20190511: 143338     DEBUG 19952[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BlhBillLimitHd|0|equalBlhSubscriberId|

20190511: 143338     DEBUG 20124[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: BlhBillLimitHd
Execute SQL Statement: SELECT BLH_SUBSCRIBER_ID, BLH_SERVICE_CODE, BLH_BILL_LIMIT_VAL, BLH_LEVEL,BLH_TYPE, BLH_VAT_IND, BLH_UNBILL_USAGE, BLH_UNBILL_CHARGES, BLH_DIFF,BLH_USER_STATUS, BLH_NEXT_THRESHOLD, BLH_PREV_THRESHOLD, BLH_NEXT_ACN_ID,BLH_PREV_ACN_ID, BLH_NETWORK_ACN, BLH_TRIG_FLAG, BLH_LAST_UPDATE
FROM BLH_BILL_LIMIT_HD
WHERE BLH_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143338     DEBUG 20125[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@15311bd
20190511: 143338     DEBUG 20125[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.updateBillLimDiff(SubscriberUpgradeMigradeBLO.java:19232) - no
20190511: 143338     DEBUG 20126[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.updateBillLimDiff(SubscriberUpgradeMigradeBLO.java:19248) - RETURN VALUE: 0
20190511: 143338     DEBUG 20126[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BlhBillLimitHd )
20190511: 143338     DEBUG 20126[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractBLO.iterate(BlhBillLimitHdAbstractBLO.java:248) - iterate( filter )
20190511: 143338     DEBUG 20126[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractDACImpl.iterate(BlhBillLimitHdAbstractDACImpl.java:120) - iterate( filter )
20190511: 143338     DEBUG 20126[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BlhBillLimitHd|0|equalBlhSubscriberId|

20190511: 143338     DEBUG 20225[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: BlhBillLimitHd
Execute SQL Statement: SELECT BLH_SUBSCRIBER_ID, BLH_SERVICE_CODE, BLH_BILL_LIMIT_VAL, BLH_LEVEL,BLH_TYPE, BLH_VAT_IND, BLH_UNBILL_USAGE, BLH_UNBILL_CHARGES, BLH_DIFF,BLH_USER_STATUS, BLH_NEXT_THRESHOLD, BLH_PREV_THRESHOLD, BLH_NEXT_ACN_ID,BLH_PREV_ACN_ID, BLH_NETWORK_ACN, BLH_TRIG_FLAG, BLH_LAST_UPDATE
FROM BLH_BILL_LIMIT_HD
WHERE BLH_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143338     DEBUG 20226[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@b1aebf
20190511: 143338     DEBUG 20226[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.updateBillLimDiff(SubscriberUpgradeMigradeBLO.java:19232) - no
20190511: 143338     DEBUG 20226[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.updateBillLimDiff(SubscriberUpgradeMigradeBLO.java:19248) - RETURN VALUE: 0
20190511: 143338     DEBUG 20226[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.MshMsisdnHistory )
20190511: 143338     DEBUG 20227[main] - com.eppixcomm.eppix.base.blo.MshMsisdnHistoryAbstractBLO.create(MshMsisdnHistoryAbstractBLO.java:138) - create( mshMsisdnHistoryDMO )
20190511: 143338     DEBUG 20227[main] - com.eppixcomm.eppix.base.blo.MshMsisdnHistoryAbstractDACImpl.create(MshMsisdnHistoryAbstractDACImpl.java:98) - create( mshMsisdnHistoryDMO )
20190511: 143338     DEBUG 20227[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
MshMsisdnHistory|11||

20190511: 143338     DEBUG 20227[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 607878|833819663      |BSWA      | CFFAR500250.00 AMR5                              |||2019-05-11 14:33:38
20190511: 143338     DEBUG 20347[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: MshMsisdnHistory
Execute SQL Statement: INSERT INTO MSH_MSISDN_HISTORY (MSH_SUBSCRIBER_ID, MSH_MSISDN_NO, MSH_HIST_CODE, MSH_COMMENT, MSH_USER_ID, MSH_TERMINAL_ID, MSH_TIMESTAMP) VALUES (?,?,?,?,?,?,?)
Argument(s): |607878|833819663      |BSWA      | CFFAR500250.00 AMR5                              |||2019-05-11 14:33:38|
20190511: 143338     DEBUG 20347[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.ShcSmsHistcode )
20190511: 143338     DEBUG 20347[main] - com.eppixcomm.eppix.base.blo.ShcSmsHistcodeAbstractBLO.get(ShcSmsHistcodeAbstractBLO.java:267) - get( filter )
20190511: 143338     DEBUG 20347[main] - com.eppixcomm.eppix.base.blo.ShcSmsHistcodeAbstractDACImpl.get(ShcSmsHistcodeAbstractDACImpl.java:192) - get( filter )
20190511: 143338     DEBUG 20348[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
ShcSmsHistcode|0|equalShcHistCode|

20190511: 143338     DEBUG 20395[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: ShcSmsHistcode
Execute SQL Statement: SELECT SHC_MESG_ID, SHC_HIST_CODE 
FROM shc_sms_histcode
WHERE SHC_HIST_CODE = ? 
Argument(s): |BSWA|
20190511: 143338     DEBUG 20497[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsmServiceMsisdn )
20190511: 143338     DEBUG 20498[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractBLO.modify(VsmServiceMsisdnAbstractBLO.java:369) - modify( filter )
20190511: 143338     DEBUG 20498[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractDACImpl.modify(VsmServiceMsisdnAbstractDACImpl.java:181) - modify( filter )
20190511: 143338     DEBUG 20498[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsmServiceMsisdn|16|equalVsmSubscriberId+equalVsmMsisdnNo+equalVsmServiceCode|

20190511: 143338     DEBUG 20773[main] - com.eppixcomm.eppix.common.data.DAOImpl.updateCustom(DAOImpl.java:2935) - updateCustom(DBO): DML Name: VsmServiceMsisdn
Execute SQL Statement: UPDATE VSM_SERVICE_MSISDN SET VSM_BILLED_UPTO = ?
WHERE VSM_SUBSCRIBER_ID = ? AND (VSM_MSISDN_NO) = ? AND (VSM_SERVICE_CODE) = ?
Argument(s): |2019-05-25|607878|833819663|AMR5|
20190511: 143338     DEBUG 20773[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getScv
20190511: 143338     DEBUG 20774[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getScv|0||

20190511: 143339     DEBUG 20921[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getScv
Execute SQL Statement: SELECT SCV_SUBSCRIBER_ID, SCV_CRM_VALUE, SCV_TYPE FROM SCV_SUB_CRM_VALUE WHERE SCV_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143339     DEBUG 20921[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1372656
20190511: 143339     DEBUG 21027[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190511: 143339     DEBUG 21027[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190511: 143339     DEBUG 21027[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190511: 143339     DEBUG 21028[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190511: 143339     DEBUG 21075[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143339     DEBUG 21076[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1b6101e
20190511: 143339     DEBUG 21179[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbaSubAux )
20190511: 143339     DEBUG 21179[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractBLO.get(SbaSubAuxAbstractBLO.java:283) - get( filter )
20190511: 143339     DEBUG 21179[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractDACImpl.get(SbaSubAuxAbstractDACImpl.java:101) - get( filter )
20190511: 143339     DEBUG 21180[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbaSubAux|0|equalSbaSubscriberId|

20190511: 143339     DEBUG 21233[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbaSubAux
Execute SQL Statement: SELECT SBA_SUBSCRIBER_ID, SBA_ID_NUMBER, SBA_MATCHCODE, SBA_MARKETING, SBA_THIRD_PARTY, SBA_CUST_DEPT, SBA_DEALER_ID, SBA_DEPARTMENT, SBA_SALESMAN, SBA_REGION, SBA_INVOICE_ADDRID, SBA_INV_ACCOUNT, SBA_PREPAID_STAT, SBA_ANALYSIS_1, SBA_ANALYSIS_2, SBA_ANALYSIS_3, SBA_ANALYSIS_4, SBA_ANALYSIS_5, SBA_ANALYSIS_6, SBA_ANALYSIS_7, SBA_ANALYSIS_8, SBA_ANALYSIS_9, SBA_ANALYSIS_10, SBA_ANALYSIS_11, SBA_ANALYSIS_12, SBA_ANALYSIS_13, SBA_ANALYSIS_14, SBA_ANALYSIS_15, SBA_ANALYSIS_16, SBA_ANALYSIS_17, SBA_ANALYSIS_18, SBA_ANALYSIS_19, SBA_ANALYSIS_20, SBA_ANALYSIS_21, SBA_ANALYSIS_22, SBA_ANALYSIS_23, SBA_ANALYSIS_24, SBA_ANALYSIS_25, SBA_ANALYSIS_26, SBA_ANALYSIS_27, SBA_ANALYSIS_28, SBA_ANALYSIS_29, SBA_ANALYSIS_30,SBA_COMMENTS
FROM SBA_SUB_AUX
WHERE SBA_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190511: 143339     DEBUG 21234[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1815bfb
20190511: 143339     DEBUG 21339[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.AuxCustomers )
20190511: 143339     DEBUG 21340[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getAuxCustomersDAC(BaseAbstractDACFactory.java:122) - getAuxCustomersDAC()
20190511: 143339     DEBUG 21350[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.AuxCustomersDACImpl com.eppixcomm.eppix.base.dml.AuxCustomersDMLFactory@ae533a
20190511: 143339     DEBUG 21350[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.AuxCustomersDACImpl
20190511: 143339     DEBUG 21354[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143339     DEBUG 21354[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.AuxCustomersDACImpl TO MAP
20190511: 143339     DEBUG 21354[main] - com.eppixcomm.eppix.base.blo.AuxCustomersAbstractBLO.get(AuxCustomersAbstractBLO.java:689) - get( filter )
20190511: 143339     DEBUG 21355[main] - com.eppixcomm.eppix.base.blo.AuxCustomersAbstractDACImpl.get(AuxCustomersAbstractDACImpl.java:1309) - get( filter )
20190511: 143339     DEBUG 21358[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
AuxCustomers|0|equalBillAcNo|

20190511: 143339     DEBUG 21545[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: AuxCustomers
Execute SQL Statement: SELECT AUX_TITLE, AUX_FIRSTNAME, AUX_INVOICE_ADDRID, BANK_NAME, BANK_ADDR1, BANK_ADDR2, BANK_AC_NAME, REF, BANK_SCODE, BANK_AC_NO, BANK_AC_TYPE, BANK_PAY_TYPE, AUX_PREF_DEBIT_DAY, BILL_AC_NO, PROTECT_CODE, HANDSET_CT, BANK_DATE, CONF_DATE, AUX_COMMENT, DATE_OF_BIRTH, REF_PAY_DATE, AC_CLOS_DATE, NO_REAS_DATE, REM_LET_DATE, AC_TRAN_DATE, NO_AC_DATE, SR_FLAG, PROCESSED, PACKAGE_CODE, AUX_ACCOUNT_TYPE, AUX_BILL_CYCLE, CREDIT_CARD_NO, CREDIT_CARD_NAME, EXPIRY_DATE, AUX_CARD_CVV_NO, CREDIT_SCORE, SERV_PROV_ID, DEALER_ID, SALESMAN, ID_NUMBER, ACC_STATUS, COMP_REG_NO, STATIONARY_TYPE, MAX_NO_SUBS, AUX_CURRENCY, AUX_COUNTRY_CODE, AUX_GENDER, AUX_SUB_GRP_ACC_NO, AUX_PREPAID_STAT, AUX_CREDIT_CLASS, AUX_AUTO_LIMIT_IND, AUX_LMT_UP_VAL, AUX_LMT_DN_VAL, AUX_ANALYSIS_1, AUX_ANALYSIS_2, AUX_ANALYSIS_3, AUX_ANALYSIS_4, AUX_ANALYSIS_5, AUX_ANALYSIS_6, AUX_ANALYSIS_7, AUX_ANALYSIS_8, AUX_ANALYSIS_9, AUX_ANALYSIS_10, AUX_ANALYSIS_11, AUX_ANALYSIS_12, AUX_ANALYSIS_13, AUX_ANALYSIS_14, AUX_ANALYSIS_15, AUX_ANALYSIS_16, AUX_ANALYSIS_17, AUX_ANALYSIS_18, AUX_ANALYSIS_19, AUX_ANALYSIS_20, AUX_ANALYSIS_21, AUX_ANALYSIS_22, AUX_ANALYSIS_23, AUX_ANALYSIS_24, AUX_ANALYSIS_25, AUX_ANALYSIS_26, AUX_ANALYSIS_27, AUX_ANALYSIS_28, AUX_ANALYSIS_29, AUX_ANALYSIS_30
FROM AUX_CUSTOMERS
WHERE (BILL_AC_NO) = ?
Argument(s): |A0311553|
20190511: 143339     DEBUG 21546[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@15fc40c
20190511: 143339     DEBUG 21646[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getSerialCustomer
20190511: 143339     DEBUG 21647[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getSerialCustomer|0||

20190511: 143339     DEBUG 21796[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getSerialCustomer
Execute SQL Statement: SELECT SC_SERIAL, SC_BILL_AC_NO FROM SC_SERIAL_CUSTOMER WHERE SC_BILL_AC_NO = ?
Argument(s): |A0311553|
20190511: 143339     DEBUG 21796[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@e49dcd
20190511: 143339     DEBUG 21891[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getEppixHierarchyByTypeSubscriber|0|NONE|

20190511: 143340     DEBUG 22058[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getEppixHierarchyByTypeSubscriber
Execute SQL Statement: SELECT EH_SERIAL, EH_ENTITY_ID, EH_TYPE, EH_VALUE, EH_LINK, EH_HIER_TYPE FROM EH_EPPIX_HIERARCHY WHERE EH_TYPE = 'SUBSCRIBER' AND EH_ENTITY_ID = ? 
Argument(s): |607878|
20190511: 143340     DEBUG 22109[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getVsmUniqueServiceCodeBySubsciber|0|NONE|

20190511: 143340     DEBUG 22265[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getVsmUniqueServiceCodeBySubsciber
Execute SQL Statement: select vsm_service_code from vsm_service_msisdn	where vsm_subscriber_id = ? group by vsm_service_code
Argument(s): |607878|
20190511: 143340     DEBUG 22265[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@10b9279
20190511: 143340     DEBUG 22265[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@bd6a5f
20190511: 143340     DEBUG 22265[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@192a848
20190511: 143340     DEBUG 22266[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@16614e7
20190511: 143340     DEBUG 22266[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@e66f56
20190511: 143340     DEBUG 22266[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@979e8b
20190511: 143340     DEBUG 22266[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@29ce8c
20190511: 143340     DEBUG 22266[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@b754b2
20190511: 143340     DEBUG 22266[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@197bb7
20190511: 143340     DEBUG 22266[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1094d48
20190511: 143340     DEBUG 22266[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1b0bdc8
20190511: 143340     DEBUG 22266[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@7bc899
20190511: 143340     DEBUG 22266[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@aeea66
20190511: 143340     DEBUG 22267[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@19eda2c
20190511: 143340     DEBUG 22268[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1fdadcd
20190511: 143340     DEBUG 22268[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@19d75ee
20190511: 143340     DEBUG 22268[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@a98932
20190511: 143340     DEBUG 22268[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@6e4365
20190511: 143340     DEBUG 22268[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@10ab09f
20190511: 143340     DEBUG 22268[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@d1c778
20190511: 143340     DEBUG 22268[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@7eb366
20190511: 143340     DEBUG 22323[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 1
20190511: 143340     DEBUG 22323[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 2
20190511: 143340     DEBUG 22323[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22323[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22323[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22323[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22323[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22323[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22324[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22324[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22324[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22324[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22324[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22324[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22324[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22324[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22324[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22324[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22325[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22325[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22325[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22326[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22326[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22326[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22326[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22326[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22326[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22326[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22326[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22326[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22326[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22326[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22327[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22327[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22327[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22327[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22327[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22327[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22327[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22327[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22327[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16840) - 
LINK TO CREATE QUAL KEY 2: 0
20190511: 143340     DEBUG 22327[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 4
20190511: 143340     DEBUG 22327[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 8
20190511: 143340     DEBUG 22328[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 16
20190511: 143340     DEBUG 22328[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 32
20190511: 143340     DEBUG 22328[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22328[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22328[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22328[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22329[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22329[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22329[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22329[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22329[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22329[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22329[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22329[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22329[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22330[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22330[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22330[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22330[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22330[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22330[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22330[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22330[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 64
20190511: 143340     DEBUG 22330[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 128
20190511: 143340     DEBUG 22330[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16970) - QUALIFICATION VALUE: 256
20190511: 143340     DEBUG 22331[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSdiSubsDiscountNotByQualId(SubscriberUpgradeMigradeBLO.java:20217) - 
SELECT SDI_SUB_DISC_ID,SDI_SUBSCRIBER_ID,SDI_DISCOUNT_ID,SDI_START_DATE,SDI_END_DATE,SDI_SUSPEND_DATE,SDI_QUAL_ID,SDI_QUAL_TYPE,SDI_PACKAGE_CODE,SDI_TARIFF_PLAN,SDI_SERVICE_CODE,SDI_PAYMENT_TYPE,SDI_ACCOUNT_TYPE,SDI_DISCOUNT_UPTO FROM SDI_SUBS_DISCOUNT WHERE SDI_SUBSCRIBER_ID = 607878 AND sdi_qual_id NOT IN (SELECT dqk_qual_id FROM dqk_disc_qual_key WHERE dqk_key_val IN  (2,4,6,10,18,34,66,130,258) AND dqk_key IN  ('ISIS','ISISA0311553','ISIS0','ISIS500FF','ISISACCDO','ISISHV','ISISAM10','ISISAM50','ISISAMR5','ISISAPNA','ISISAPNW','ISISBCDF','ISISBSTL','ISISCSCP','ISISGPRS','ISISITBL','ISISMEXU','ISISMMSS','ISISNBUN','ISISNDEP','ISISNPRO','ISISNUL ','ISISPSF ','ISISRSMS','ISISSPUL','ISISSUL ','ISISVCMA','ISISASKYL36M','ISISEXCEL') AND dqk_from  <= '43595' AND dqk_to >= '43595') AND sdi_end_date IS NULL  AND sdi_qual_id IS NOT NULL
20190511: 143340     DEBUG 22483[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getDiqDiscountQualByQualId(SubscriberUpgradeMigradeBLO.java:21934) - 
SELECT DIQ_QUAL_DESC, DIQ_QUAL_TYPE, DIQ_START_DATE, 
DIQ_END_DATE, DIQ_PACKAGE_CODE, DIQ_PACK_AFFECT, 
DIQ_TARIFF_PLAN, DIQ_TAR_AFFECT, DIQ_SERVICE_CODE, 
DIQ_SERV_AFFECT, DIQ_PAYMENT_TYPE, DIQ_PAY_AFFECT, 
DIQ_ACCOUNT_TYPE, DIQ_ACC_AFFECT, DIQ_DISCOUNT_ID, 
DIQ_USED FROM DIQ_DISCOUNT_QUAL 
 WHERE DIQ_QUAL_ID IN (  SELECT DQK_QUAL_ID 
 FROM DQK_DISC_QUAL_KEY 
 WHERE DQK_KEY_VAL IN  (2,4,6,10,18,34,66,130,258)
 AND DQK_KEY IN  ('ISIS','ISISA0311553','ISIS0','ISIS500FF','ISISACCDO','ISISHV','ISISAM10','ISISAM50','ISISAMR5','ISISAPNA','ISISAPNW','ISISBCDF','ISISBSTL','ISISCSCP','ISISGPRS','ISISITBL','ISISMEXU','ISISMMSS','ISISNBUN','ISISNDEP','ISISNPRO','ISISNUL ','ISISPSF ','ISISRSMS','ISISSPUL','ISISSUL ','ISISVCMA','ISISASKYL36M','ISISEXCEL') AND DQK_FROM  <= 43595
 AND DQK_TO >= 43595
 AND DQK_QUAL_ID NOT IN ( 
 SELECT NVL(SDI_QUAL_ID, 0)  FROM SDI_SUBS_DISCOUNT 
 WHERE SDI_SUBSCRIBER_ID = 607878 AND SDI_END_DATE IS NULL))
20190511: 143340     DEBUG 22653[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.serviceCreateNonBasicN2N(SubscriberUpgradeMigradeBLO.java:46042) - 
Integer subscriberId: 607878
String simNo: 0004102502505
String newSim: N
String serviceExists: 
Integer priority: 5
String pCommand: 
Integer seqNo: 0
String netServCode: AMR500
String message: MODIFY_SERVICES
String serviceType: SW
String primarySIM: 
String primaryMSISDN: 
String secondMSISDN: 
String serviceCode: AMR5
String location: M1
String applyOption: MODIFY
Date activateDate: 2019-05-11
short depReqd: 0
20190511: 143340     DEBUG 22653[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190511: 143340     DEBUG 22654[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.get(VamActiveMsisdnAbstractBLO.java:654) - get( filter )
20190511: 143340     DEBUG 22655[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.get(VamActiveMsisdnAbstractDACImpl.java:683) - get( filter )
20190511: 143340     DEBUG 22655[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId+equalVamSimNo+equalVamHierarchy+INVamStatCode_3|

20190511: 143340     DEBUG 22815[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ? AND (VAM_SIM_NO) = ? AND (VAM_HIERARCHY) = ? AND VAM_STAT_CODE IN ( ? , ? , ? )
Argument(s): |607878|0004102502505|0|1|4|6|
20190511: 143340     DEBUG 22816[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@19113f8
20190511: 143341     DEBUG 22917[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190511: 143341     DEBUG 22918[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSysdirmDAC(BaseAbstractDACFactory.java:327) - getSysdirmDAC()
20190511: 143341     DEBUG 22922[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SysdirmDACImpl com.eppixcomm.eppix.base.dml.SysdirmAbstractDMLFactory@15aed57
20190511: 143341     DEBUG 22922[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SysdirmDACImpl
20190511: 143341     DEBUG 22923[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143341     DEBUG 22923[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SysdirmDACImpl TO MAP
20190511: 143341     DEBUG 22924[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190511: 143341     DEBUG 22924[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190511: 143341     DEBUG 22925[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190511: 143341     DEBUG 23080[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASSWITCHM1|
20190511: 143341     DEBUG 23080[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@2acc57
20190511: 143341     DEBUG 23186[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190511: 143341     DEBUG 23186[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190511: 143341     DEBUG 23186[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190511: 143341     DEBUG 23186[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190511: 143341     DEBUG 23239[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASIMSIALGO|
20190511: 143341     DEBUG 23240[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1cd66ea
20190511: 143341     DEBUG 23334[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9345) - 
=======================================================================================
PARAM OPTION: ALL
PARAM SIM NO: 0004102502505
PARAM NETWORK ID: 
PARAM HLR: 
PARAM DEALER ID: 
PARAM CUSTOMER: 
=======================================================================================
20190511: 143341     DEBUG 23335[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SacSimAssignCus )
20190511: 143341     DEBUG 23335[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractBLO.get(SacSimAssignCusAbstractBLO.java:287) - get( filter )
20190511: 143341     DEBUG 23335[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractDACImpl.get(SacSimAssignCusAbstractDACImpl.java:205) - get( filter )
20190511: 143341     DEBUG 23335[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SacSimAssignCus|0|equalSacSimNo|

20190511: 143341     DEBUG 23386[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SacSimAssignCus
Execute SQL Statement: SELECT SAC_BILL_AC_NO, SAC_SIM_NO 
FROM sac_sim_assign_cus
WHERE SAC_SIM_NO = ? 
Argument(s): |0004102502505|
20190511: 143341      INFO 23480[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9974) - Passed customer no  not found in Sac_Sim_assign_cus
20190511: 143341     DEBUG 23480[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190511: 143341     DEBUG 23480[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190511: 143341     DEBUG 23480[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190511: 143341     DEBUG 23481[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo|

20190511: 143341     DEBUG 23532[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ?
Argument(s): |0004102502505|
20190511: 143341     DEBUG 23533[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@6b9c84
20190511: 143341     DEBUG 23643[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:10065) - NETWORK PARAMS: OPTION: ALL NETWORK ID:  NETWORKID.LENGTH: 0
20190511: 143341     DEBUG 23644[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190511: 143341     DEBUG 23644[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.get(VamActiveMsisdnAbstractBLO.java:654) - get( filter )
20190511: 143341     DEBUG 23644[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.get(VamActiveMsisdnAbstractDACImpl.java:683) - get( filter )
20190511: 143341     DEBUG 23644[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamMsisdnNo|

20190511: 143341     DEBUG 23812[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE (VAM_MSISDN_NO) = ?
Argument(s): |833819663|
20190511: 143341     DEBUG 23813[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@f0b7f8
20190511: 143342     DEBUG 23913[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VpnProviderNetwk )
20190511: 143342     DEBUG 23914[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVpnProviderNetwkDAC(BaseAbstractDACFactory.java:435) - getVpnProviderNetwkDAC()
20190511: 143342     DEBUG 23916[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VpnProviderNetwkDACImpl com.eppixcomm.eppix.base.dml.VpnProviderNetwkDMLFactory@1947496
20190511: 143342     DEBUG 23917[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VpnProviderNetwkDACImpl
20190511: 143342     DEBUG 23919[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143342     DEBUG 23919[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VpnProviderNetwkDACImpl TO MAP
20190511: 143342     DEBUG 23919[main] - com.eppixcomm.eppix.base.blo.VpnProviderNetwkAbstractBLO.iterate(VpnProviderNetwkAbstractBLO.java:500) - iterate( filter )
20190511: 143342     DEBUG 23919[main] - com.eppixcomm.eppix.base.blo.VpnProviderNetwkAbstractDACImpl.iterate(VpnProviderNetwkAbstractDACImpl.java:421) - iterate( filter )
20190511: 143342     DEBUG 23919[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VpnProviderNetwk|0|VpnNetworkPrefixMatch|

20190511: 143342     DEBUG 24074[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VpnProviderNetwk
Execute SQL Statement: SELECT VPN_PROVIDER_ID, VPN_NETWORK_PREFIX, VPN_MSISDN_MASK, VPN_SIM_MASK
FROM VPN_PROVIDER_NETWK
WHERE VPN_NETWORK_PREFIX LIKE ?
Argument(s): |%83%|
20190511: 143342     DEBUG 24074[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1b4a74b
20190511: 143342     DEBUG 24122[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190511: 143342     DEBUG 24122[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190511: 143342     DEBUG 24122[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190511: 143342     DEBUG 24123[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190511: 143342     DEBUG 24170[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNUBLOCK|
20190511: 143342     DEBUG 24170[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@15356d5
20190511: 143342     DEBUG 24278[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getImsiRestriction|0|NONE|

20190511: 143342     DEBUG 24447[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getImsiRestriction
Execute SQL Statement: SELECT UNIQUE(vas_active_service.vas_service_type) FROM vam_active_msisdn, vas_active_service, vsm_service_msisdn  WHERE vam_subscriber_id = ?  AND   vam_sim_no        = ?  AND   vam_subscriber_id = vas_subscriber_id AND   vas_service_type  IN ('NR','HR','HF') AND   vas_service_code  = vsm_service_code AND   vsm_msisdn_no     = vam_msisdn_no AND   vsm_subscriber_id = vam_subscriber_id ORDER BY vas_service_type
Argument(s): |607878|0004102502505|
20190511: 143342     DEBUG 24492[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190511: 143342     DEBUG 24492[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190511: 143342     DEBUG 24492[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190511: 143342     DEBUG 24493[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190511: 143342     DEBUG 24546[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNDEFRR|
20190511: 143342     DEBUG 24547[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@e1eea8
20190511: 143342     DEBUG 24644[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getImsiCategory|0|NONE|

20190511: 143342     DEBUG 24796[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getImsiCategory
Execute SQL Statement: SELECT vas_active_service.vas_service_type FROM vam_active_msisdn, vas_active_service, vsm_service_msisdn  WHERE vam_subscriber_id = ? AND vam_sim_no = ? AND vam_subscriber_id = vas_subscriber_id AND vas_service_type = 'HB' AND vas_service_code = vsm_service_code AND vsm_msisdn_no = vam_msisdn_no AND vsm_subscriber_id = vam_subscriber_id ORDER BY vas_service_type
Argument(s): |607878|0004102502505|
20190511: 143342     DEBUG 24852[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190511: 143342     DEBUG 24852[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190511: 143342     DEBUG 24852[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190511: 143342     DEBUG 24853[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190511: 143342     DEBUG 24902[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNDEFACT|
20190511: 143342     DEBUG 24902[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@fb6354
20190511: 143343     DEBUG 25001[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SfeSimFutEvent )
20190511: 143343     DEBUG 25002[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSfeSimFutEventDAC(BaseAbstractDACFactory.java:1153) - getSfeSimFutEventDAC()
20190511: 143343     DEBUG 25005[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SfeSimFutEventDACImpl com.eppixcomm.eppix.base.dml.SfeSimFutEventDMLFactory@f593af
20190511: 143343     DEBUG 25006[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SfeSimFutEventDACImpl
20190511: 143343     DEBUG 25008[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143343     DEBUG 25008[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SfeSimFutEventDACImpl TO MAP
20190511: 143343     DEBUG 25009[main] - com.eppixcomm.eppix.base.blo.SfeSimFutEventAbstractBLO.get(SfeSimFutEventAbstractBLO.java:341) - get( filter )
20190511: 143343     DEBUG 25009[main] - com.eppixcomm.eppix.base.blo.SfeSimFutEventAbstractDACImpl.get(SfeSimFutEventAbstractDACImpl.java:326) - get( filter )
20190511: 143343     DEBUG 25009[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SfeSimFutEvent|0|equalSfeSimNo+equalSfeFutEventId+nullSfeMsisdnNo+nullSfeServiceCode|

20190511: 143343     DEBUG 25159[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SfeSimFutEvent
Execute SQL Statement: SELECT SFE_COMMAND,SFE_FUT_EVENT_ID,SFE_SUBSCRIBER_ID,SFE_SIM_NO,SFE_MSISDN_NO,SFE_SERVICE_CODE,SFE_EVENT_DATE,SFE_TIMESTAMP,SFE_ERROR_COMMENT,SFE_ORIG_STATUS
FROM SFE_SIM_FUT_EVENT
WHERE SFE_SIM_NO = ?  AND SFE_FUT_EVENT_ID = ?  AND (SFE_MSISDN_NO IS NULL OR LENGTH(SFE_MSISDN_NO) IS NULL OR LENGTH(SFE_MSISDN_NO) = 0) AND (SFE_SERVICE_CODE IS NULL OR LENGTH(SFE_SERVICE_CODE) IS NULL OR LENGTH(SFE_SERVICE_CODE) = 0)
Argument(s): |0004102502505|SIM_ACTIVATE|
20190511: 143343     DEBUG 25260[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getNmMsisdnVam
20190511: 143343     DEBUG 25261[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getNmMsisdnVam|0||

20190511: 143343     DEBUG 25427[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getNmMsisdnVam
Execute SQL Statement: SELECT NM_INTERNAL_TARIFF, NM_NETWORK_TARIFF, NM_CONTRACT_PERIOD, NM_NTWRK_CONTR_PER, NM_MIN_CANC_PERIOD, NM_HIGHER_MIG_TYPE, NM_LOWER_MIG_TYPE, NM_SAME_MIG_TYPE, NM_NETWORK_ID, NM_NET_TYPE FROM nm_netmat, vam_active_msisdn WHERE vam_msisdn_no = ?  AND vam_intern_tariff = nm_internal_tariff
Argument(s): |833819663|
20190511: 143343     DEBUG 25427[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1ee2c2c
20190511: 143343     DEBUG 25545[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NgsNetGroupServ )
20190511: 143343     DEBUG 25546[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getNgsNetGroupServDAC(BaseAbstractDACFactory.java:748) - getNgsNetGroupServDAC()
20190511: 143343     DEBUG 25549[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.NgsNetGroupServDACImpl com.eppixcomm.eppix.base.dml.NgsNetGroupServAbstractDMLFactory@9505f
20190511: 143343     DEBUG 25550[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.NgsNetGroupServDACImpl
20190511: 143343     DEBUG 25551[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143343     DEBUG 25551[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.NgsNetGroupServDACImpl TO MAP
20190511: 143343     DEBUG 25552[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractBLO.iterate(NgsNetGroupServAbstractBLO.java:563) - iterate( filter )
20190511: 143343     DEBUG 25552[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractDACImpl.iterate(NgsNetGroupServAbstractDACImpl.java:618) - iterate( filter )
20190511: 143343     DEBUG 25553[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NgsNetGroupServ|0|NgsCodeMatch|NgsSequenceasc

20190511: 143343     ERROR 25614[main] - com.eppixcomm.eppix.common.data.DAOThrower.unexpected(DAOThrower.java:150) - com.eppixcomm.eppix.base.error.EPPIXSeriousException: A database error has occurred: SQL Error: Reason: A syntax error has occurred., SQL State: 42000, Vendor Code: -201, DML Name: NgsNetGroupServ, SQL Statement: SELECT NGS_CODE, NGS_NETWORK, NGS_NET_SERV_CODE, NGS_SEQUENCE, NGS_APPLY_TEXT, NGS_MODIFY_TEXT, NGS_REMOVE_TEXT, NGS_PARAM_NAME1, NGS_PARAM_VALUE1, NGS_PARAM_NAME2, NGS_PARAM_VALUE2, NGS_PARAM_NAME3, NGS_PARAM_VALUE3, NGS_PARAM_NAME4, NGS_PARAM_VALUE4, NGS_PARAM_NAME5, NGS_PARAM_VALUE5
FROM NGS_NET_GROUP_SERV
WHERE NGS_CODE ? ORDER BY NGS_SEQUENCE ASC, Argument(s): None
20190511: 143343     DEBUG 25614[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getNgsNetServCode
20190511: 143343     DEBUG 25614[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getNgsNetServCode|0||

20190511: 143343     DEBUG 25772[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getNgsNetServCode
Execute SQL Statement: SELECT first 1 ngs_net_serv_code  FROM ngs_net_group_serv  WHERE ngs_code = ?  AND ngs_network  = ?  AND ngs_sequence  = 1
Argument(s): |AMR500|M1|
20190511: 143343     DEBUG 25772[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@a9255c
20190511: 143343     DEBUG 25868[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.processExistingSimNonBasic(SubscriberUpgradeMigradeBLO.java:47579) - 
subscriberId: 607878
simNo: 0004102502505
serviceType: SW
serviceCode: AMR5
networkService: AMR500    
networkService: AMR500    
location: M1
priority: 5
activateDate: 20190511
command: 
primaryMsisdn: 833819663
smnDMO: 
SmnSimNosDMO [smnActiveDate=1999-11-23
smnAvailDate=2016-06-14
smnExpiryDate=2019-06-14
smnAnalysis1=null
smnAnalysis2=null
smnAnalysis3=null
smnDealerId=MTEL
smnHlr=25
smnImsiNo=null
smnKi=null
smnNetworkId=M1
smnOnNetwork=Y
smnPinNo=null
smnPinNo2=null
smnProductCode=83USIM
smnPukNo=32063218
smnPukNo2=null
smnSimNo=0004102502505
smnStatus=1
smnTransportKey=null
smnWarehouse=25]
20190511: 143343     DEBUG 25868[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190511: 143343     DEBUG 25868[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190511: 143343     DEBUG 25868[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190511: 143343     DEBUG 25869[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190511: 143344     DEBUG 25918[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNTRANID|
20190511: 143344     DEBUG 25918[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1961581
20190511: 143344     DEBUG 26035[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190511: 143344     DEBUG 26035[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.modify(SysdirmAbstractBLO.java:308) - modify( filter )
20190511: 143344     DEBUG 26036[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.modify(SysdirmAbstractDACImpl.java:175) - modify( filter )
20190511: 143344     DEBUG 26036[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|16|equalSystemKey|

20190511: 143344     DEBUG 26191[main] - com.eppixcomm.eppix.common.data.DAOImpl.updateCustom(DAOImpl.java:2935) - updateCustom(DBO): DML Name: Sysdirm
Execute SQL Statement: UPDATE SYSDIRM SET KEY_VALUE = ?
WHERE (SYSTEM_KEY) = ?
Argument(s): |46989889|ASNNTRANID|
20190511: 143344     DEBUG 26191[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190511: 143344     DEBUG 26191[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190511: 143344     DEBUG 26191[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190511: 143344     DEBUG 26191[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190511: 143344     DEBUG 26244[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |ASSMROOTM1|
20190511: 143344     DEBUG 26244[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@5ddb6e
20190511: 143344     DEBUG 26345[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getAuxSbd
20190511: 143344     DEBUG 26346[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getAuxSbd|0||

20190511: 143344     DEBUG 26509[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getAuxSbd
Execute SQL Statement: SELECT AUX_TITLE, AUX_FIRSTNAME, AUX_INVOICE_ADDRID, BANK_NAME, BANK_ADDR1, BANK_ADDR2, BANK_AC_NAME, REF, BANK_SCODE, BANK_AC_NO, BANK_AC_TYPE, BANK_PAY_TYPE, AUX_PREF_DEBIT_DAY, BILL_AC_NO, PROTECT_CODE, HANDSET_CT, BANK_DATE, CONF_DATE, AUX_COMMENT, DATE_OF_BIRTH, REF_PAY_DATE, AC_CLOS_DATE, NO_REAS_DATE, REM_LET_DATE, AC_TRAN_DATE, NO_AC_DATE, SR_FLAG, PROCESSED, PACKAGE_CODE, AUX_ACCOUNT_TYPE, AUX_BILL_CYCLE, CREDIT_CARD_NO, CREDIT_CARD_NAME, EXPIRY_DATE, AUX_CARD_CVV_NO, CREDIT_SCORE, SERV_PROV_ID, DEALER_ID, SALESMAN, ID_NUMBER, ACC_STATUS, COMP_REG_NO, STATIONARY_TYPE, MAX_NO_SUBS, AUX_CURRENCY, AUX_COUNTRY_CODE, AUX_GENDER, AUX_SUB_GRP_ACC_NO, AUX_PREPAID_STAT, AUX_CREDIT_CLASS, AUX_AUTO_LIMIT_IND, AUX_LMT_UP_VAL, AUX_LMT_DN_VAL, AUX_ANALYSIS_1, AUX_ANALYSIS_2, AUX_ANALYSIS_3, AUX_ANALYSIS_4, AUX_ANALYSIS_5, AUX_ANALYSIS_6, AUX_ANALYSIS_7, AUX_ANALYSIS_8, AUX_ANALYSIS_9, AUX_ANALYSIS_10, AUX_ANALYSIS_11, AUX_ANALYSIS_12, AUX_ANALYSIS_13, AUX_ANALYSIS_14, AUX_ANALYSIS_15, AUX_ANALYSIS_16, AUX_ANALYSIS_17, AUX_ANALYSIS_18, AUX_ANALYSIS_19, AUX_ANALYSIS_20, AUX_ANALYSIS_21, AUX_ANALYSIS_22, AUX_ANALYSIS_23, AUX_ANALYSIS_24, AUX_ANALYSIS_25, AUX_ANALYSIS_26, AUX_ANALYSIS_27, AUX_ANALYSIS_28, AUX_ANALYSIS_29, AUX_ANALYSIS_30 FROM aux_customers, sbd_sub_dets WHERE sbd_bill_ac_no = bill_ac_no AND sbd_subscriber_id = ? 
Argument(s): |607878|
20190511: 143344     DEBUG 26511[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@113beb5
20190511: 143344     DEBUG 26619[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getNmMsisdnVam
20190511: 143344     DEBUG 26619[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getNmMsisdnVam|0||

20190511: 143344     DEBUG 26667[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getNmMsisdnVam
Execute SQL Statement: SELECT NM_INTERNAL_TARIFF, NM_NETWORK_TARIFF, NM_CONTRACT_PERIOD, NM_NTWRK_CONTR_PER, NM_MIN_CANC_PERIOD, NM_HIGHER_MIG_TYPE, NM_LOWER_MIG_TYPE, NM_SAME_MIG_TYPE, NM_NETWORK_ID, NM_NET_TYPE FROM nm_netmat, vam_active_msisdn WHERE vam_msisdn_no = ?  AND vam_intern_tariff = nm_internal_tariff
Argument(s): |833819663|
20190511: 143344     DEBUG 26668[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@14d7745
20190511: 143344     DEBUG 26777[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SdSimDeactivate )
20190511: 143344     DEBUG 26777[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSdSimDeactivateDAC(BaseAbstractDACFactory.java:1141) - getSdSimDeactivateDAC()
20190511: 143344     DEBUG 26781[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SdSimDeactivateDACImpl com.eppixcomm.eppix.base.dml.SdSimDeactivateDMLFactory@1e13e07
20190511: 143344     DEBUG 26782[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SdSimDeactivateDACImpl
20190511: 143344     DEBUG 26783[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143344     DEBUG 26784[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SdSimDeactivateDACImpl TO MAP
20190511: 143344     DEBUG 26784[main] - com.eppixcomm.eppix.base.blo.SdSimDeactivateAbstractBLO.get(SdSimDeactivateAbstractBLO.java:400) - get( filter )
20190511: 143344     DEBUG 26784[main] - com.eppixcomm.eppix.base.blo.SdSimDeactivateAbstractDACImpl.get(SdSimDeactivateAbstractDACImpl.java:421) - get( filter )
20190511: 143344     DEBUG 26784[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SdSimDeactivate|0|equalSdSimNo+notnullSdDconnectDate+greaterthanSdDconnectDate|equalSdTransStatus|

20190511: 143345     DEBUG 26950[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SdSimDeactivate
Execute SQL Statement: SELECT SD_SUBSCRIBER_ID,SD_HANDSET_NO,SD_SIM_NO,SD_TRANS_STATUS,SD_STAT_CODE,SD_DCONNECT_DATE,SD_PRORATA_TO_DATE,SD_REASON,SD_LETTER_TYPE,SD_DISCON_CHARGE1,SD_DISCON_CHARGE2,SD_DISCON_CHARGE3,SD_DISCON_CHARGE4,SD_DISCON_CHARGE5,SD_EL_COMMAND,SD_EPPIX_STAMP,SD_N2N_STAMP,SD_ERROR_COMMENT
FROM SD_SIM_DEACTIVATE
WHERE SD_SIM_NO = ?  AND SD_DCONNECT_DATE IS NOT NULL AND SD_DCONNECT_DATE > ?  AND (SD_TRANS_STATUS = ?  )
Argument(s): |0004102502505|2019-05-11|F|
20190511: 143345     ERROR 27046[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSimFutureDeactivate(SubscriberUpgradeMigradeBLO.java:29717) - No SIM details found in table sd_sim_deactivate for SIM no 0004102502505
20190511: 143345     DEBUG 27048[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcEventCommand )
20190511: 143345     DEBUG 27049[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getEcEventCommandDAC(BaseDACFactory.java:131) - getEcEventCommandDAC()
20190511: 143345     DEBUG 27054[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.EcEventCommandDACImpl com.eppixcomm.eppix.base.dml.EcEventCommandDMLFactory@1ac3379
20190511: 143345     DEBUG 27054[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.EcEventCommandDACImpl
20190511: 143345     DEBUG 27055[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143345     DEBUG 27055[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.EcEventCommandDACImpl TO MAP
20190511: 143345     DEBUG 27055[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractBLO.create(EcEventCommandAbstractBLO.java:189) - create( ecEventCommandDMO )
20190511: 143345     DEBUG 27055[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractBLO.exists(EcEventCommandAbstractBLO.java:423) - exists(ecEventCommand)
20190511: 143345     DEBUG 27055[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractDACImpl.exists(EcEventCommandAbstractDACImpl.java:227) - exists( EcEventCommandDMO)
20190511: 143345     DEBUG 27055[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcEventCommand|9|filterByPrimaryKey|

20190511: 143345     DEBUG 27215[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: EcEventCommand
Execute SQL Statement: SELECT DISTINCT(0)
FROM EC_EVENT_COMMAND
WHERE (EC_COMMAND) = ?
Argument(s): |201905111433137 |
20190511: 143345     DEBUG 27321[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractDACImpl.create(EcEventCommandAbstractDACImpl.java:99) - create( ecEventCommandDMO )
20190511: 143345     DEBUG 27322[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcEventCommand|11||

20190511: 143345     DEBUG 27379[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 201905111433137 |1|2019-05-11|1433|MODIFY_SERVICES               |83   |C|5||607878|833819663           |0004102502505            ||eppixcomm     
20190511: 143345     DEBUG 27490[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: EcEventCommand
Execute SQL Statement: INSERT INTO EC_EVENT_COMMAND (EC_COMMAND, EC_STATUS, EC_DATE, EC_TIME, EC_MESSAGE, EC_NETWORK, EC_TYPE, EC_PRIORITY, EC_SEND_SEQ, EC_SUBSCRIBER_ID, EC_MSISDN, EC_SIM, EC_OPERATOR, EC_TTY) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Argument(s): |201905111433137 |1|2019-05-11|1433|MODIFY_SERVICES               |83   |C|5||607878|833819663           |0004102502505            ||eppixcomm     |
20190511: 143345     DEBUG 27490[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcEventCommand )
20190511: 143345     DEBUG 27490[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractBLO.iterate(EcEventCommandAbstractBLO.java:494) - iterate( filter )
20190511: 143345     DEBUG 27491[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractDACImpl.iterate(EcEventCommandAbstractDACImpl.java:492) - iterate( filter )
20190511: 143345     DEBUG 27491[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcEventCommand|0|equalEcMsisdn~|equalEcSim+INEcMessage_2+INEcStatus_3+notequalEcCommand|EcCommanddesc

20190511: 143345     DEBUG 27638[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: EcEventCommand
Execute SQL Statement: SELECT EC_COMMAND, EC_STATUS, EC_DATE, EC_TIME, EC_MESSAGE, EC_NETWORK, EC_TYPE, EC_PRIORITY, EC_SEND_SEQ, EC_SUBSCRIBER_ID, EC_MSISDN, EC_SIM, EC_OPERATOR, EC_TTY
FROM EC_EVENT_COMMAND
WHERE (EC_MSISDN) = ? AND ((EC_SIM) = ?) AND (EC_MESSAGE) IN ( ? , ? ) AND (EC_STATUS) IN ( ? , ? , ? ) AND (EC_COMMAND) != ? ORDER BY EC_COMMAND DESC
Argument(s): |833819663|0004102502505|ACTIVATE_SIM|RESUME_SIM|1|2|4|201905111433137|
20190511: 143345     DEBUG 27694[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NtpNetTransPend )
20190511: 143345     DEBUG 27694[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getNtpNetTransPendDAC(BaseDACFactory.java:176) - getNtpNetTransPendDAC()
20190511: 143345     DEBUG 27697[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl com.eppixcomm.eppix.base.dml.NtpNetTransPendDMLFactory@16be68f
20190511: 143345     DEBUG 27697[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl
20190511: 143345     DEBUG 27698[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143345     DEBUG 27699[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl TO MAP
20190511: 143345     DEBUG 27699[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractBLO.create(NtpNetTransPendAbstractBLO.java:92) - create( NtpnetTransPendDMO )
20190511: 143345     DEBUG 27699[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractBLO.exists(NtpNetTransPendAbstractBLO.java:357) - exists(nmNetmat)
20190511: 143345     DEBUG 27699[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl.exists(NtpNetTransPendAbstractDACImpl.java:191) - exists( NtpNetTransPendDMO)
20190511: 143345     DEBUG 27699[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NtpNetTransPend|9|filterByPrimaryKey|

20190511: 143345     DEBUG 27844[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: NtpNetTransPend
Execute SQL Statement: SELECT DISTINCT(0)
FROM NTP_NET_TRANS_PEND
WHERE NTP_SERIAL_ID = ?
Argument(s): |0|
20190511: 143346     DEBUG 27942[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl.create(NtpNetTransPendAbstractDACImpl.java:63) - create( ntpNetTransPendDMO )
20190511: 143346     DEBUG 27942[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NtpNetTransPend|11||

20190511: 143346     DEBUG 27992[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 0|201905111433137 |0|  |607878|                    |                    |AMR5|1|2019-05-11 14:33:45
20190511: 143346     DEBUG 28095[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: NtpNetTransPend
Execute SQL Statement: INSERT INTO NTP_NET_TRANS_PEND (NTP_SERIAL_ID, NTP_COMMAND, NTP_SEND_SEQ,NTP_TRAN_TYPE, NTP_SUBSCRIBER_ID, NTP_OLD_VALUE, NTP_NEW_VALUE, NTP_SERVICE_CODE, NTP_STATUS, NTP_TIMESTAMP) VALUES (?,?,?,?,?,?,?,?,?,?)
Argument(s): |0|201905111433137 |0|  |607878|                    |                    |AMR5|1|2019-05-11 14:33:45|
20190511: 143346     DEBUG 28098[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcdEventCmdDet )
20190511: 143346     DEBUG 28099[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getEcdEventCmdDetDAC(BaseDACFactory.java:161) - getEcdEventCmdDetDAC()
20190511: 143346     DEBUG 28104[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.EcdEventCmdDetDACImpl com.eppixcomm.eppix.base.dml.EcdEventCmdDetDMLFactory@149eb9f
20190511: 143346     DEBUG 28104[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.EcdEventCmdDetDACImpl
20190511: 143346     DEBUG 28105[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143346     DEBUG 28105[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.EcdEventCmdDetDACImpl TO MAP
20190511: 143346     DEBUG 28105[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.create(EcdEventCmdDetAbstractBLO.java:184) - create( ecdEventCmdDetDMO )
20190511: 143346     DEBUG 28105[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.exists(EcdEventCmdDetAbstractBLO.java:411) - exists(ecdEventCmdDet)
20190511: 143346     DEBUG 28105[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.exists(EcdEventCmdDetAbstractDACImpl.java:236) - exists( EcdEventCmdDetDMO)
20190511: 143346     DEBUG 28105[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|9|filterByPrimaryKey|

20190511: 143346     DEBUG 28257[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: EcdEventCmdDet
Execute SQL Statement: SELECT DISTINCT(0)
FROM ECD_EVENT_CMD_DET
WHERE (ECD_COMMAND) = ? AND  ECD_SEQNO = ?
Argument(s): |201905111433137 |1|
20190511: 143346     DEBUG 28376[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.create(EcdEventCmdDetAbstractDACImpl.java:100) - create( ecdEventCmdDetDMO )
20190511: 143346     DEBUG 28376[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|11||

20190511: 143346     DEBUG 28426[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 201905111433137 |1|DET|[SERVICE_REQUEST_HEADER],SERV_REQ_TYPE=Modify_Subscriber_Services,ICC_ID=8927000004102502505,IMSI=null,PRIMARY_MSISDN=833819663,LOCATION=M1,SPID=        59,NETWORK_TARIFF=ASL,NETWORK_ID=M1,TRANS_ID=0046989889,PRIORITY=5,VERSION_NO=1.0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             | |2019-05-11 14:33:46
20190511: 143346     DEBUG 28542[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: EcdEventCmdDet
Execute SQL Statement: INSERT INTO ECD_EVENT_CMD_DET (ECD_COMMAND, ECD_SEQNO, ECD_DET_TYPE, ECD_TEXT, ECD_FLAG, ECD_TIMESTAMP) VALUES (?,?,?,?,?,?)
Argument(s): |201905111433137 |1|DET|[SERVICE_REQUEST_HEADER],SERV_REQ_TYPE=Modify_Subscriber_Services,ICC_ID=8927000004102502505,IMSI=null,PRIMARY_MSISDN=833819663,LOCATION=M1,SPID=        59,NETWORK_TARIFF=ASL,NETWORK_ID=M1,TRANS_ID=0046989889,PRIORITY=5,VERSION_NO=1.0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             | |2019-05-11 14:33:46|
20190511: 143346     DEBUG 28542[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createN2NDetailSegment(SubscriberUpgradeMigradeBLO.java:33001) - 
N2N_CreateDetailSegment
NETWORK: M1
NET SERV CODE: AMR500
COMMAND: 201905111433137
SEQ NO: 1
SIM: 0004102502505
NETWORK: M1
MSISDN: 
CATEGORY: ORDINARY
RESTRICTION: RR
MS STATE: U_ADMIN
TARIFF TYPE: CTRCT
PERIMARY SIM: 
SECOND SIM: 0004102502505
PRIMARY MISISDN: 
SECOND MSISDN: 
SERVICE TYPE: SW
SERVICE CODE: AMR5
SUBSCRIBER: 607878
OPTION: MODIFY
20190511: 143346     DEBUG 28542[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NgsNetGroupServ )
20190511: 143346     DEBUG 28543[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractBLO.iterate(NgsNetGroupServAbstractBLO.java:563) - iterate( filter )
20190511: 143346     DEBUG 28543[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractDACImpl.iterate(NgsNetGroupServAbstractDACImpl.java:618) - iterate( filter )
20190511: 143346     DEBUG 28543[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NgsNetGroupServ|0|equalNgsCode+equalNgsNetwork|NgsSequenceasc

20190511: 143346     DEBUG 28703[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: NgsNetGroupServ
Execute SQL Statement: SELECT NGS_CODE, NGS_NETWORK, NGS_NET_SERV_CODE, NGS_SEQUENCE, NGS_APPLY_TEXT, NGS_MODIFY_TEXT, NGS_REMOVE_TEXT, NGS_PARAM_NAME1, NGS_PARAM_VALUE1, NGS_PARAM_NAME2, NGS_PARAM_VALUE2, NGS_PARAM_NAME3, NGS_PARAM_VALUE3, NGS_PARAM_NAME4, NGS_PARAM_VALUE4, NGS_PARAM_NAME5, NGS_PARAM_VALUE5
FROM NGS_NET_GROUP_SERV
WHERE NGS_CODE = ? AND NGS_NETWORK = ? ORDER BY NGS_SEQUENCE ASC
Argument(s): |AMR500|M1|
20190511: 143346     DEBUG 28703[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190511: 143346     DEBUG 28703[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190511: 143346     DEBUG 28703[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190511: 143346     DEBUG 28703[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190511: 143346     DEBUG 28753[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASGENMBM1|
20190511: 143346     DEBUG 28754[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@289d2e
20190511: 143346     DEBUG 28852[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190511: 143346     DEBUG 28852[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190511: 143346     DEBUG 28852[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190511: 143346     DEBUG 28852[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190511: 143346     DEBUG 28906[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASMBPWDM1|
20190511: 143346     DEBUG 28906[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1f2cea2
20190511: 143347     DEBUG 29002[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9345) - 
=======================================================================================
PARAM OPTION: ALL
PARAM SIM NO: 0004102502505
PARAM NETWORK ID: 
PARAM HLR: 
PARAM DEALER ID: 
PARAM CUSTOMER: 
=======================================================================================
20190511: 143347     DEBUG 29002[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SacSimAssignCus )
20190511: 143347     DEBUG 29002[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractBLO.get(SacSimAssignCusAbstractBLO.java:287) - get( filter )
20190511: 143347     DEBUG 29002[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractDACImpl.get(SacSimAssignCusAbstractDACImpl.java:205) - get( filter )
20190511: 143347     DEBUG 29002[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SacSimAssignCus|0|equalSacSimNo|

20190511: 143347     DEBUG 29049[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SacSimAssignCus
Execute SQL Statement: SELECT SAC_BILL_AC_NO, SAC_SIM_NO 
FROM sac_sim_assign_cus
WHERE SAC_SIM_NO = ? 
Argument(s): |0004102502505|
20190511: 143347      INFO 29166[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9974) - Passed customer no  not found in Sac_Sim_assign_cus
20190511: 143347     DEBUG 29166[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190511: 143347     DEBUG 29166[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190511: 143347     DEBUG 29167[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190511: 143347     DEBUG 29167[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo|

20190511: 143347     DEBUG 29214[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ?
Argument(s): |0004102502505|
20190511: 143347     DEBUG 29215[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1dc0e7a
20190511: 143347     DEBUG 29327[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:10065) - NETWORK PARAMS: OPTION: ALL NETWORK ID:  NETWORKID.LENGTH: 0
20190511: 143347     DEBUG 29327[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VstServiceTypes )
20190511: 143347     DEBUG 29329[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractBLO.get(VstServiceTypesAbstractBLO.java:595) - get( filter )
20190511: 143347     DEBUG 29329[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractDACImpl.get(VstServiceTypesAbstractDACImpl.java:540) - get( filter )
20190511: 143347     DEBUG 29329[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VstServiceTypes|0|equalVstServiceType|

20190511: 143347     DEBUG 29386[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VstServiceTypes
Execute SQL Statement: SELECT VST_SERVICE_TYPE, VST_SERVICE_DESC, VST_MULTI_CHARGE, VST_SERVICE_CLASS, VST_AUTO_CONNECT, VST_ORIGINATOR, VST_TARIFF_RELATED, VST_PARAMETERISED, VST_PARAMS_LEVEL, VST_ARCHIVE_MONTHS, VST_FUTURE_ACT, VST_NODE_LEVEL
FROM VST_SERVICE_TYPES
WHERE VST_SERVICE_TYPE = ?
Argument(s): |SW|
20190511: 143347     DEBUG 29387[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1c5ddc9
20190511: 143347     DEBUG 29487[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@163f7a1
20190511: 143347     DEBUG 29535[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcdEventCmdDet )
20190511: 143347     DEBUG 29535[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.create(EcdEventCmdDetAbstractBLO.java:184) - create( ecdEventCmdDetDMO )
20190511: 143347     DEBUG 29535[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.exists(EcdEventCmdDetAbstractBLO.java:411) - exists(ecdEventCmdDet)
20190511: 143347     DEBUG 29535[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.exists(EcdEventCmdDetAbstractDACImpl.java:236) - exists( EcdEventCmdDetDMO)
20190511: 143347     DEBUG 29536[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|9|filterByPrimaryKey|

20190511: 143347     DEBUG 29587[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: EcdEventCmdDet
Execute SQL Statement: SELECT DISTINCT(0)
FROM ECD_EVENT_CMD_DET
WHERE (ECD_COMMAND) = ? AND  ECD_SEQNO = ?
Argument(s): |201905111433137 |2|
20190511: 143347     DEBUG 29686[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.create(EcdEventCmdDetAbstractDACImpl.java:100) - create( ecdEventCmdDetDMO )
20190511: 143347     DEBUG 29686[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|11||

20190511: 143347     DEBUG 29686[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 201905111433137 |2|DET|| |2019-05-11 14:33:47
20190511: 143347     DEBUG 29746[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: EcdEventCmdDet
Execute SQL Statement: INSERT INTO ECD_EVENT_CMD_DET (ECD_COMMAND, ECD_SEQNO, ECD_DET_TYPE, ECD_TEXT, ECD_FLAG, ECD_TIMESTAMP) VALUES (?,?,?,?,?,?)
Argument(s): |201905111433137 |2|DET|| |2019-05-11 14:33:47|
20190511: 143347     DEBUG 29746[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createN2NDetailSegment(SubscriberUpgradeMigradeBLO.java:34839) - COMMAND: 201905111433137 SEQ NO: 2 ECD DETAILS: [MODIFY],SIM_RELATED_SERVICE=AMR500,
20190511: 143347     DEBUG 29747[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcdEventCmdDet )
20190511: 143347     DEBUG 29747[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.count(EcdEventCmdDetAbstractBLO.java:599) - count( filter )
20190511: 143347     DEBUG 29748[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.count(EcdEventCmdDetAbstractDACImpl.java:518) - count( filter )
20190511: 143347     DEBUG 29748[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|10|equalEcdCommand+EcdTextMatch|

20190511: 143347     DEBUG 29908[main] - com.eppixcomm.eppix.common.data.DAOImpl.count(DAOImpl.java:1162) - count(param SQL): DML Name: EcdEventCmdDet
Execute SQL Statement: SELECT COUNT(*)
FROM ECD_EVENT_CMD_DET
WHERE (ECD_COMMAND) = ? AND ECD_TEXT LIKE ?
Argument(s): |201905111433137|%[SERVICE_REQUEST_TRAILER]%|
20190511: 143348     DEBUG 29961[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.insertEcd(SubscriberUpgradeMigradeBLO.java:31189) - 
COUNT: 0
20190511: 143348     DEBUG 29961[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcdEventCmdDet )
20190511: 143348     DEBUG 29961[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.count(EcdEventCmdDetAbstractBLO.java:599) - count( filter )
20190511: 143348     DEBUG 29961[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.count(EcdEventCmdDetAbstractDACImpl.java:518) - count( filter )
20190511: 143348     DEBUG 29961[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|10|equalEcdCommand|

20190511: 143348     DEBUG 30117[main] - com.eppixcomm.eppix.common.data.DAOImpl.count(DAOImpl.java:1162) - count(param SQL): DML Name: EcdEventCmdDet
Execute SQL Statement: SELECT COUNT(*)
FROM ECD_EVENT_CMD_DET
WHERE (ECD_COMMAND) = ?
Argument(s): |201905111433137|
20190511: 143348     DEBUG 30169[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.insertEcd(SubscriberUpgradeMigradeBLO.java:31229) - 
COUNT: 2
20190511: 143348     DEBUG 30169[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcdEventCmdDet )
20190511: 143348     DEBUG 30170[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.create(EcdEventCmdDetAbstractBLO.java:184) - create( ecdEventCmdDetDMO )
20190511: 143348     DEBUG 30170[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.exists(EcdEventCmdDetAbstractBLO.java:411) - exists(ecdEventCmdDet)
20190511: 143348     DEBUG 30170[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.exists(EcdEventCmdDetAbstractDACImpl.java:236) - exists( EcdEventCmdDetDMO)
20190511: 143348     DEBUG 30170[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|9|filterByPrimaryKey|

20190511: 143348     DEBUG 30225[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: EcdEventCmdDet
Execute SQL Statement: SELECT DISTINCT(0)
FROM ECD_EVENT_CMD_DET
WHERE (ECD_COMMAND) = ? AND  ECD_SEQNO = ?
Argument(s): |201905111433137 |3|
20190511: 143348     DEBUG 30335[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.create(EcdEventCmdDetAbstractDACImpl.java:100) - create( ecdEventCmdDetDMO )
20190511: 143348     DEBUG 30335[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|11||

20190511: 143348     DEBUG 30336[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 201905111433137 |3|DET|| |2019-05-11 14:33:48
20190511: 143348     DEBUG 30398[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: EcdEventCmdDet
Execute SQL Statement: INSERT INTO ECD_EVENT_CMD_DET (ECD_COMMAND, ECD_SEQNO, ECD_DET_TYPE, ECD_TEXT, ECD_FLAG, ECD_TIMESTAMP) VALUES (?,?,?,?,?,?)
Argument(s): |201905111433137 |3|DET|| |2019-05-11 14:33:48|
20190511: 143348     DEBUG 30400[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EqEventQueue )
20190511: 143348     DEBUG 30400[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getEqEventQueueDAC(BaseDACFactory.java:119) - getEqEventQueueDAC()
20190511: 143348     DEBUG 30403[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.EqEventQueueDACImpl com.eppixcomm.eppix.base.dml.EqEventQueueDMLFactory@55bb93
20190511: 143348     DEBUG 30403[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.EqEventQueueDACImpl
20190511: 143348     DEBUG 30404[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190511: 143348     DEBUG 30404[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.EqEventQueueDACImpl TO MAP
20190511: 143348     DEBUG 30404[main] - com.eppixcomm.eppix.base.blo.EqEventQueueAbstractBLO.count(EqEventQueueAbstractBLO.java:379) - count( filter )
20190511: 143348     DEBUG 30405[main] - com.eppixcomm.eppix.base.blo.EqEventQueueAbstractDACImpl.count(EqEventQueueAbstractDACImpl.java:429) - count( filter )
20190511: 143348     DEBUG 30405[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EqEventQueue|10|equalEqCommand|

20190511: 143348     DEBUG 30552[main] - com.eppixcomm.eppix.common.data.DAOImpl.count(DAOImpl.java:1162) - count(param SQL): DML Name: EqEventQueue
Execute SQL Statement: SELECT COUNT(*)
FROM EQ_EVENT_QUEUE
WHERE (EQ_COMMAND) = ?
Argument(s): |201905111433137|
20190511: 143348     DEBUG 30599[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EqEventQueue )
20190511: 143348     DEBUG 30601[main] - com.eppixcomm.eppix.base.blo.EqEventQueueAbstractBLO.create(EqEventQueueAbstractBLO.java:121) - create( eqEventQueueDMO )
20190511: 143348     DEBUG 30601[main] - com.eppixcomm.eppix.base.blo.EqEventQueueAbstractDACImpl.create(EqEventQueueAbstractDACImpl.java:83) - create( eqEventQueueDMO )
20190511: 143348     DEBUG 30601[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EqEventQueue|11||

20190511: 143348     DEBUG 30661[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 201905111433137 |MODIFY_SERVICES               |83   |5
20190511: 143348     DEBUG 30776[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: EqEventQueue
Execute SQL Statement: INSERT INTO EQ_EVENT_QUEUE (EQ_COMMAND, EQ_MESSAGE, EQ_NETWORK, EQ_PRIORITY) VALUES (?,?,?,?)
Argument(s): |201905111433137 |MODIFY_SERVICES               |83   |5|
20190512: 155659     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:150) - loading appProperties
20190512: 155659     DEBUG    60[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:157) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 155659     DEBUG    61[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:170) - DB Connection start
20190512: 155659     DEBUG    61[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:173) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 155701     DEBUG  2315[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190512: 155701     DEBUG  2328[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190512: 155701     DEBUG  2328[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190512: 155701     DEBUG  2329[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190512: 155702     DEBUG  2706[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190512: 155702     DEBUG  2836[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@1b8f864
20190512: 155702     DEBUG  2838[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190512: 155702     DEBUG  3118[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155702     DEBUG  3118[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190512: 155702     DEBUG  3120[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 155702     DEBUG  3123[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190512: 155702     DEBUG  3177[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@3e89c3
20190512: 155702     DEBUG  3177[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190512: 155702     DEBUG  3178[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155702     DEBUG  3179[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190512: 155702     DEBUG  3181[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190512: 155702     DEBUG  3183[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190512: 155702     DEBUG  3223[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1bc82e7
20190512: 155702     DEBUG  3224[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190512: 155702     DEBUG  3225[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155702     DEBUG  3225[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190512: 155702     DEBUG  3226[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 155702     DEBUG  3229[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190512: 155702     DEBUG  3267[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@140c281
20190512: 155702     DEBUG  3267[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190512: 155702     DEBUG  3268[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155702     DEBUG  3268[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190512: 155702     DEBUG  3268[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 155702     DEBUG  3278[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 155702     DEBUG  3474[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190512: 155703     DEBUG  3585[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@162dbb6
20190512: 155703     DEBUG  3585[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190512: 155703     DEBUG  3590[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155703     DEBUG  3591[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190512: 155703     DEBUG  3591[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 155703     DEBUG  3591[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 155703     DEBUG  3591[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 155703     DEBUG  3591[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 155703     DEBUG  3591[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:200) - DB Connection successfull
20190512: 155703     DEBUG  3592[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1379) - 
Integer subscriberID: 607878
String msisdn: null
String serviceCode: AMR5
String partnerId: null
20190512: 155703     DEBUG  3595[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190512: 155706     DEBUG  6533[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbdSubDetsDAC(BaseAbstractDACFactory.java:234) - getSbdSubDetsDAC()
20190512: 155706     DEBUG  6849[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl com.eppixcomm.eppix.base.dml.SbdSubDetsAbstractDMLFactory@1ffc686
20190512: 155706     DEBUG  6849[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl
20190512: 155706     DEBUG  6851[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155706     DEBUG  6851[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl TO MAP
20190512: 155706     DEBUG  6851[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190512: 155706     DEBUG  6851[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190512: 155706     DEBUG  6958[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190512: 155706     DEBUG  7251[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190512: 155706     DEBUG  7255[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@102799c
20190512: 155706     DEBUG  7363[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190512: 155706     DEBUG  7364[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190512: 155706     DEBUG  7458[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@1a7508a
20190512: 155706     DEBUG  7458[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190512: 155706     DEBUG  7460[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155706     DEBUG  7460[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190512: 155706     DEBUG  7461[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190512: 155706     DEBUG  7461[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190512: 155706     DEBUG  7462[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190512: 155707     DEBUG  7851[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190512: 155707     DEBUG  7906[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1a28362
20190512: 155707      INFO  8012[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:109) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: subscriber=607878 is not active and service cannot be activated.
20190512: 155809     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:150) - loading appProperties
20190512: 155809     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:157) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 155809     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:170) - DB Connection start
20190512: 155809     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:173) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 155810     DEBUG   895[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190512: 155810     DEBUG   897[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190512: 155810     DEBUG   897[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190512: 155810     DEBUG   897[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190512: 155810     DEBUG   921[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190512: 155810     DEBUG   927[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@1b8f864
20190512: 155810     DEBUG   928[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190512: 155810     DEBUG   955[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155810     DEBUG   956[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190512: 155810     DEBUG   957[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 155810     DEBUG   959[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190512: 155810     DEBUG   961[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@3e89c3
20190512: 155810     DEBUG   961[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190512: 155810     DEBUG   962[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155810     DEBUG   962[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190512: 155810     DEBUG   964[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190512: 155810     DEBUG   966[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190512: 155810     DEBUG   967[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1bc82e7
20190512: 155810     DEBUG   968[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190512: 155810     DEBUG   969[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155810     DEBUG   969[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190512: 155810     DEBUG   970[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 155810     DEBUG   973[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190512: 155810     DEBUG   974[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@140c281
20190512: 155810     DEBUG   975[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190512: 155810     DEBUG   975[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155810     DEBUG   975[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190512: 155810     DEBUG   976[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 155810     DEBUG   984[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 155811     DEBUG  1154[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190512: 155811     DEBUG  1162[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@162dbb6
20190512: 155811     DEBUG  1162[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190512: 155811     DEBUG  1167[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155811     DEBUG  1167[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190512: 155811     DEBUG  1168[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 155811     DEBUG  1168[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 155811     DEBUG  1168[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 155811     DEBUG  1168[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 155811     DEBUG  1168[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:200) - DB Connection successfull
20190512: 155811     DEBUG  1168[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1379) - 
Integer subscriberID: 607878
String msisdn: null
String serviceCode: AMR5
String partnerId: null
20190512: 155811     DEBUG  1171[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190512: 155811     DEBUG  1254[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbdSubDetsDAC(BaseAbstractDACFactory.java:234) - getSbdSubDetsDAC()
20190512: 155811     DEBUG  1263[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl com.eppixcomm.eppix.base.dml.SbdSubDetsAbstractDMLFactory@10dc6b5
20190512: 155811     DEBUG  1263[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl
20190512: 155811     DEBUG  1265[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155811     DEBUG  1265[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl TO MAP
20190512: 155811     DEBUG  1265[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190512: 155811     DEBUG  1265[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190512: 155811     DEBUG  1272[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190512: 155811     DEBUG  1514[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190512: 155811     DEBUG  1518[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@fcfa52
20190512: 155811     DEBUG  1635[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190512: 155811     DEBUG  1637[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190512: 155811     DEBUG  1648[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@e5bbd6
20190512: 155811     DEBUG  1649[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190512: 155811     DEBUG  1651[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155811     DEBUG  1651[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190512: 155811     DEBUG  1652[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190512: 155811     DEBUG  1652[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190512: 155811     DEBUG  1654[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190512: 155811     DEBUG  1884[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190512: 155811     DEBUG  1890[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1e845c2
20190512: 155811      INFO  1945[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:109) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: subscriber=607878 is not active and service cannot be activated.
20190512: 155840     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:150) - loading appProperties
20190512: 155840     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:157) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 155840     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:170) - DB Connection start
20190512: 155840     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:173) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 155842     DEBUG  1959[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190512: 155842     DEBUG  1960[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190512: 155842     DEBUG  1961[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190512: 155842     DEBUG  1961[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190512: 155842     DEBUG  1984[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190512: 155842     DEBUG  1990[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@bb7759
20190512: 155842     DEBUG  1992[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190512: 155842     DEBUG  2017[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155842     DEBUG  2017[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190512: 155842     DEBUG  2019[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 155842     DEBUG  2021[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190512: 155842     DEBUG  2023[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@1c695a6
20190512: 155842     DEBUG  2023[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190512: 155842     DEBUG  2024[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155842     DEBUG  2024[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190512: 155842     DEBUG  2025[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190512: 155842     DEBUG  2027[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190512: 155842     DEBUG  2029[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1362012
20190512: 155842     DEBUG  2030[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190512: 155842     DEBUG  2030[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155842     DEBUG  2031[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190512: 155842     DEBUG  2032[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 155842     DEBUG  2035[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190512: 155842     DEBUG  2036[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@a1d1f4
20190512: 155842     DEBUG  2037[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190512: 155842     DEBUG  2037[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155842     DEBUG  2037[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190512: 155842     DEBUG  2038[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 155842     DEBUG  2047[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 155842     DEBUG  2234[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190512: 155842     DEBUG  2240[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@146c1d4
20190512: 155842     DEBUG  2240[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190512: 155842     DEBUG  2246[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155842     DEBUG  2246[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190512: 155842     DEBUG  2247[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 155842     DEBUG  2247[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 155842     DEBUG  2247[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 155842     DEBUG  2247[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 155842     DEBUG  2248[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:200) - DB Connection successfull
20190512: 155842     DEBUG  2248[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1379) - 
Integer subscriberID: 607878
String msisdn: null
String serviceCode: AMR5
String partnerId: null
20190512: 155842     DEBUG  2252[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190512: 155842     DEBUG  2341[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbdSubDetsDAC(BaseAbstractDACFactory.java:234) - getSbdSubDetsDAC()
20190512: 155842     DEBUG  2352[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl com.eppixcomm.eppix.base.dml.SbdSubDetsAbstractDMLFactory@170bea5
20190512: 155842     DEBUG  2352[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl
20190512: 155842     DEBUG  2354[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155842     DEBUG  2354[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl TO MAP
20190512: 155842     DEBUG  2354[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190512: 155842     DEBUG  2355[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190512: 155842     DEBUG  2361[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190512: 155843     DEBUG  2647[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190512: 155843     DEBUG  2650[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@961dff
20190512: 155843     DEBUG  2779[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190512: 155843     DEBUG  2780[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190512: 155843     DEBUG  2788[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@19e15c
20190512: 155843     DEBUG  2788[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190512: 155843     DEBUG  2790[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 155843     DEBUG  2790[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190512: 155843     DEBUG  2790[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190512: 155843     DEBUG  2791[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190512: 155843     DEBUG  2792[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190512: 155843     DEBUG  3097[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190512: 155843     DEBUG  3105[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@3c0007
20190512: 155843      INFO  3188[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:109) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: subscriber=607878 is not active and service cannot be activated.
20190512: 160050     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:150) - loading appProperties
20190512: 160050     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:157) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 160050     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:170) - DB Connection start
20190512: 160050     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:173) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 160051     DEBUG  1934[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190512: 160051     DEBUG  1936[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190512: 160051     DEBUG  1936[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190512: 160051     DEBUG  1936[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190512: 160052     DEBUG  1960[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190512: 160052     DEBUG  1966[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@bb7759
20190512: 160052     DEBUG  1968[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190512: 160052     DEBUG  1996[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160052     DEBUG  1996[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190512: 160052     DEBUG  1997[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 160052     DEBUG  2000[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190512: 160052     DEBUG  2002[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@1c695a6
20190512: 160052     DEBUG  2002[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190512: 160052     DEBUG  2003[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160052     DEBUG  2003[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190512: 160052     DEBUG  2004[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190512: 160052     DEBUG  2006[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190512: 160052     DEBUG  2008[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1362012
20190512: 160052     DEBUG  2009[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190512: 160052     DEBUG  2009[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160052     DEBUG  2010[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190512: 160052     DEBUG  2011[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 160052     DEBUG  2014[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190512: 160052     DEBUG  2015[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@a1d1f4
20190512: 160052     DEBUG  2015[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190512: 160052     DEBUG  2016[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160052     DEBUG  2016[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190512: 160052     DEBUG  2016[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 160052     DEBUG  2025[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 160052     DEBUG  2196[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190512: 160052     DEBUG  2202[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@146c1d4
20190512: 160052     DEBUG  2202[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190512: 160052     DEBUG  2208[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160052     DEBUG  2208[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190512: 160052     DEBUG  2208[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 160052     DEBUG  2208[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 160052     DEBUG  2208[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 160052     DEBUG  2208[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 160052     DEBUG  2209[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:200) - DB Connection successfull
20190512: 160052     DEBUG  2209[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1379) - 
Integer subscriberID: 607878
String msisdn: null
String serviceCode: AMR5
String partnerId: null
20190512: 160052     DEBUG  2211[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190512: 160052     DEBUG  2287[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbdSubDetsDAC(BaseAbstractDACFactory.java:234) - getSbdSubDetsDAC()
20190512: 160052     DEBUG  2296[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl com.eppixcomm.eppix.base.dml.SbdSubDetsAbstractDMLFactory@10dc6b5
20190512: 160052     DEBUG  2296[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl
20190512: 160052     DEBUG  2297[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160052     DEBUG  2298[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl TO MAP
20190512: 160052     DEBUG  2298[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190512: 160052     DEBUG  2298[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190512: 160052     DEBUG  2304[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190512: 160052     DEBUG  2603[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190512: 160052     DEBUG  2606[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@961dff
20190512: 160052     DEBUG  2704[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190512: 160052     DEBUG  2705[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190512: 160052     DEBUG  2713[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@8ee016
20190512: 160052     DEBUG  2713[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190512: 160052     DEBUG  2715[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160052     DEBUG  2715[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190512: 160052     DEBUG  2715[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190512: 160052     DEBUG  2716[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190512: 160052     DEBUG  2717[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190512: 160052     DEBUG  2943[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190512: 160053     DEBUG  2948[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@3c0007
20190512: 160053      INFO  3004[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:109) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: subscriber=607878 is not active and service cannot be activated.
20190512: 160219     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:150) - loading appProperties
20190512: 160219     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:157) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 160219     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:170) - DB Connection start
20190512: 160219     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:173) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 160220     DEBUG  1711[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190512: 160220     DEBUG  1713[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190512: 160220     DEBUG  1713[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190512: 160220     DEBUG  1714[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190512: 160220     DEBUG  1737[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190512: 160220     DEBUG  1743[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@1b8f864
20190512: 160220     DEBUG  1746[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190512: 160221     DEBUG  1774[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160221     DEBUG  1775[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190512: 160221     DEBUG  1777[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 160221     DEBUG  1780[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190512: 160221     DEBUG  1783[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@3e89c3
20190512: 160221     DEBUG  1783[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190512: 160221     DEBUG  1784[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160221     DEBUG  1784[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190512: 160221     DEBUG  1786[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190512: 160221     DEBUG  1788[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190512: 160221     DEBUG  1791[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1bc82e7
20190512: 160221     DEBUG  1792[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190512: 160221     DEBUG  1793[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160221     DEBUG  1793[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190512: 160221     DEBUG  1795[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 160221     DEBUG  1798[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190512: 160221     DEBUG  1800[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@140c281
20190512: 160221     DEBUG  1800[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190512: 160221     DEBUG  1801[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160221     DEBUG  1801[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190512: 160221     DEBUG  1802[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 160221     DEBUG  1812[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 160221     DEBUG  1983[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190512: 160221     DEBUG  1988[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@162dbb6
20190512: 160221     DEBUG  1989[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190512: 160221     DEBUG  1994[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160221     DEBUG  1994[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190512: 160221     DEBUG  1994[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 160221     DEBUG  1995[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 160221     DEBUG  1995[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 160221     DEBUG  1995[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 160221     DEBUG  1995[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:200) - DB Connection successfull
20190512: 160221     DEBUG  1997[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190512: 160221     DEBUG  1998[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190512: 160221     DEBUG  2012[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@1f17e77
20190512: 160221     DEBUG  2013[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190512: 160221     DEBUG  2014[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160221     DEBUG  2015[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190512: 160221     DEBUG  2015[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190512: 160221     DEBUG  2015[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190512: 160221     DEBUG  2022[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190512: 160222     DEBUG  2820[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190512: 160222     DEBUG  2827[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1b000e7
20190512: 160222      INFO  2942[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:109) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: subscriber=607878 is not active and service cannot be activated.
20190512: 160254     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:150) - loading appProperties
20190512: 160254     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:157) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 160254     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:170) - DB Connection start
20190512: 160254     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:173) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 160255     DEBUG  1456[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190512: 160255     DEBUG  1458[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190512: 160255     DEBUG  1459[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190512: 160255     DEBUG  1459[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190512: 160255     DEBUG  1481[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190512: 160255     DEBUG  1487[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@1b8f864
20190512: 160255     DEBUG  1489[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190512: 160255     DEBUG  1514[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160255     DEBUG  1515[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190512: 160255     DEBUG  1516[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 160255     DEBUG  1519[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190512: 160255     DEBUG  1521[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@3e89c3
20190512: 160255     DEBUG  1521[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190512: 160255     DEBUG  1522[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160255     DEBUG  1522[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190512: 160255     DEBUG  1523[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190512: 160255     DEBUG  1525[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190512: 160255     DEBUG  1527[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1bc82e7
20190512: 160255     DEBUG  1528[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190512: 160255     DEBUG  1528[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160255     DEBUG  1528[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190512: 160255     DEBUG  1529[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 160255     DEBUG  1532[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190512: 160255     DEBUG  1534[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@140c281
20190512: 160255     DEBUG  1534[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190512: 160255     DEBUG  1535[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160255     DEBUG  1535[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190512: 160255     DEBUG  1535[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 160255     DEBUG  1544[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 160255     DEBUG  1728[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190512: 160255     DEBUG  1734[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@162dbb6
20190512: 160255     DEBUG  1734[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190512: 160255     DEBUG  1740[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160255     DEBUG  1740[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190512: 160255     DEBUG  1740[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 160255     DEBUG  1740[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 160255     DEBUG  1740[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 160255     DEBUG  1741[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 160255     DEBUG  1741[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:200) - DB Connection successfull
20190512: 160255     DEBUG  1743[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190512: 160255     DEBUG  1744[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190512: 160255     DEBUG  1758[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@1f17e77
20190512: 160255     DEBUG  1758[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190512: 160255     DEBUG  1761[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160255     DEBUG  1761[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190512: 160255     DEBUG  1761[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190512: 160255     DEBUG  1762[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190512: 160255     DEBUG  1769[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190512: 160256     DEBUG  2076[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190512: 160256     DEBUG  2082[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@8e32e7
20190512: 160256      INFO  2137[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:109) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: subscriber=607878 is not active and service cannot be activated.
20190512: 160321     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:150) - loading appProperties
20190512: 160321     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:157) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 160321     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:170) - DB Connection start
20190512: 160321     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:173) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 160322     DEBUG   907[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190512: 160322     DEBUG   909[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190512: 160322     DEBUG   909[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190512: 160322     DEBUG   909[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190512: 160322     DEBUG   933[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190512: 160322     DEBUG   939[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@1b8f864
20190512: 160322     DEBUG   940[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190512: 160322     DEBUG   966[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160322     DEBUG   966[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190512: 160322     DEBUG   968[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 160322     DEBUG   970[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190512: 160322     DEBUG   972[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@3e89c3
20190512: 160322     DEBUG   972[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190512: 160322     DEBUG   973[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160322     DEBUG   973[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190512: 160322     DEBUG   975[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190512: 160322     DEBUG   977[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190512: 160322     DEBUG   978[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1bc82e7
20190512: 160322     DEBUG   979[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190512: 160322     DEBUG   980[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160322     DEBUG   980[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190512: 160322     DEBUG   981[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 160322     DEBUG   984[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190512: 160322     DEBUG   986[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@140c281
20190512: 160322     DEBUG   986[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190512: 160322     DEBUG   987[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160322     DEBUG   987[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190512: 160322     DEBUG   987[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 160322     DEBUG   996[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 160322     DEBUG  1169[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190512: 160322     DEBUG  1175[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@162dbb6
20190512: 160322     DEBUG  1176[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190512: 160322     DEBUG  1181[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160322     DEBUG  1181[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190512: 160322     DEBUG  1181[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 160322     DEBUG  1182[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 160322     DEBUG  1182[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 160322     DEBUG  1182[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 160322     DEBUG  1182[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:200) - DB Connection successfull
20190512: 160322     DEBUG  1184[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190512: 160322     DEBUG  1185[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190512: 160322     DEBUG  1199[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@1f17e77
20190512: 160322     DEBUG  1199[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190512: 160322     DEBUG  1201[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160322     DEBUG  1202[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190512: 160322     DEBUG  1202[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190512: 160322     DEBUG  1202[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190512: 160322     DEBUG  1209[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190512: 160322     DEBUG  1575[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190512: 160322     DEBUG  1582[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@8e32e7
20190512: 160322     DEBUG  1636[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190512: 160322     DEBUG  1727[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVasActiveServiceDAC(BaseAbstractDACFactory.java:1177) - getVasActiveServiceDAC()
20190512: 160322     DEBUG  1791[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl com.eppixcomm.eppix.base.dml.VasActiveServiceDMLFactory@79ed7f
20190512: 160322     DEBUG  1791[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl
20190512: 160322     DEBUG  1792[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160322     DEBUG  1793[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl TO MAP
20190512: 160322     DEBUG  1793[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190512: 160322     DEBUG  1793[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190512: 160322     DEBUG  1794[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode|

20190512: 160323     DEBUG  2135[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ? 
Argument(s): |607878|AMR5|
20190512: 160323     DEBUG  2136[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@186df0f
20190512: 160411     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:150) - loading appProperties
20190512: 160411     DEBUG     5[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:157) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 160411     DEBUG     6[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:170) - DB Connection start
20190512: 160411     DEBUG     6[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:173) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190512: 160413     DEBUG  1989[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190512: 160413     DEBUG  1991[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190512: 160413     DEBUG  1991[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190512: 160413     DEBUG  1992[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190512: 160413     DEBUG  2015[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190512: 160413     DEBUG  2021[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@1b8f864
20190512: 160413     DEBUG  2023[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190512: 160413     DEBUG  2049[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160413     DEBUG  2050[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190512: 160413     DEBUG  2051[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 160413     DEBUG  2054[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190512: 160413     DEBUG  2056[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@3e89c3
20190512: 160413     DEBUG  2056[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190512: 160413     DEBUG  2057[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160413     DEBUG  2057[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190512: 160413     DEBUG  2059[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190512: 160413     DEBUG  2061[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190512: 160413     DEBUG  2062[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1bc82e7
20190512: 160413     DEBUG  2063[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190512: 160413     DEBUG  2064[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160413     DEBUG  2064[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190512: 160413     DEBUG  2065[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 160413     DEBUG  2068[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190512: 160413     DEBUG  2070[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@140c281
20190512: 160413     DEBUG  2070[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190512: 160413     DEBUG  2070[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160413     DEBUG  2070[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190512: 160413     DEBUG  2071[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 160413     DEBUG  2080[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 160413     DEBUG  2257[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190512: 160413     DEBUG  2267[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@162dbb6
20190512: 160413     DEBUG  2267[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190512: 160413     DEBUG  2275[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160413     DEBUG  2276[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190512: 160413     DEBUG  2276[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 160413     DEBUG  2276[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190512: 160413     DEBUG  2277[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190512: 160413     DEBUG  2277[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190512: 160413     DEBUG  2277[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:200) - DB Connection successfull
20190512: 160413     DEBUG  2280[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190512: 160413     DEBUG  2281[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190512: 160413     DEBUG  2299[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@1f17e77
20190512: 160413     DEBUG  2299[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190512: 160413     DEBUG  2302[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160413     DEBUG  2302[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190512: 160413     DEBUG  2303[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190512: 160413     DEBUG  2303[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190512: 160413     DEBUG  2312[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190512: 160414     DEBUG  3117[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190512: 160414     DEBUG  3123[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1b000e7
20190512: 160414     DEBUG  3238[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190512: 160414     DEBUG  3318[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVasActiveServiceDAC(BaseAbstractDACFactory.java:1177) - getVasActiveServiceDAC()
20190512: 160414     DEBUG  3321[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl com.eppixcomm.eppix.base.dml.VasActiveServiceDMLFactory@79ed7f
20190512: 160414     DEBUG  3322[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl
20190512: 160414     DEBUG  3323[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190512: 160414     DEBUG  3323[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl TO MAP
20190512: 160414     DEBUG  3324[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190512: 160414     DEBUG  3324[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190512: 160414     DEBUG  3324[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode|

20190512: 160415     DEBUG  3857[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ? 
Argument(s): |607878|AMR5|
20190512: 160415     DEBUG  3857[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@186df0f
20190513: 073632     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:150) - loading appProperties
20190513: 073632     DEBUG    77[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:157) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190513: 073632     DEBUG    77[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:170) - DB Connection start
20190513: 073632     DEBUG    77[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:173) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190513: 073637     DEBUG  4733[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190513: 073637     DEBUG  4735[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190513: 073637     DEBUG  4735[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190513: 073637     DEBUG  4735[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190513: 073637     DEBUG  4764[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190513: 073637     DEBUG  4772[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@bb7759
20190513: 073637     DEBUG  4774[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190513: 073637     DEBUG  4834[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 073637     DEBUG  4834[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190513: 073637     DEBUG  4836[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 073637     DEBUG  4838[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190513: 073637     DEBUG  4841[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@13bd574
20190513: 073637     DEBUG  4841[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190513: 073637     DEBUG  4842[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 073637     DEBUG  4842[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190513: 073637     DEBUG  4843[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190513: 073637     DEBUG  4845[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190513: 073637     DEBUG  4847[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1c86be5
20190513: 073637     DEBUG  4849[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190513: 073637     DEBUG  4850[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 073637     DEBUG  4850[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190513: 073637     DEBUG  4851[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190513: 073637     DEBUG  4854[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190513: 073637     DEBUG  4856[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@9e29fb
20190513: 073637     DEBUG  4857[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190513: 073637     DEBUG  4857[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 073637     DEBUG  4857[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190513: 073637     DEBUG  4857[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 073637     DEBUG  4866[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 073637     DEBUG  5038[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190513: 073637     DEBUG  5045[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@1e1a408
20190513: 073637     DEBUG  5045[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190513: 073637     DEBUG  5050[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 073637     DEBUG  5051[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190513: 073637     DEBUG  5051[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 073637     DEBUG  5051[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190513: 073637     DEBUG  5051[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 073637     DEBUG  5051[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 073637     DEBUG  5051[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:200) - DB Connection successfull
20190513: 073637     DEBUG  5054[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 073637     DEBUG  5055[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190513: 073637     DEBUG  5071[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@b01d43
20190513: 073637     DEBUG  5071[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190513: 073637     DEBUG  5073[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 073637     DEBUG  5073[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190513: 073637     DEBUG  5074[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190513: 073637     DEBUG  5074[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190513: 073637     DEBUG  5081[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190513: 073638     DEBUG  5361[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 073638     DEBUG  5367[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@193385d
20190513: 073638     DEBUG  5432[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 073638     DEBUG  5560[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbdSubDetsDAC(BaseAbstractDACFactory.java:234) - getSbdSubDetsDAC()
20190513: 073638     DEBUG  5565[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl com.eppixcomm.eppix.base.dml.SbdSubDetsAbstractDMLFactory@476128
20190513: 073638     DEBUG  5566[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl
20190513: 073638     DEBUG  5567[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 073638     DEBUG  5567[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl TO MAP
20190513: 073638     DEBUG  5568[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 073638     DEBUG  5568[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 073638     DEBUG  5569[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 073638     DEBUG  5861[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 073638     DEBUG  5862[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1a28362
20190513: 073638     DEBUG  6001[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190513: 073638     DEBUG  6002[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVasActiveServiceDAC(BaseAbstractDACFactory.java:1177) - getVasActiveServiceDAC()
20190513: 073638     DEBUG  6006[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl com.eppixcomm.eppix.base.dml.VasActiveServiceDMLFactory@11978b
20190513: 073638     DEBUG  6006[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl
20190513: 073638     DEBUG  6008[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 073638     DEBUG  6008[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl TO MAP
20190513: 073638     DEBUG  6008[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190513: 073638     DEBUG  6008[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190513: 073638     DEBUG  6009[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode|

20190513: 073639     DEBUG  6291[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ? 
Argument(s): |607878|AMR5|
20190513: 073639     DEBUG  6291[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@7a1576
20190513: 073639     DEBUG  6423[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TsTariffService )
20190513: 073639     DEBUG  6423[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getTsTariffServiceDAC(BaseDACFactory.java:287) - getTsTariffServiceDAC()
20190513: 073639     DEBUG  6480[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl com.eppixcomm.eppix.base.dml.TsTariffServiceAbstractDMLFactory@64ab4d
20190513: 073639     DEBUG  6480[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl
20190513: 073639     DEBUG  6481[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 073639     DEBUG  6481[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl TO MAP
20190513: 073639     DEBUG  6482[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractBLO.get(TsTariffServiceAbstractBLO.java:593) - get( filter )
20190513: 073639     DEBUG  6482[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractDACImpl.get(TsTariffServiceAbstractDACImpl.java:589) - get( filter )
20190513: 073639     DEBUG  6482[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TsTariffService|0|equalTsServiceCode+equalTsPackageCode+equalTsInternalTariff|

20190513: 073639     DEBUG  6772[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TsTariffService
Execute SQL Statement: SELECT TS_PACKAGE_CODE, TS_INTERNAL_TARIFF, TS_SERVICE_CODE, TS_NET_SERV_CODE, TS_ACT_CHARGE, TS_TDEACT_CHARGE, TS_REACT_CHARGE, TS_PDEACT_CHARGE, TS_SUB_CHARGE1, TS_SUB_CHARGE2, TS_SUB_CHARGE3, TS_CHARGE_PERIOD, TS_CHARGE_FREQ, TS_DISCOUNT_REF, TS_ACT_INCLUSIVE
FROM TS_TARIFF_SERVICE
WHERE (TS_SERVICE_CODE) = ? AND (TS_PACKAGE_CODE) = ? AND (TS_INTERNAL_TARIFF) = ?
Argument(s): |AMR5|500FF|ASKYL36M|
20190513: 073639     DEBUG  6773[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@6c585a
20190513: 073639     DEBUG  6907[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsrService )
20190513: 073639     DEBUG  6908[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVsrServiceDAC(BaseAbstractDACFactory.java:486) - getVsrServiceDAC()
20190513: 073639     DEBUG  6982[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VsrServiceDACImpl com.eppixcomm.eppix.base.dml.VsrServiceDMLFactory@273686
20190513: 073639     DEBUG  6982[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VsrServiceDACImpl
20190513: 073639     DEBUG  6983[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 073639     DEBUG  6984[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VsrServiceDACImpl TO MAP
20190513: 073639     DEBUG  6984[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractBLO.get(VsrServiceAbstractBLO.java:576) - get( filter )
20190513: 073639     DEBUG  6984[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractDACImpl.get(VsrServiceAbstractDACImpl.java:517) - get( filter )
20190513: 073639     DEBUG  6984[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsrService|0|equalVsrServiceCode|

20190513: 073640     DEBUG  7341[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VsrService
Execute SQL Statement: SELECT VSR_SERVICE_CODE, VSR_SERVICE_TYPE, VSR_SERVICE_DESC, VSR_ORIGINATOR, VSR_SERVICE_CLASS, VSR_TEMP_DEACT, VSR_PRORATA, VSR_PROVIDER_ID, VSR_SHORT_DESC, VSR_SUSPEND
FROM VSR_SERVICE
WHERE VSR_SERVICE_CODE = ?
Argument(s): |AMR5|
20190513: 073640     DEBUG  7342[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@15ad5c6
20190513: 073640     DEBUG  7643[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VstServiceTypes )
20190513: 073640     DEBUG  7644[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVstServiceTypesDAC(BaseAbstractDACFactory.java:499) - getVstServiceTypesDAC()
20190513: 073640     DEBUG  7726[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VstServiceTypesDACImpl com.eppixcomm.eppix.base.dml.VstServiceTypesDMLFactory@1a116c9
20190513: 073640     DEBUG  7727[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VstServiceTypesDACImpl
20190513: 073640     DEBUG  7728[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 073640     DEBUG  7728[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VstServiceTypesDACImpl TO MAP
20190513: 073640     DEBUG  7728[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractBLO.get(VstServiceTypesAbstractBLO.java:595) - get( filter )
20190513: 073640     DEBUG  7729[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractDACImpl.get(VstServiceTypesAbstractDACImpl.java:540) - get( filter )
20190513: 073640     DEBUG  7729[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VstServiceTypes|0|equalVstServiceType|

20190513: 073641     DEBUG  8301[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VstServiceTypes
Execute SQL Statement: SELECT VST_SERVICE_TYPE, VST_SERVICE_DESC, VST_MULTI_CHARGE, VST_SERVICE_CLASS, VST_AUTO_CONNECT, VST_ORIGINATOR, VST_TARIFF_RELATED, VST_PARAMETERISED, VST_PARAMS_LEVEL, VST_ARCHIVE_MONTHS, VST_FUTURE_ACT, VST_NODE_LEVEL
FROM VST_SERVICE_TYPES
WHERE VST_SERVICE_TYPE = ?
Argument(s): |SW|
20190513: 073641     DEBUG  8302[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@4f459c
20190513: 073641     DEBUG  8546[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 073641     DEBUG  8546[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 073641     DEBUG  8546[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 073641     DEBUG  8546[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 073641     DEBUG  8721[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 073641     DEBUG  8723[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@e3c624
20190513: 073641     DEBUG  8962[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9355) - 
=======================================================================================
PARAM OPTION: ALL
PARAM SIM NO: 0004102502505
PARAM NETWORK ID: 
PARAM HLR: 
PARAM DEALER ID: 
PARAM CUSTOMER: 
=======================================================================================
20190513: 073641     DEBUG  8964[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SacSimAssignCus )
20190513: 073641     DEBUG  8965[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSacSimAssignCusDAC(BaseAbstractDACFactory.java:1345) - getSacSimAssignCusDAC()
20190513: 073641     DEBUG  9029[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SacSimAssignCusDACImpl com.eppixcomm.eppix.base.dml.SacSimAssignCusDMLFactory@15a6029
20190513: 073641     DEBUG  9029[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SacSimAssignCusDACImpl
20190513: 073641     DEBUG  9030[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 073641     DEBUG  9030[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SacSimAssignCusDACImpl TO MAP
20190513: 073641     DEBUG  9030[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractBLO.get(SacSimAssignCusAbstractBLO.java:287) - get( filter )
20190513: 073641     DEBUG  9031[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractDACImpl.get(SacSimAssignCusAbstractDACImpl.java:205) - get( filter )
20190513: 073641     DEBUG  9031[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SacSimAssignCus|0|equalSacSimNo|

20190513: 073642     DEBUG  9481[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SacSimAssignCus
Execute SQL Statement: SELECT SAC_BILL_AC_NO, SAC_SIM_NO 
FROM sac_sim_assign_cus
WHERE SAC_SIM_NO = ? 
Argument(s): |0004102502505|
20190513: 073642      INFO 10081[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9984) - Passed customer no  not found in Sac_Sim_assign_cus
20190513: 073642     DEBUG 10082[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190513: 073642     DEBUG 10083[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSmnSimNosDAC(BaseAbstractDACFactory.java:387) - getSmnSimNosDAC()
20190513: 073642     DEBUG 10151[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SmnSimNosDACImpl com.eppixcomm.eppix.base.dml.SmnSimNosDMLFactory@104c575
20190513: 073642     DEBUG 10151[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SmnSimNosDACImpl
20190513: 073642     DEBUG 10152[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 073642     DEBUG 10153[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SmnSimNosDACImpl TO MAP
20190513: 073642     DEBUG 10153[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190513: 073642     DEBUG 10153[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190513: 073642     DEBUG 10154[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo|

20190513: 073643     DEBUG 10801[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ?
Argument(s): |0004102502505|
20190513: 073643     DEBUG 10802[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1950198
20190513: 073643     DEBUG 11061[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:10075) - NETWORK PARAMS: OPTION: ALL NETWORK ID:  NETWORKID.LENGTH: 0
20190513: 073643     DEBUG 11062[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 073643     DEBUG 11062[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.get(VamActiveMsisdnAbstractBLO.java:654) - get( filter )
20190513: 073643     DEBUG 11062[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.get(VamActiveMsisdnAbstractDACImpl.java:683) - get( filter )
20190513: 073643     DEBUG 11062[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSimNo+NOTINVamStatCode_2|

20190513: 073644     DEBUG 12162[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE (VAM_SIM_NO) = ? AND VAM_STAT_CODE NOT IN ( ? , ? )
Argument(s): |0004102502505|6|7|
20190513: 073644     DEBUG 12163[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@da6bf4
20190513: 073645     DEBUG 12402[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5665) - 
STEP 1
20190513: 073645     DEBUG 12402[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5684) - 
STEP 3
20190513: 073645     DEBUG 12402[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5689) - 
STEP 4
20190513: 073645     DEBUG 12402[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5691) - BASE: com.eppixcomm.eppix.base.blo.BaseBLOBinder@1e58cb8
20190513: 073645     DEBUG 12404[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsrService )
20190513: 073645     DEBUG 12404[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractBLO.get(VsrServiceAbstractBLO.java:576) - get( filter )
20190513: 073645     DEBUG 12404[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractDACImpl.get(VsrServiceAbstractDACImpl.java:517) - get( filter )
20190513: 073645     DEBUG 12404[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsrService|0|equalVsrServiceCode|

20190513: 073645     DEBUG 12562[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VsrService
Execute SQL Statement: SELECT VSR_SERVICE_CODE, VSR_SERVICE_TYPE, VSR_SERVICE_DESC, VSR_ORIGINATOR, VSR_SERVICE_CLASS, VSR_TEMP_DEACT, VSR_PRORATA, VSR_PROVIDER_ID, VSR_SHORT_DESC, VSR_SUSPEND
FROM VSR_SERVICE
WHERE VSR_SERVICE_CODE = ?
Argument(s): |AMR5|
20190513: 073645     DEBUG 12563[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@b9e45a
20190513: 073645     DEBUG 12802[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5695) - 
STEP 5
20190513: 073645     DEBUG 12803[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VpsPackageServ )
20190513: 073645     DEBUG 12804[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVpsPackageServDAC(BaseAbstractDACFactory.java:473) - getVpsPackageServDAC()
20190513: 073645     DEBUG 12881[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VpsPackageServDACImpl com.eppixcomm.eppix.base.dml.VpsPackageServDMLFactory@e0a386
20190513: 073645     DEBUG 12881[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VpsPackageServDACImpl
20190513: 073645     DEBUG 12882[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 073645     DEBUG 12883[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VpsPackageServDACImpl TO MAP
20190513: 073645     DEBUG 12883[main] - com.eppixcomm.eppix.base.blo.VpsPackageServAbstractBLO.get(VpsPackageServAbstractBLO.java:570) - get( filter )
20190513: 073645     DEBUG 12883[main] - com.eppixcomm.eppix.base.blo.VpsPackageServAbstractDACImpl.get(VpsPackageServAbstractDACImpl.java:489) - get( filter )
20190513: 073645     DEBUG 12883[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VpsPackageServ|0|equalVpsPackageCode+equalVpsServiceCode|

20190513: 073646     DEBUG 13462[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VpsPackageServ
Execute SQL Statement: SELECT VPS_PACKAGE_CODE, VPS_SERVICE_CODE, VPS_ALTER_CHARGE, VPS_MULTI_CHARGE, VPS_CHANGE_MULTI, VPS_PRICE_BY_TARIF, VPS_AUTO_CONNECT
FROM VPS_PACKAGE_SERV
WHERE (VPS_PACKAGE_CODE) = ? AND (VPS_SERVICE_CODE) = ?
Argument(s): |500FF|AMR5|
20190513: 073646     DEBUG 13462[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@da3a1e
20190513: 073646     DEBUG 13702[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: serviceExistsOnSim
20190513: 073646     DEBUG 13703[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
serviceExistsOnSim|0||

20190513: 073647     DEBUG 14262[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: serviceExistsOnSim
Execute SQL Statement: SELECT UNIQUE(0) FROM vam_active_msisdn, vsm_service_msisdn  WHERE vam_msisdn_no = vsm_msisdn_no AND vam_sim_no = ? AND vsm_service_code = ? 
Argument(s): |0004102502505|AMR5|
20190513: 073647     DEBUG 14262[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@2af081
20190513: 073647     DEBUG 14502[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getVamSimService
20190513: 073647     DEBUG 14502[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getVamSimService|0||

20190513: 073648     DEBUG 15262[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getVamSimService
Execute SQL Statement: SELECT vam_active_msisdn.*  FROM vam_active_msisdn, vsm_service_msisdn WHERE vam_active_msisdn.vam_sim_no = ?  AND vam_active_msisdn.vam_msisdn_no = vsm_service_msisdn.vsm_msisdn_no AND vsm_service_msisdn.vsm_service_code =  ? ORDER BY vam_hierarchy
Argument(s): |0004102502505|AMR5|
20190513: 073648     DEBUG 15265[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@c5495e
20190513: 073648     DEBUG 15503[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 073648     DEBUG 15504[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.count(VamActiveMsisdnAbstractBLO.java:730) - count( filter )
20190513: 073648     DEBUG 15504[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.count(VamActiveMsisdnAbstractDACImpl.java:739) - count( filter )
20190513: 073648     DEBUG 15504[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|10|equalVamSimNo+INVamStatCode_2|

20190513: 073648     DEBUG 15962[main] - com.eppixcomm.eppix.common.data.DAOImpl.count(DAOImpl.java:1162) - count(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT COUNT(*)
FROM VAM_ACTIVE_MSISDN
WHERE (VAM_SIM_NO) = ? AND VAM_STAT_CODE IN ( ? , ? )
Argument(s): |0004102502505|1|4|
20190513: 073648     ERROR 16102[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.simDeactivateService(SubscriberUpgradeMigradeBLO.java:3697) - Unable to find any records for SIM no  0004102502505 in status code 1 + 4
20190513: 073648      INFO 16103[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:156) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: Service (AMR5) is a basic service and cannot be deactivated for subscriber=607878
20190513: 074041     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:150) - loading appProperties
20190513: 074041     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:157) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190513: 074041     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:170) - DB Connection start
20190513: 074041     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:173) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190513: 074044     DEBUG  2826[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190513: 074044     DEBUG  2827[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190513: 074044     DEBUG  2828[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190513: 074044     DEBUG  2828[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190513: 074044     DEBUG  2850[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190513: 074044     DEBUG  2855[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@1b8f864
20190513: 074044     DEBUG  2857[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190513: 074044     DEBUG  2881[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074044     DEBUG  2882[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190513: 074044     DEBUG  2883[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 074044     DEBUG  2885[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190513: 074044     DEBUG  2887[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@3e89c3
20190513: 074044     DEBUG  2887[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190513: 074044     DEBUG  2888[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074044     DEBUG  2888[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190513: 074044     DEBUG  2889[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190513: 074044     DEBUG  2891[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190513: 074044     DEBUG  2893[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1bc82e7
20190513: 074044     DEBUG  2894[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190513: 074044     DEBUG  2894[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074044     DEBUG  2894[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190513: 074044     DEBUG  2896[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190513: 074044     DEBUG  2898[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190513: 074044     DEBUG  2900[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@140c281
20190513: 074044     DEBUG  2900[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190513: 074044     DEBUG  2900[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074044     DEBUG  2901[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190513: 074044     DEBUG  2901[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 074044     DEBUG  2910[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 074045     DEBUG  3106[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190513: 074045     DEBUG  3113[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@162dbb6
20190513: 074045     DEBUG  3113[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190513: 074045     DEBUG  3119[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074045     DEBUG  3119[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190513: 074045     DEBUG  3120[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 074045     DEBUG  3120[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190513: 074045     DEBUG  3120[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 074045     DEBUG  3120[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 074045     DEBUG  3120[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:200) - DB Connection successfull
20190513: 074045     DEBUG  3121[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1379) - 
Integer subscriberID: 607878
String msisdn: null
String serviceCode: AMR5
String partnerId: null
20190513: 074045     DEBUG  3123[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 074045     DEBUG  3218[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbdSubDetsDAC(BaseAbstractDACFactory.java:234) - getSbdSubDetsDAC()
20190513: 074045     DEBUG  3230[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl com.eppixcomm.eppix.base.dml.SbdSubDetsAbstractDMLFactory@1d0fafc
20190513: 074045     DEBUG  3230[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl
20190513: 074045     DEBUG  3232[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074045     DEBUG  3233[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl TO MAP
20190513: 074045     DEBUG  3233[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 074045     DEBUG  3233[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 074045     DEBUG  3241[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 074045     DEBUG  3707[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 074045     DEBUG  3710[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@fcfa52
20190513: 074046     DEBUG  4119[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 074046     DEBUG  4120[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190513: 074046     DEBUG  4128[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@1f06dc3
20190513: 074046     DEBUG  4129[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190513: 074046     DEBUG  4131[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074046     DEBUG  4131[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190513: 074046     DEBUG  4131[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190513: 074046     DEBUG  4131[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190513: 074046     DEBUG  4133[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190513: 074047     DEBUG  5079[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 074047     DEBUG  5084[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1d6f122
20190513: 074047     DEBUG  5262[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190513: 074047     DEBUG  5263[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVasActiveServiceDAC(BaseAbstractDACFactory.java:1177) - getVasActiveServiceDAC()
20190513: 074047     DEBUG  5266[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl com.eppixcomm.eppix.base.dml.VasActiveServiceDMLFactory@136a43c
20190513: 074047     DEBUG  5266[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl
20190513: 074047     DEBUG  5267[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074047     DEBUG  5268[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl TO MAP
20190513: 074047     DEBUG  5268[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190513: 074047     DEBUG  5268[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190513: 074047     DEBUG  5268[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode|

20190513: 074047     DEBUG  6021[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ? 
Argument(s): |607878|AMR5|
20190513: 074048     DEBUG  6444[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TsTariffService )
20190513: 074048     DEBUG  6445[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getTsTariffServiceDAC(BaseDACFactory.java:287) - getTsTariffServiceDAC()
20190513: 074048     DEBUG  6449[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl com.eppixcomm.eppix.base.dml.TsTariffServiceAbstractDMLFactory@164dbd5
20190513: 074048     DEBUG  6449[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl
20190513: 074048     DEBUG  6450[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074048     DEBUG  6451[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl TO MAP
20190513: 074048     DEBUG  6451[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractBLO.get(TsTariffServiceAbstractBLO.java:593) - get( filter )
20190513: 074048     DEBUG  6451[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractDACImpl.get(TsTariffServiceAbstractDACImpl.java:589) - get( filter )
20190513: 074048     DEBUG  6451[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TsTariffService|0|equalTsServiceCode+equalTsPackageCode+equalTsInternalTariff|

20190513: 074049     DEBUG  7303[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TsTariffService
Execute SQL Statement: SELECT TS_PACKAGE_CODE, TS_INTERNAL_TARIFF, TS_SERVICE_CODE, TS_NET_SERV_CODE, TS_ACT_CHARGE, TS_TDEACT_CHARGE, TS_REACT_CHARGE, TS_PDEACT_CHARGE, TS_SUB_CHARGE1, TS_SUB_CHARGE2, TS_SUB_CHARGE3, TS_CHARGE_PERIOD, TS_CHARGE_FREQ, TS_DISCOUNT_REF, TS_ACT_INCLUSIVE
FROM TS_TARIFF_SERVICE
WHERE (TS_SERVICE_CODE) = ? AND (TS_PACKAGE_CODE) = ? AND (TS_INTERNAL_TARIFF) = ?
Argument(s): |AMR5|500FF|ASKYL36M|
20190513: 074049     DEBUG  7303[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@f42ad0
20190513: 074049     DEBUG  7823[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getServRuleVas
20190513: 074049     DEBUG  7824[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getServRuleVas|0||

20190513: 074050     DEBUG  8504[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getServRuleVas
Execute SQL Statement: SELECT count(*) FROM svr_serv_rule, vas_active_service WHERE svr_serv_type = 'E' AND svr_target_serv = vas_service_code AND svr_primary_serv = ? AND vas_subscriber_id =? 
Argument(s): |AMR5|607878|
20190513: 074050     DEBUG  8507[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@13f7281
20190513: 074050     DEBUG  8805[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 074050     DEBUG  8805[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 074050     DEBUG  8806[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 074050     DEBUG  8806[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 074050     DEBUG  9025[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 074050     DEBUG  9026[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1171b26
20190513: 074051     DEBUG  9507[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbaSubAux )
20190513: 074051     DEBUG  9508[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbaSubAuxDAC(BaseAbstractDACFactory.java:995) - getSbaSubAuxDAC()
20190513: 074051     DEBUG  9580[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbaSubAuxDACImpl com.eppixcomm.eppix.base.dml.SbaSubAuxDMLFactory@5a67c9
20190513: 074051     DEBUG  9580[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbaSubAuxDACImpl
20190513: 074051     DEBUG  9583[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074051     DEBUG  9583[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbaSubAuxDACImpl TO MAP
20190513: 074051     DEBUG  9583[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractBLO.get(SbaSubAuxAbstractBLO.java:283) - get( filter )
20190513: 074051     DEBUG  9583[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractDACImpl.get(SbaSubAuxAbstractDACImpl.java:101) - get( filter )
20190513: 074051     DEBUG  9584[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbaSubAux|0|equalSbaSubscriberId|

20190513: 074052     DEBUG 10829[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbaSubAux
Execute SQL Statement: SELECT SBA_SUBSCRIBER_ID, SBA_ID_NUMBER, SBA_MATCHCODE, SBA_MARKETING, SBA_THIRD_PARTY, SBA_CUST_DEPT, SBA_DEALER_ID, SBA_DEPARTMENT, SBA_SALESMAN, SBA_REGION, SBA_INVOICE_ADDRID, SBA_INV_ACCOUNT, SBA_PREPAID_STAT, SBA_ANALYSIS_1, SBA_ANALYSIS_2, SBA_ANALYSIS_3, SBA_ANALYSIS_4, SBA_ANALYSIS_5, SBA_ANALYSIS_6, SBA_ANALYSIS_7, SBA_ANALYSIS_8, SBA_ANALYSIS_9, SBA_ANALYSIS_10, SBA_ANALYSIS_11, SBA_ANALYSIS_12, SBA_ANALYSIS_13, SBA_ANALYSIS_14, SBA_ANALYSIS_15, SBA_ANALYSIS_16, SBA_ANALYSIS_17, SBA_ANALYSIS_18, SBA_ANALYSIS_19, SBA_ANALYSIS_20, SBA_ANALYSIS_21, SBA_ANALYSIS_22, SBA_ANALYSIS_23, SBA_ANALYSIS_24, SBA_ANALYSIS_25, SBA_ANALYSIS_26, SBA_ANALYSIS_27, SBA_ANALYSIS_28, SBA_ANALYSIS_29, SBA_ANALYSIS_30,SBA_COMMENTS
FROM SBA_SUB_AUX
WHERE SBA_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 074052     DEBUG 10831[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@6caf16
20190513: 074053     DEBUG 11169[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd1
20190513: 074053     DEBUG 11169[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd1|0||

20190513: 074053     DEBUG 11830[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd1
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |P|500FF||||
20190513: 074054     DEBUG 12112[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd1
20190513: 074054     DEBUG 12112[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd1|0||

20190513: 074054     DEBUG 12271[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd1
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |T|ASKYL36M||||
20190513: 074054     DEBUG 12652[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd1
20190513: 074054     DEBUG 12652[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd1|0||

20190513: 074054     DEBUG 12832[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd1
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |S|AMR5||||
20190513: 074055     DEBUG 13153[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd3
20190513: 074055     DEBUG 13153[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd3|0||

20190513: 074056     DEBUG 14535[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd3
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND ur_right_id IN  (SELECT ur2.ur_right_id FROM ur_user_restrict ur2  WHERE ur_type = ?  AND ur_code = ?  AND ur1.ur_group_id = ur2.ur_group_id  AND ur_right_id IN  (SELECT ur3.ur_right_id FROM ur_user_restrict ur3  WHERE ur_type = ?  AND ur_code = ?  AND ur1.ur_group_id = ur3.ur_group_id))  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |P3|500FF|S3|AMR5|T3|ASKYL36M||||
20190513: 074056     DEBUG 14817[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190513: 074056     DEBUG 14817[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSmnSimNosDAC(BaseAbstractDACFactory.java:387) - getSmnSimNosDAC()
20190513: 074056     DEBUG 14822[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SmnSimNosDACImpl com.eppixcomm.eppix.base.dml.SmnSimNosDMLFactory@1a116c9
20190513: 074056     DEBUG 14822[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SmnSimNosDACImpl
20190513: 074056     DEBUG 14823[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074056     DEBUG 14824[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SmnSimNosDACImpl TO MAP
20190513: 074056     DEBUG 14824[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190513: 074056     DEBUG 14826[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190513: 074056     DEBUG 14828[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo|

20190513: 074057     DEBUG 15557[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ?
Argument(s): |0004102502505|
20190513: 074057     DEBUG 15557[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@d3db51
20190513: 074057     DEBUG 15878[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9355) - 
=======================================================================================
PARAM OPTION: ACTIVE
PARAM SIM NO: 0004102502505
PARAM NETWORK ID: 
PARAM HLR: 
PARAM DEALER ID: 
PARAM CUSTOMER: 
=======================================================================================
20190513: 074057     DEBUG 15879[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SacSimAssignCus )
20190513: 074057     DEBUG 15879[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSacSimAssignCusDAC(BaseAbstractDACFactory.java:1345) - getSacSimAssignCusDAC()
20190513: 074057     DEBUG 15881[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SacSimAssignCusDACImpl com.eppixcomm.eppix.base.dml.SacSimAssignCusDMLFactory@117f31e
20190513: 074057     DEBUG 15881[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SacSimAssignCusDACImpl
20190513: 074057     DEBUG 15882[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074057     DEBUG 15883[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SacSimAssignCusDACImpl TO MAP
20190513: 074057     DEBUG 15883[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractBLO.get(SacSimAssignCusAbstractBLO.java:287) - get( filter )
20190513: 074057     DEBUG 15883[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractDACImpl.get(SacSimAssignCusAbstractDACImpl.java:205) - get( filter )
20190513: 074057     DEBUG 15883[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SacSimAssignCus|0|equalSacSimNo|

20190513: 074058     DEBUG 16399[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SacSimAssignCus
Execute SQL Statement: SELECT SAC_BILL_AC_NO, SAC_SIM_NO 
FROM sac_sim_assign_cus
WHERE SAC_SIM_NO = ? 
Argument(s): |0004102502505|
20190513: 074058      INFO 16759[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9984) - Passed customer no  not found in Sac_Sim_assign_cus
20190513: 074058     DEBUG 16759[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190513: 074058     DEBUG 16760[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190513: 074058     DEBUG 16760[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190513: 074058     DEBUG 16760[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo+equalSmnStatus|

20190513: 074059     DEBUG 17620[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ? AND SMN_STATUS = ?
Argument(s): |0004102502505|1|
20190513: 074059     DEBUG 17621[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1774b9b
20190513: 074059     DEBUG 17900[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:10075) - NETWORK PARAMS: OPTION: ACTIVE NETWORK ID:  NETWORKID.LENGTH: 0
20190513: 074059     DEBUG 17901[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5665) - 
STEP 1
20190513: 074059     DEBUG 17901[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5684) - 
STEP 3
20190513: 074059     DEBUG 17901[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5689) - 
STEP 4
20190513: 074059     DEBUG 17901[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5691) - BASE: com.eppixcomm.eppix.base.blo.BaseBLOBinder@104c575
20190513: 074059     DEBUG 17902[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsrService )
20190513: 074059     DEBUG 17903[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVsrServiceDAC(BaseAbstractDACFactory.java:486) - getVsrServiceDAC()
20190513: 074059     DEBUG 17908[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VsrServiceDACImpl com.eppixcomm.eppix.base.dml.VsrServiceDMLFactory@179935d
20190513: 074059     DEBUG 17908[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VsrServiceDACImpl
20190513: 074059     DEBUG 17909[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074059     DEBUG 17909[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VsrServiceDACImpl TO MAP
20190513: 074059     DEBUG 17910[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractBLO.get(VsrServiceAbstractBLO.java:576) - get( filter )
20190513: 074059     DEBUG 17910[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractDACImpl.get(VsrServiceAbstractDACImpl.java:517) - get( filter )
20190513: 074059     DEBUG 17910[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsrService|0|equalVsrServiceCode|

20190513: 074100     DEBUG 18501[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VsrService
Execute SQL Statement: SELECT VSR_SERVICE_CODE, VSR_SERVICE_TYPE, VSR_SERVICE_DESC, VSR_ORIGINATOR, VSR_SERVICE_CLASS, VSR_TEMP_DEACT, VSR_PRORATA, VSR_PROVIDER_ID, VSR_SHORT_DESC, VSR_SUSPEND
FROM VSR_SERVICE
WHERE VSR_SERVICE_CODE = ?
Argument(s): |AMR5|
20190513: 074100     DEBUG 18502[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@3ef810
20190513: 074100     DEBUG 18782[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5695) - 
STEP 5
20190513: 074100     DEBUG 18784[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190513: 074100     DEBUG 18785[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSksKeySettingDAC(BaseAbstractDACFactory.java:314) - getSksKeySettingDAC()
20190513: 074100     DEBUG 18835[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SksKeySettingDACImpl com.eppixcomm.eppix.base.dml.SksKeySettingAbstractDMLFactory@da3a1e
20190513: 074100     DEBUG 18835[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SksKeySettingDACImpl
20190513: 074100     DEBUG 18836[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074100     DEBUG 18837[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SksKeySettingDACImpl TO MAP
20190513: 074100     DEBUG 18837[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190513: 074100     DEBUG 18837[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190513: 074100     DEBUG 18838[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190513: 074101     DEBUG 19443[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |PRTNSRVTYP|
20190513: 074101     DEBUG 19484[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@b03be0
20190513: 074101     DEBUG 19785[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VpsPackageServ )
20190513: 074101     DEBUG 19786[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVpsPackageServDAC(BaseAbstractDACFactory.java:473) - getVpsPackageServDAC()
20190513: 074101     DEBUG 19788[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VpsPackageServDACImpl com.eppixcomm.eppix.base.dml.VpsPackageServDMLFactory@16925b0
20190513: 074101     DEBUG 19789[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VpsPackageServDACImpl
20190513: 074101     DEBUG 19792[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074101     DEBUG 19792[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VpsPackageServDACImpl TO MAP
20190513: 074101     DEBUG 19792[main] - com.eppixcomm.eppix.base.blo.VpsPackageServAbstractBLO.get(VpsPackageServAbstractBLO.java:570) - get( filter )
20190513: 074101     DEBUG 19792[main] - com.eppixcomm.eppix.base.blo.VpsPackageServAbstractDACImpl.get(VpsPackageServAbstractDACImpl.java:489) - get( filter )
20190513: 074101     DEBUG 19793[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VpsPackageServ|0|equalVpsPackageCode+equalVpsServiceCode|

20190513: 074102     DEBUG 20345[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VpsPackageServ
Execute SQL Statement: SELECT VPS_PACKAGE_CODE, VPS_SERVICE_CODE, VPS_ALTER_CHARGE, VPS_MULTI_CHARGE, VPS_CHANGE_MULTI, VPS_PRICE_BY_TARIF, VPS_AUTO_CONNECT
FROM VPS_PACKAGE_SERV
WHERE (VPS_PACKAGE_CODE) = ? AND (VPS_SERVICE_CODE) = ?
Argument(s): |500FF|AMR5|
20190513: 074102     DEBUG 20346[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@71dc3d
20190513: 074102     DEBUG 20585[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TsTariffService )
20190513: 074102     DEBUG 20585[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractBLO.get(TsTariffServiceAbstractBLO.java:593) - get( filter )
20190513: 074102     DEBUG 20586[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractDACImpl.get(TsTariffServiceAbstractDACImpl.java:589) - get( filter )
20190513: 074102     DEBUG 20586[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TsTariffService|0|equalTsPackageCode+equalTsServiceCode+equalornullTsInternalTariff|

20190513: 074103     DEBUG 21256[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TsTariffService
Execute SQL Statement: SELECT TS_PACKAGE_CODE, TS_INTERNAL_TARIFF, TS_SERVICE_CODE, TS_NET_SERV_CODE, TS_ACT_CHARGE, TS_TDEACT_CHARGE, TS_REACT_CHARGE, TS_PDEACT_CHARGE, TS_SUB_CHARGE1, TS_SUB_CHARGE2, TS_SUB_CHARGE3, TS_CHARGE_PERIOD, TS_CHARGE_FREQ, TS_DISCOUNT_REF, TS_ACT_INCLUSIVE
FROM TS_TARIFF_SERVICE
WHERE (TS_PACKAGE_CODE) = ? AND (TS_SERVICE_CODE) = ? AND ((TS_INTERNAL_TARIFF) = ? OR TS_INTERNAL_TARIFF IS NULL)
Argument(s): |500FF|AMR5|ASKYL36M|
20190513: 074103     DEBUG 21257[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1326484
20190513: 074103     DEBUG 21648[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VstServiceTypes )
20190513: 074103     DEBUG 21649[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVstServiceTypesDAC(BaseAbstractDACFactory.java:499) - getVstServiceTypesDAC()
20190513: 074103     DEBUG 21652[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VstServiceTypesDACImpl com.eppixcomm.eppix.base.dml.VstServiceTypesDMLFactory@1742700
20190513: 074103     DEBUG 21652[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VstServiceTypesDACImpl
20190513: 074103     DEBUG 21653[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074103     DEBUG 21653[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VstServiceTypesDACImpl TO MAP
20190513: 074103     DEBUG 21653[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractBLO.get(VstServiceTypesAbstractBLO.java:595) - get( filter )
20190513: 074103     DEBUG 21654[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractDACImpl.get(VstServiceTypesAbstractDACImpl.java:540) - get( filter )
20190513: 074103     DEBUG 21654[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VstServiceTypes|0|equalVstServiceType|

20190513: 074104     DEBUG 22789[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VstServiceTypes
Execute SQL Statement: SELECT VST_SERVICE_TYPE, VST_SERVICE_DESC, VST_MULTI_CHARGE, VST_SERVICE_CLASS, VST_AUTO_CONNECT, VST_ORIGINATOR, VST_TARIFF_RELATED, VST_PARAMETERISED, VST_PARAMS_LEVEL, VST_ARCHIVE_MONTHS, VST_FUTURE_ACT, VST_NODE_LEVEL
FROM VST_SERVICE_TYPES
WHERE VST_SERVICE_TYPE = ?
Argument(s): |SW|
20190513: 074104     DEBUG 22790[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1af33d6
20190513: 074105      INFO 23300[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getServiceType(SubscriberUpgradeMigradeBLO.java:12935) - FOUND Service type from VST for SW
20190513: 074105     DEBUG 23300[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getMinVamConnectDate
20190513: 074105     DEBUG 23301[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getMinVamConnectDate|0||

20190513: 074114     DEBUG 32506[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getMinVamConnectDate
Execute SQL Statement: SELECT MIN((VAM_CONNECT_DATE)) FROM VAM_ACTIVE_MSISDN  WHERE VAM_SUBSCRIBER_ID = ?  AND VAM_STAT_CODE IN ( 1 , 4 )
Argument(s): |607878|
20190513: 074114     DEBUG 32507[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@89cc5e
20190513: 074117     DEBUG 35572[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NmNetmat )
20190513: 074117     DEBUG 35573[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getNmNetmatDAC(BaseAbstractDACFactory.java:167) - getNmNetmatDAC()
20190513: 074117     DEBUG 35645[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.NmNetmatDACImpl com.eppixcomm.eppix.base.dml.NmNetmatDMLFactory@384065
20190513: 074117     DEBUG 35645[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.NmNetmatDACImpl
20190513: 074117     DEBUG 35647[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074117     DEBUG 35647[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.NmNetmatDACImpl TO MAP
20190513: 074117     DEBUG 35647[main] - com.eppixcomm.eppix.base.blo.NmNetmatAbstractBLO.get(NmNetmatAbstractBLO.java:527) - get( filter )
20190513: 074117     DEBUG 35647[main] - com.eppixcomm.eppix.base.blo.NmNetmatAbstractDACImpl.get(NmNetmatAbstractDACImpl.java:501) - get( filter )
20190513: 074117     DEBUG 35650[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NmNetmat|0|equalNmInternalTariff|

20190513: 074119     DEBUG 37834[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: NmNetmat
Execute SQL Statement: SELECT NM_INTERNAL_TARIFF, NM_NETWORK_TARIFF, NM_CONTRACT_PERIOD, NM_NTWRK_CONTR_PER, NM_MIN_CANC_PERIOD, NM_HIGHER_MIG_TYPE, NM_LOWER_MIG_TYPE, NM_SAME_MIG_TYPE, NM_NETWORK_ID, NM_NET_TYPE 
FROM nm_netmat
WHERE NM_INTERNAL_TARIFF = ? 
Argument(s): |ASKYL36M|
20190513: 074119     DEBUG 37835[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@194d372
20190513: 074120     DEBUG 38157[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.ChgCharges )
20190513: 074120     DEBUG 38158[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getChgChargesDAC(BaseAbstractDACFactory.java:578) - getChgChargesDAC()
20190513: 074120     DEBUG 38263[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.ChgChargesDACImpl com.eppixcomm.eppix.base.dml.ChgChargesDMLFactory@b307f0
20190513: 074120     DEBUG 38263[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.ChgChargesDACImpl
20190513: 074120     DEBUG 38265[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074120     DEBUG 38265[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.ChgChargesDACImpl TO MAP
20190513: 074120     DEBUG 38265[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractBLO.max(ChgChargesAbstractBLO.java:593) - max( filter )
20190513: 074120     DEBUG 38265[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractDACImpl.max(ChgChargesAbstractDACImpl.java:542) - max( filter )
20190513: 074120     DEBUG 38268[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
ChgCharges|14|equalChgCode+equalChgNetid+lessthanorequalChgEffectiveDate+equalChgChargef|

20190513: 074122     DEBUG 40500[main] - com.eppixcomm.eppix.common.data.DAOImpl.max(DAOImpl.java:1220) - max(param SQL): DML Name: ChgCharges
Execute SQL Statement: SELECT MAX(CHG_CODE, CHG_NETID, CHG_EFFECTIVE_DATE)
FROM CHG_CHARGES
WHERE CHG_CODE = ? AND CHG_NETID = ? AND CHG_EFFECTIVE_DATE <= ? AND CHG_CHARGEF = ?
Argument(s): |AR500|M1|2019-05-13|F|
20190513: 074122     DEBUG 40700[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getChg(SubscriberUpgradeMigradeBLO.java:14652) - 1 EFF DATE: 2018-04-04
20190513: 074122     DEBUG 40700[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getChg(SubscriberUpgradeMigradeBLO.java:14811) - Effective Date set to 2018-04-04
20190513: 074122     DEBUG 40700[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.ChgCharges )
20190513: 074122     DEBUG 40700[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractBLO.get(ChgChargesAbstractBLO.java:564) - get( filter )
20190513: 074122     DEBUG 40700[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractDACImpl.get(ChgChargesAbstractDACImpl.java:523) - get( filter )
20190513: 074122     DEBUG 40701[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
ChgCharges|0|equalChgCode+equalChgNetid+equalChgEffectiveDate+equalChgChargef|

20190513: 074123     DEBUG 41381[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: ChgCharges
Execute SQL Statement: SELECT CHG_CODE, CHG_DESCRIPTION, CHG_VALUE, CHG_VAT_CODE, CHG_NCODE, CHG_NETID, CHG_CHARGEF, CHG_PERIOD, CHG_FREQUENCY, CHG_EFFECTIVE_DATE, CHG_CLASS_ID
FROM CHG_CHARGES
WHERE CHG_CODE = ? AND CHG_NETID = ? AND CHG_EFFECTIVE_DATE = ? AND CHG_CHARGEF = ?
Argument(s): |AR500|M1|2018-04-04|F|
20190513: 074123     DEBUG 41382[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@db4fa2
20190513: 074123     DEBUG 41723[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TtTypeText )
20190513: 074123     DEBUG 41724[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getTtTypeTextDAC(BaseAbstractDACFactory.java:144) - getTtTypeTextDAC()
20190513: 074123     DEBUG 41792[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.TtTypeTextDACImpl com.eppixcomm.eppix.base.dml.TtTypeTextAbstractDMLFactory@165a3c2
20190513: 074123     DEBUG 41792[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.TtTypeTextDACImpl
20190513: 074123     DEBUG 41793[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074123     DEBUG 41794[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.TtTypeTextDACImpl TO MAP
20190513: 074123     DEBUG 41794[main] - com.eppixcomm.eppix.base.blo.TtTypeTextAbstractBLO.get(TtTypeTextAbstractBLO.java:542) - get( filter )
20190513: 074123     DEBUG 41794[main] - com.eppixcomm.eppix.base.blo.TtTypeTextAbstractDACImpl.get(TtTypeTextAbstractDACImpl.java:451) - get( filter )
20190513: 074123     DEBUG 41794[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TtTypeText|0|equalTtGroup+equalTtType+equalTtLang|

20190513: 074124     DEBUG 42923[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TtTypeText
Execute SQL Statement: SELECT TT_GROUP, TT_LANG, TT_TYPE, TT_TEXT, TT_CONFIG
FROM TT_TYPE_TEXT
WHERE (TT_GROUP) = ? AND (TT_TYPE) = ? AND (TT_LANG) = ?
Argument(s): |BILLING|M|ENG|
20190513: 074124     DEBUG 42924[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1242b11
20190513: 074125     DEBUG 43264[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: serviceExistsOnSim
20190513: 074125     DEBUG 43264[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
serviceExistsOnSim|0||

20190513: 074125     DEBUG 43825[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: serviceExistsOnSim
Execute SQL Statement: SELECT UNIQUE(0) FROM vam_active_msisdn, vsm_service_msisdn  WHERE vam_msisdn_no = vsm_msisdn_no AND vam_sim_no = ? AND vsm_service_code = ? 
Argument(s): |0004102502505|AMR5|
20190513: 074125     DEBUG 43825[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1878144
20190513: 074126     ERROR 44506[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65083) - Service exist on SIM: 0004102502505 and Service Code: AMR5
20190513: 074126     DEBUG 44508[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190513: 074126     DEBUG 44508[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190513: 074126     DEBUG 44508[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190513: 074126     DEBUG 44509[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190513: 074126     DEBUG 44747[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |VRSERVICE|
20190513: 074126     DEBUG 44747[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@15db314
20190513: 074126     DEBUG 45027[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190513: 074126     DEBUG 45027[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190513: 074126     DEBUG 45027[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190513: 074126     DEBUG 45027[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode+equalornullVasInternTariff|

20190513: 074127     DEBUG 45869[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ?  AND (VAS_INTERN_TARIFF = ? OR VAS_INTERN_TARIFF IS NULL) 
Argument(s): |607878|AMR5|ASKYL36M|
20190513: 074128     ERROR 46790[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSubscriberService(SubscriberUpgradeMigradeBLO.java:5772) - Cannot SELECT subscriber service details from table vas_active_service for subscriber 607878 Service: AMR5 Tariff: ASKYL36M
20190513: 074128     DEBUG 46791[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65186) - 1 Before VAS create
20190513: 074128     DEBUG 46791[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65188) - 1A Before VAS createSW
20190513: 074128     DEBUG 46791[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65191) - 
Subscriber: 607878
connect_date: 2019-05-13
sub charge 1: AR500
sub charge 2: 
sub charge 3: 
multiCharge: N
tariff: ASKYL36M
20190513: 074128     DEBUG 46791[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65197) - VST TARIFF RELATED: Y
20190513: 074128     DEBUG 46791[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65217) - INSIDE TARIFF RELATED = 
20190513: 074128     DEBUG 46791[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65220) - 2 Before VAS create
20190513: 074128     DEBUG 46792[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
createVas|12||

20190513: 074129     DEBUG 47712[main] - com.eppixcomm.eppix.common.data.DAOImpl.execute(DAOImpl.java:3581) - execute(static SQL): DML Name: createVas
Execute SQL Statement: INSERT INTO VAS_ACTIVE_SERVICE (VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE)VALUES (?,?,?,?,?,?,?,?,?,?,?)
Argument(s): |607878|AMR5|ASKYL36M|SW|2019-05-13||AR500|||0|N|
20190513: 074129     DEBUG 47712[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getVasBillLimitByMsisdnTariff
20190513: 074129     DEBUG 47712[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getVasBillLimitByMsisdnTariff|0||

20190513: 074130     DEBUG 48633[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getVasBillLimitByMsisdnTariff
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE, VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE  FROM vas_active_service, vam_active_msisdn  WHERE vas_service_code = ?  AND vam_msisdn_no = ?  AND vas_subscriber_id = vam_subscriber_id  AND (vas_intern_tariff = ?  OR vas_intern_tariff IS NULL)
Argument(s): |AMR5|833819663|ASKYL36M|
20190513: 074130     DEBUG 48633[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1f48262
20190513: 074130     ERROR 48934[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65288) - Failed to get twinbill
20190513: 074130     DEBUG 48934[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 074130     DEBUG 48934[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190513: 074130     DEBUG 48934[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190513: 074130     DEBUG 48934[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId+equalVamSimNo+INVamStatCode_2|VamHierarchyasc,VamMsisdnKnownasc

20190513: 074132     DEBUG 50229[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ? AND (VAM_SIM_NO) = ? AND VAM_STAT_CODE IN ( ? , ? ) ORDER BY VAM_HIERARCHY ASC,VAM_MSISDN_KNOWN ASC
Argument(s): |607878|0004102502505|1|4|
20190513: 074132     DEBUG 50230[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1884174
20190513: 074132     DEBUG 50357[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 074132     DEBUG 50357[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 074132     DEBUG 50357[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 074132     DEBUG 50357[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 074132     DEBUG 50577[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 074132     DEBUG 50577[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@814013
20190513: 074132     DEBUG 50877[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190513: 074132     DEBUG 50878[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190513: 074132     DEBUG 50878[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190513: 074132     DEBUG 50878[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190513: 074133     DEBUG 51088[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |PRESTIGSVC|
20190513: 074133     DEBUG 51089[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@195d4fe
20190513: 074133     DEBUG 51340[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190513: 074133     DEBUG 51340[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190513: 074133     DEBUG 51340[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190513: 074133     DEBUG 51340[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode+equalornullVasInternTariff|

20190513: 074133     DEBUG 52019[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ?  AND (VAS_INTERN_TARIFF = ? OR VAS_INTERN_TARIFF IS NULL) 
Argument(s): |607878|PRST|ASKYL36M|
20190513: 074134     ERROR 52319[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.checkPrestigeSubscriber(SubscriberUpgradeMigradeBLO.java:9068) - Failed to get VAS records for subscriber: 607878 old service: ASKYL36M old tariff: PRST
20190513: 074134     DEBUG 52324[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsmServiceMsisdn )
20190513: 074134     DEBUG 52324[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVsmServiceMsisdnDAC(BaseDACFactory.java:271) - getVsmServiceMsisdnDAC()
20190513: 074134     DEBUG 52394[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VsmServiceMsisdnDACImpl com.eppixcomm.eppix.base.dml.VsmServiceMsisdnAbstractDMLFactory@baa466
20190513: 074134     DEBUG 52395[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VsmServiceMsisdnDACImpl
20190513: 074134     DEBUG 52395[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074134     DEBUG 52396[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VsmServiceMsisdnDACImpl TO MAP
20190513: 074134     DEBUG 52396[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractBLO.create(VsmServiceMsisdnAbstractBLO.java:209) - create( vsmServiceMsisdnDMO )
20190513: 074134     DEBUG 52396[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractBLO.exists(VsmServiceMsisdnAbstractBLO.java:453) - exists(vsmServiceMsisdn)
20190513: 074134     DEBUG 52396[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractDACImpl.exists(VsmServiceMsisdnAbstractDACImpl.java:249) - exists( VsmServiceMsisdnDMO)
20190513: 074134     DEBUG 52396[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsmServiceMsisdn|9|filterByPrimaryKey|

20190513: 074134     DEBUG 52960[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: VsmServiceMsisdn
Execute SQL Statement: SELECT DISTINCT(0)
FROM VSM_SERVICE_MSISDN
WHERE VSM_SUBSCRIBER_ID = ? AND  VSM_SERVICE_CODE = ? AND  VSM_MSISDN_NO = ?
Argument(s): |607878|AMR5|833819663|
20190513: 074135      INFO 53183[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:156) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: vsmServiceMsisdnDMO does exist
20190513: 074135     ERROR 53183[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65386) - Exception inserting new VSM record for subscriber: 607878 EXCEPTION: com.eppixcomm.eppix.base.error.EPPIXBusinessException: vsmServiceMsisdnDMO does exist
20190513: 074135     DEBUG 53187[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.MshMsisdnHistory )
20190513: 074135     DEBUG 53188[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getMshMsisdnHistoryDAC(BaseAbstractDACFactory.java:762) - getMshMsisdnHistoryDAC()
20190513: 074135     DEBUG 53292[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.MshMsisdnHistoryDACImpl com.eppixcomm.eppix.base.dml.MshMsisdnHistoryDMLFactory@1c0f2e5
20190513: 074135     DEBUG 53292[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.MshMsisdnHistoryDACImpl
20190513: 074135     DEBUG 53292[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074135     DEBUG 53293[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.MshMsisdnHistoryDACImpl TO MAP
20190513: 074135     DEBUG 53293[main] - com.eppixcomm.eppix.base.blo.MshMsisdnHistoryAbstractBLO.create(MshMsisdnHistoryAbstractBLO.java:138) - create( mshMsisdnHistoryDMO )
20190513: 074135     DEBUG 53293[main] - com.eppixcomm.eppix.base.blo.MshMsisdnHistoryAbstractDACImpl.create(MshMsisdnHistoryAbstractDACImpl.java:98) - create( mshMsisdnHistoryDMO )
20190513: 074135     DEBUG 53293[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
MshMsisdnHistory|11||

20190513: 074135     DEBUG 53542[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 607878|833819663      |ESWA      |BSWA A0311553 AMR5 0004102502505 2019-05-13       |||2019-05-13 07:41:35
20190513: 074136     DEBUG 54122[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: MshMsisdnHistory
Execute SQL Statement: INSERT INTO MSH_MSISDN_HISTORY (MSH_SUBSCRIBER_ID, MSH_MSISDN_NO, MSH_HIST_CODE, MSH_COMMENT, MSH_USER_ID, MSH_TERMINAL_ID, MSH_TIMESTAMP) VALUES (?,?,?,?,?,?,?)
Argument(s): |607878|833819663      |ESWA      |BSWA A0311553 AMR5 0004102502505 2019-05-13       |||2019-05-13 07:41:35|
20190513: 074136     DEBUG 54123[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.ShcSmsHistcode )
20190513: 074136     DEBUG 54124[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getShcSmsHistcodeDAC(BaseAbstractDACFactory.java:1429) - getShcSmsHistcodeDAC()
20190513: 074136     DEBUG 54196[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.ShcSmsHistcodeDACImpl com.eppixcomm.eppix.base.dml.ShcSmsHistcodeDMLFactory@1649b44
20190513: 074136     DEBUG 54196[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.ShcSmsHistcodeDACImpl
20190513: 074136     DEBUG 54197[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074136     DEBUG 54197[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.ShcSmsHistcodeDACImpl TO MAP
20190513: 074136     DEBUG 54198[main] - com.eppixcomm.eppix.base.blo.ShcSmsHistcodeAbstractBLO.get(ShcSmsHistcodeAbstractBLO.java:267) - get( filter )
20190513: 074136     DEBUG 54198[main] - com.eppixcomm.eppix.base.blo.ShcSmsHistcodeAbstractDACImpl.get(ShcSmsHistcodeAbstractDACImpl.java:192) - get( filter )
20190513: 074136     DEBUG 54198[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
ShcSmsHistcode|0|equalShcHistCode|

20190513: 074136     DEBUG 54723[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: ShcSmsHistcode
Execute SQL Statement: SELECT SHC_MESG_ID, SHC_HIST_CODE 
FROM shc_sms_histcode
WHERE SHC_HIST_CODE = ? 
Argument(s): |ESWA|
20190513: 074136     DEBUG 55024[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65424) - BEFORE CHECK : (multiCharge.equals('Y') || firstOnSim
20190513: 074136     DEBUG 55024[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65426) - 
multiCharge: N
firstOnSim: true
vamDmo.getVamMsisdnNo: 833819663
20190513: 074136     DEBUG 55024[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65441) - BEFORE updateVsmBilledupto
20190513: 074136     DEBUG 55024[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.updateVsmBilledupto(SubscriberUpgradeMigradeBLO.java:6453) - 
updateVsmBilledupto 
Subscriber: 607878
msisdnNo: 833819663
serviceCode: AMR5
PRORATA DATE: 2019-05-13
20190513: 074136     DEBUG 55025[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 074136     DEBUG 55025[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 074136     DEBUG 55025[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 074136     DEBUG 55025[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 074137     DEBUG 55325[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 074137     DEBUG 55328[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1712b3a
20190513: 074137     DEBUG 55626[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BcyBillingCycle )
20190513: 074137     DEBUG 55627[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getBcyBillingCycleDAC(BaseAbstractDACFactory.java:550) - getBcyBillingCycleDAC()
20190513: 074137     DEBUG 55727[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.BcyBillingCycleDACImpl com.eppixcomm.eppix.base.dml.BcyBillingCycleDMLFactory@1977b9b
20190513: 074137     DEBUG 55728[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.BcyBillingCycleDACImpl
20190513: 074137     DEBUG 55729[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074137     DEBUG 55729[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.BcyBillingCycleDACImpl TO MAP
20190513: 074137     DEBUG 55729[main] - com.eppixcomm.eppix.base.blo.BcyBillingCycleAbstractBLO.get(BcyBillingCycleAbstractBLO.java:587) - get( filter )
20190513: 074137     DEBUG 55729[main] - com.eppixcomm.eppix.base.blo.BcyBillingCycleAbstractDACImpl.get(BcyBillingCycleAbstractDACImpl.java:492) - get( filter )
20190513: 074137     DEBUG 55730[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BcyBillingCycle|0|equalBcyBillCycle|

20190513: 074138     DEBUG 56347[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: BcyBillingCycle
Execute SQL Statement: SELECT BCY_BILL_CYCLE, BCY_DESCRIPTION, BCY_PERIOD, BCY_FREQUENCY, BCY_DAY_OF_RUN, BCY_NEXT_RUN, BCY_SUSPENDED, BCY_USE_STATUS, BCY_NEXT_CALL_RUN, BCY_IN_ADVANCE
FROM BCY_BILLING_CYCLE
WHERE BCY_BILL_CYCLE = ?
Argument(s): |CYC13|
20190513: 074138     DEBUG 56347[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@b7ec5d
20190513: 074138     DEBUG 56647[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17874) - initialDate: 26 Apr 2019
20190513: 074138     DEBUG 56647[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17875) - period: M
20190513: 074138     DEBUG 56647[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17876) - freq: 1
20190513: 074138     DEBUG 56647[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17877) - day: 26
20190513: 074138     DEBUG 56648[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17878) - type: F
20190513: 074138     DEBUG 56648[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17923) - MONTH calcDate: 26 May 2019
20190513: 074138     DEBUG 56648[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsmServiceMsisdn )
20190513: 074138     DEBUG 56648[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractBLO.modify(VsmServiceMsisdnAbstractBLO.java:369) - modify( filter )
20190513: 074138     DEBUG 56648[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractDACImpl.modify(VsmServiceMsisdnAbstractDACImpl.java:181) - modify( filter )
20190513: 074138     DEBUG 56648[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsmServiceMsisdn|16|equalVsmSubscriberId+equalVsmMsisdnNo+equalVsmServiceCode|

20190513: 074139     DEBUG 57188[main] - com.eppixcomm.eppix.common.data.DAOImpl.updateCustom(DAOImpl.java:2935) - updateCustom(DBO): DML Name: VsmServiceMsisdn
Execute SQL Statement: UPDATE VSM_SERVICE_MSISDN SET VSM_BILLED_UPTO = ?
WHERE VSM_SUBSCRIBER_ID = ? AND (VSM_MSISDN_NO) = ? AND (VSM_SERVICE_CODE) = ?
Argument(s): |2019-05-25|607878|833819663|AMR5|
20190513: 074139     DEBUG 57188[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65447) - AFTER updateVsmBilledupto
20190513: 074139     DEBUG 57188[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65470) - AFTER CHECK : (multiCharge.equals('Y') || firstOnSim
20190513: 074139     DEBUG 57189[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getSbuActive
20190513: 074139     DEBUG 57190[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getSbuActive|0||

20190513: 074139     ERROR 57433[main] - com.eppixcomm.eppix.common.data.DAOThrower.unexpected(DAOThrower.java:150) - com.eppixcomm.eppix.base.error.EPPIXSeriousException: A database error has occurred: SQL Error: Reason: A syntax error has occurred., SQL State: 42000, Vendor Code: -201, DML Name: getSbuActive, SQL Statement: SELECT * FROM sbu_sub_upgrade WHERE sbu_subscriber_id = ? AND sbu_subupgrade_id = (SELECT MAX (sbu_subupgrade_id) FROM sbu_sub_upgrade WHERE sbu_subscriber_id = ? AND sbu_record_status = 'A', Argument(s): None
20190513: 074139     ERROR 57434[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65479) - Digital Service - Exception getting the active SBU record for the subscriber
20190513: 074139     DEBUG 57434[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsrService )
20190513: 074139     DEBUG 57434[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractBLO.get(VsrServiceAbstractBLO.java:576) - get( filter )
20190513: 074139     DEBUG 57434[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractDACImpl.get(VsrServiceAbstractDACImpl.java:517) - get( filter )
20190513: 074139     DEBUG 57434[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsrService|0|equalVsrServiceCode|

20190513: 074139     DEBUG 57729[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VsrService
Execute SQL Statement: SELECT VSR_SERVICE_CODE, VSR_SERVICE_TYPE, VSR_SERVICE_DESC, VSR_ORIGINATOR, VSR_SERVICE_CLASS, VSR_TEMP_DEACT, VSR_PRORATA, VSR_PROVIDER_ID, VSR_SHORT_DESC, VSR_SUSPEND
FROM VSR_SERVICE
WHERE VSR_SERVICE_CODE = ?
Argument(s): |AMR5|
20190513: 074139     DEBUG 57729[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@100ebec
20190513: 074139     DEBUG 58028[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VstServiceTypes )
20190513: 074139     DEBUG 58029[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractBLO.get(VstServiceTypesAbstractBLO.java:595) - get( filter )
20190513: 074139     DEBUG 58029[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractDACImpl.get(VstServiceTypesAbstractDACImpl.java:540) - get( filter )
20190513: 074139     DEBUG 58029[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VstServiceTypes|0|equalVstServiceType|

20190513: 074140     DEBUG 58230[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VstServiceTypes
Execute SQL Statement: SELECT VST_SERVICE_TYPE, VST_SERVICE_DESC, VST_MULTI_CHARGE, VST_SERVICE_CLASS, VST_AUTO_CONNECT, VST_ORIGINATOR, VST_TARIFF_RELATED, VST_PARAMETERISED, VST_PARAMS_LEVEL, VST_ARCHIVE_MONTHS, VST_FUTURE_ACT, VST_NODE_LEVEL
FROM VST_SERVICE_TYPES
WHERE VST_SERVICE_TYPE = ?
Argument(s): |SW|
20190513: 074140     DEBUG 58230[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@180f96c
20190513: 074140      INFO 58530[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1820) - 
IS PARAMETER SERVICES: false
20190513: 074140     DEBUG 58531[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7051) - 
SUBSCRIBER: 607878
MSISDN: 833819663
SERVICE CODE: AMR5
TARIFF: ASKYL36M
PRORATA DATE: 2019-05-13
20190513: 074140     DEBUG 58531[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5665) - 
STEP 1
20190513: 074140     DEBUG 58531[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5684) - 
STEP 3
20190513: 074140     DEBUG 58531[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5689) - 
STEP 4
20190513: 074140     DEBUG 58531[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5691) - BASE: com.eppixcomm.eppix.base.blo.BaseBLOBinder@104c575
20190513: 074140     DEBUG 58531[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsrService )
20190513: 074140     DEBUG 58531[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractBLO.get(VsrServiceAbstractBLO.java:576) - get( filter )
20190513: 074140     DEBUG 58532[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractDACImpl.get(VsrServiceAbstractDACImpl.java:517) - get( filter )
20190513: 074140     DEBUG 58532[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsrService|0|equalVsrServiceCode|

20190513: 074140     DEBUG 58731[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VsrService
Execute SQL Statement: SELECT VSR_SERVICE_CODE, VSR_SERVICE_TYPE, VSR_SERVICE_DESC, VSR_ORIGINATOR, VSR_SERVICE_CLASS, VSR_TEMP_DEACT, VSR_PRORATA, VSR_PROVIDER_ID, VSR_SHORT_DESC, VSR_SUSPEND
FROM VSR_SERVICE
WHERE VSR_SERVICE_CODE = ?
Argument(s): |AMR5|
20190513: 074140     DEBUG 58731[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@aadc97
20190513: 074140     DEBUG 59031[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5695) - 
STEP 5
20190513: 074140     DEBUG 59032[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Vsr2ServiceAux )
20190513: 074140     DEBUG 59033[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVsr2ServiceAuxDAC(BaseAbstractDACFactory.java:917) - getVsr2ServiceAuxDAC()
20190513: 074141     DEBUG 59117[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.Vsr2ServiceAuxDACImpl com.eppixcomm.eppix.base.dml.Vsr2ServiceAuxDMLFactory@419d05
20190513: 074141     DEBUG 59118[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.Vsr2ServiceAuxDACImpl
20190513: 074141     DEBUG 59119[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074141     DEBUG 59120[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.Vsr2ServiceAuxDACImpl TO MAP
20190513: 074141     DEBUG 59120[main] - com.eppixcomm.eppix.base.blo.Vsr2ServiceAuxAbstractBLO.get(Vsr2ServiceAuxAbstractBLO.java:553) - get( filter )
20190513: 074141     DEBUG 59122[main] - com.eppixcomm.eppix.base.blo.Vsr2ServiceAuxAbstractDACImpl.get(Vsr2ServiceAuxAbstractDACImpl.java:454) - get( filter )
20190513: 074141     DEBUG 59122[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Vsr2ServiceAux|0|equalVsr2ServiceCode|

20190513: 074141     DEBUG 59752[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Vsr2ServiceAux
Execute SQL Statement: SELECT VSR2_SERVICE_CODE, VSR2_SERVICE_ORDER, VSR2_SIM_RELATED, VSR2_ENTRY_TYPE, VSR2_TECHNOLOGY
FROM VSR2_SERVICE_AUX
WHERE (VSR2_SERVICE_CODE) = ?
Argument(s): |AMR5|
20190513: 074141     DEBUG 59752[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@3ae941
20190513: 074141     DEBUG 60033[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 074141     DEBUG 60033[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 074141     DEBUG 60033[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 074141     DEBUG 60033[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 074142     DEBUG 60252[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 074142     DEBUG 60253[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1a7ddcf
20190513: 074142     DEBUG 60573[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BcyBillingCycle )
20190513: 074142     DEBUG 60574[main] - com.eppixcomm.eppix.base.blo.BcyBillingCycleAbstractBLO.get(BcyBillingCycleAbstractBLO.java:587) - get( filter )
20190513: 074142     DEBUG 60574[main] - com.eppixcomm.eppix.base.blo.BcyBillingCycleAbstractDACImpl.get(BcyBillingCycleAbstractDACImpl.java:492) - get( filter )
20190513: 074142     DEBUG 60574[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BcyBillingCycle|0|equalBcyBillCycle|

20190513: 074142     DEBUG 60754[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: BcyBillingCycle
Execute SQL Statement: SELECT BCY_BILL_CYCLE, BCY_DESCRIPTION, BCY_PERIOD, BCY_FREQUENCY, BCY_DAY_OF_RUN, BCY_NEXT_RUN, BCY_SUSPENDED, BCY_USE_STATUS, BCY_NEXT_CALL_RUN, BCY_IN_ADVANCE
FROM BCY_BILLING_CYCLE
WHERE BCY_BILL_CYCLE = ?
Argument(s): |CYC13|
20190513: 074142     DEBUG 60755[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@17f242c
20190513: 074142     DEBUG 61055[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TsTariffService )
20190513: 074142     DEBUG 61056[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractBLO.get(TsTariffServiceAbstractBLO.java:593) - get( filter )
20190513: 074142     DEBUG 61056[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractDACImpl.get(TsTariffServiceAbstractDACImpl.java:589) - get( filter )
20190513: 074142     DEBUG 61056[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TsTariffService|0|equalTsPackageCode+equalTsServiceCode+equalornullTsInternalTariff|

20190513: 074143     DEBUG 61254[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TsTariffService
Execute SQL Statement: SELECT TS_PACKAGE_CODE, TS_INTERNAL_TARIFF, TS_SERVICE_CODE, TS_NET_SERV_CODE, TS_ACT_CHARGE, TS_TDEACT_CHARGE, TS_REACT_CHARGE, TS_PDEACT_CHARGE, TS_SUB_CHARGE1, TS_SUB_CHARGE2, TS_SUB_CHARGE3, TS_CHARGE_PERIOD, TS_CHARGE_FREQ, TS_DISCOUNT_REF, TS_ACT_INCLUSIVE
FROM TS_TARIFF_SERVICE
WHERE (TS_PACKAGE_CODE) = ? AND (TS_SERVICE_CODE) = ? AND ((TS_INTERNAL_TARIFF) = ? OR TS_INTERNAL_TARIFF IS NULL)
Argument(s): |500FF|AMR5|ASKYL36M|
20190513: 074143     DEBUG 61255[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@12f9ee
20190513: 074143     DEBUG 61575[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190513: 074143     DEBUG 61575[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190513: 074143     DEBUG 61576[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190513: 074143     DEBUG 61576[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode+equalornullVasInternTariff|

20190513: 074144     DEBUG 62157[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ?  AND (VAS_INTERN_TARIFF = ? OR VAS_INTERN_TARIFF IS NULL) 
Argument(s): |607878|AMR5|ASKYL36M|
20190513: 074144     DEBUG 62157[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1d6a56e
20190513: 074144     DEBUG 62697[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.ChgCharges )
20190513: 074144     DEBUG 62697[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractBLO.max(ChgChargesAbstractBLO.java:593) - max( filter )
20190513: 074144     DEBUG 62697[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractDACImpl.max(ChgChargesAbstractDACImpl.java:542) - max( filter )
20190513: 074144     DEBUG 62698[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
ChgCharges|14|equalChgCode+equalChgNetid+lessthanorequalChgEffectiveDate+equalChgChargef|

20190513: 074144     DEBUG 62877[main] - com.eppixcomm.eppix.common.data.DAOImpl.max(DAOImpl.java:1220) - max(param SQL): DML Name: ChgCharges
Execute SQL Statement: SELECT MAX(CHG_CODE, CHG_NETID, CHG_EFFECTIVE_DATE)
FROM CHG_CHARGES
WHERE CHG_CODE = ? AND CHG_NETID = ? AND CHG_EFFECTIVE_DATE <= ? AND CHG_CHARGEF = ?
Argument(s): |AR500|M1|2019-05-13|F|
20190513: 074144     DEBUG 63017[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getChg(SubscriberUpgradeMigradeBLO.java:14652) - 1 EFF DATE: 2018-04-04
20190513: 074144     DEBUG 63017[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getChg(SubscriberUpgradeMigradeBLO.java:14811) - Effective Date set to 2018-04-04
20190513: 074144     DEBUG 63018[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.ChgCharges )
20190513: 074144     DEBUG 63018[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractBLO.get(ChgChargesAbstractBLO.java:564) - get( filter )
20190513: 074144     DEBUG 63018[main] - com.eppixcomm.eppix.base.blo.ChgChargesAbstractDACImpl.get(ChgChargesAbstractDACImpl.java:523) - get( filter )
20190513: 074144     DEBUG 63018[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
ChgCharges|0|equalChgCode+equalChgNetid+equalChgEffectiveDate+equalChgChargef|

20190513: 074145     DEBUG 63218[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: ChgCharges
Execute SQL Statement: SELECT CHG_CODE, CHG_DESCRIPTION, CHG_VALUE, CHG_VAT_CODE, CHG_NCODE, CHG_NETID, CHG_CHARGEF, CHG_PERIOD, CHG_FREQUENCY, CHG_EFFECTIVE_DATE, CHG_CLASS_ID
FROM CHG_CHARGES
WHERE CHG_CODE = ? AND CHG_NETID = ? AND CHG_EFFECTIVE_DATE = ? AND CHG_CHARGEF = ?
Argument(s): |AR500|M1|2018-04-04|F|
20190513: 074145     DEBUG 63219[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1b06041
20190513: 074145     DEBUG 63519[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Opservm )
20190513: 074145     DEBUG 63521[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getOpservmDAC(BaseDACFactory.java:376) - getOpservmDAC()
20190513: 074145     DEBUG 63610[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.OpservmDACImpl com.eppixcomm.eppix.base.dml.OpservmDMLFactory@1e4853f
20190513: 074145     DEBUG 63610[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.OpservmDACImpl
20190513: 074145     DEBUG 63612[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074145     DEBUG 63612[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.OpservmDACImpl TO MAP
20190513: 074145     DEBUG 63612[main] - com.eppixcomm.eppix.base.blo.OpservmAbstractBLO.get(OpservmAbstractBLO.java:530) - get( filter )
20190513: 074145     DEBUG 63612[main] - com.eppixcomm.eppix.base.blo.OpservmAbstractDACImpl.get(OpservmAbstractDACImpl.java:592) - get( filter )
20190513: 074145     DEBUG 63613[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Opservm|0|equalProduct|

20190513: 074146     DEBUG 64680[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Opservm
Execute SQL Statement: SELECT PRODUCT, DESCRIPTION, LONG_DESCRIPTION, UNIT_OF_SALE, VAT_CATEGORY, PROD_DISC_CODE, NOMINAL_CATEGORY, PRODUCT_GROUP_A, PRODUCT_GROUP_B, PRODUCT_GROUP_C, LIST_PRICE, COST, WEIGHT, UNIT_GROUP, VAT_INCLUSIVE_FLAG, UNIT_QTY_PER_PRICE, VAT_TYPE, STAGE_CATEGORY
FROM OPSERVM
WHERE PRODUCT = ?
Argument(s): |AR500|
20190513: 074146     DEBUG 64681[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1d53f5b
20190513: 074149     DEBUG 67125[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TtTypeText )
20190513: 074149     DEBUG 67126[main] - com.eppixcomm.eppix.base.blo.TtTypeTextAbstractBLO.get(TtTypeTextAbstractBLO.java:542) - get( filter )
20190513: 074149     DEBUG 67126[main] - com.eppixcomm.eppix.base.blo.TtTypeTextAbstractDACImpl.get(TtTypeTextAbstractDACImpl.java:451) - get( filter )
20190513: 074149     DEBUG 67126[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TtTypeText|0|equalTtGroup+equalTtType+equalTtLang|

20190513: 074149     DEBUG 67325[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TtTypeText
Execute SQL Statement: SELECT TT_GROUP, TT_LANG, TT_TYPE, TT_TEXT, TT_CONFIG
FROM TT_TYPE_TEXT
WHERE (TT_GROUP) = ? AND (TT_TYPE) = ? AND (TT_LANG) = ?
Argument(s): |BILLING|M|ENG|
20190513: 074149     DEBUG 67325[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1329642
20190513: 074149     DEBUG 67626[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17874) - initialDate: 26 Apr 2019
20190513: 074149     DEBUG 67626[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17875) - period: M
20190513: 074149     DEBUG 67626[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17876) - freq: 1
20190513: 074149     DEBUG 67626[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17877) - day: 26
20190513: 074149     DEBUG 67626[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17878) - type: F
20190513: 074149     DEBUG 67626[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17923) - MONTH calcDate: 26 May 2019
20190513: 074149     DEBUG 67627[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7750) - LOOP POS: 0
20190513: 074149     DEBUG 67627[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17874) - initialDate: 26 May 2019
20190513: 074149     DEBUG 67627[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17875) - period: M
20190513: 074149     DEBUG 67627[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17876) - freq: 1
20190513: 074149     DEBUG 67627[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17877) - day: 26
20190513: 074149     DEBUG 67627[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17878) - type: B
20190513: 074149     DEBUG 67627[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17923) - MONTH calcDate: 26 Apr 2019
20190513: 074149     DEBUG 67628[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7771) - BEFORE BCY CHECK Y
20190513: 074149     DEBUG 67629[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7810) - BEFORE BILL CREATE
20190513: 074149     DEBUG 67630[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getVasBillLimitByMsisdnTariff
20190513: 074149     DEBUG 67630[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getVasBillLimitByMsisdnTariff|0||

20190513: 074150     DEBUG 68247[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getVasBillLimitByMsisdnTariff
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE, VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE  FROM vas_active_service, vam_active_msisdn  WHERE vas_service_code = ?  AND vam_msisdn_no = ?  AND vas_subscriber_id = vam_subscriber_id  AND (vas_intern_tariff = ?  OR vas_intern_tariff IS NULL)
Argument(s): |AMR5|833819663|ASKYL36M|
20190513: 074150     DEBUG 68247[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@138c63
20190513: 074151     DEBUG 69890[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7917) - 
========================================================
DAYS ACTIVE: 13
20190513: 074151     DEBUG 69890[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7919) - 
DAYS PERIOD: 30
20190513: 074151     DEBUG 69890[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7920) - 
FULL PERIOD: 0
20190513: 074151     DEBUG 69890[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.ChargeProrataActivation(SubscriberUpgradeMigradeBLO.java:7921) - 
FACTOR: 0.43
========================================================
20190513: 074151     DEBUG 69890[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbaSubAux )
20190513: 074151     DEBUG 69890[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractBLO.get(SbaSubAuxAbstractBLO.java:283) - get( filter )
20190513: 074151     DEBUG 69891[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractDACImpl.get(SbaSubAuxAbstractDACImpl.java:101) - get( filter )
20190513: 074151     DEBUG 69891[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbaSubAux|0|equalSbaSubscriberId|

20190513: 074200     DEBUG 78091[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbaSubAux
Execute SQL Statement: SELECT SBA_SUBSCRIBER_ID, SBA_ID_NUMBER, SBA_MATCHCODE, SBA_MARKETING, SBA_THIRD_PARTY, SBA_CUST_DEPT, SBA_DEALER_ID, SBA_DEPARTMENT, SBA_SALESMAN, SBA_REGION, SBA_INVOICE_ADDRID, SBA_INV_ACCOUNT, SBA_PREPAID_STAT, SBA_ANALYSIS_1, SBA_ANALYSIS_2, SBA_ANALYSIS_3, SBA_ANALYSIS_4, SBA_ANALYSIS_5, SBA_ANALYSIS_6, SBA_ANALYSIS_7, SBA_ANALYSIS_8, SBA_ANALYSIS_9, SBA_ANALYSIS_10, SBA_ANALYSIS_11, SBA_ANALYSIS_12, SBA_ANALYSIS_13, SBA_ANALYSIS_14, SBA_ANALYSIS_15, SBA_ANALYSIS_16, SBA_ANALYSIS_17, SBA_ANALYSIS_18, SBA_ANALYSIS_19, SBA_ANALYSIS_20, SBA_ANALYSIS_21, SBA_ANALYSIS_22, SBA_ANALYSIS_23, SBA_ANALYSIS_24, SBA_ANALYSIS_25, SBA_ANALYSIS_26, SBA_ANALYSIS_27, SBA_ANALYSIS_28, SBA_ANALYSIS_29, SBA_ANALYSIS_30,SBA_COMMENTS
FROM SBA_SUB_AUX
WHERE SBA_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 074200     DEBUG 78092[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@165f738
20190513: 074200     DEBUG 78694[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Slcustm )
20190513: 074200     DEBUG 78695[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSlcustmDAC(BaseAbstractDACFactory.java:212) - getSlcustmDAC()
20190513: 074200     DEBUG 78756[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SlcustmDACImpl com.eppixcomm.eppix.base.dml.SlcustmAbstractDMLFactory@77ef83
20190513: 074200     DEBUG 78756[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SlcustmDACImpl
20190513: 074200     DEBUG 78759[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074200     DEBUG 78760[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SlcustmDACImpl TO MAP
20190513: 074200     DEBUG 78760[main] - com.eppixcomm.eppix.base.blo.SlcustmAbstractBLO.get(SlcustmAbstractBLO.java:679) - get( filter )
20190513: 074200     DEBUG 78760[main] - com.eppixcomm.eppix.base.blo.SlcustmAbstractDACImpl.get(SlcustmAbstractDACImpl.java:1461) - get( filter )
20190513: 074200     DEBUG 78762[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Slcustm|0|equalCustomer|

20190513: 074202     DEBUG 80396[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Slcustm
Execute SQL Statement: SELECT CUSTOMER, ALPHA, NAME, ADDRESS1, ADDRESS2, ADDRESS3, ADDRESS4, ADDRESS5, CREDIT_CATEGORY, EXPORT_INDICATOR, CUST_DISC_CODE, CURRENCY, TERRITORY, CLASS, REGION, INVOICE_CUSTOMER, STATEMENT_CUSTOMER, GROUP_CUSTOMER, DATE_LAST_ISSUE, DATE_CREATED, ANALYSIS_CODES1, ANALYSIS_CODES2, ANALYSIS_CODES3, ANALYSIS_CODES4, ANALYSIS_CODES5, REMINDER_CAT, SETTLEMENT_CODE, SETT_DAYS_CODE, PRICE_LIST, LETTER_CODE, BALANCE_FWD, CREDIT_LIMIT, YTD_SALES, YTD_COST_OF_SALES, CUMULATIVE_SALES, ORDER_BALANCE, SALES_NL_CAT, SPECIAL_PRICE, VAT_REGISTRATION, DIRECT_DEBIT, INVOICES_PRINTED, CONSOLIDATED_INV, COMMENT_ONLY_INV, BANK_ACCOUNT_NO, BANK_SORT_CODE, BANK_NAME, BANK_ADDRESS1, BANK_ADDRESS2, BANK_ADDRESS3, BANK_ADDRESS4, ANALYSIS_CODE_6, PRODUCE_STATEMENTS, EDI_CUSTOMER, VAT_TYPE, LANGUAGE, DELIVERY_METHOD, CARRIER, VAT_REG_NUMBER, VAT_EXE_NUMBER, PAYDAYS1, PAYDAYS2, PAYDAYS3, BANK_BRANCH_CODE, PRINT_CP_WITH_STAT, PAYMENT_METHOD, CUSTOMER_CLASS, SALES_TYPE, CP_LOWER_VALUE, ADDRESS6, FAX, TELEX, BTX, CP_CHARGE, CONTROL_DIGIT, PAYER, RESPONSIBILITY, DESPATCH_HELD, CREDIT_CONTROLLER, REMINDER_LETTERS, SEVERITY_DAYS1, SEVERITY_DAYS2, SEVERITY_DAYS3, SEVERITY_DAYS4, SEVERITY_DAYS5, SEVERITY_DAYS6, DELIVERY_REASON, SHIPPER_CODE1, SHIPPER_CODE2, SHIPPER_CODE3, SHIPPING_NOTE_IND, ACCOUNT_TYPE, ADMIN_FEE, INTREST_RATE
FROM SLCUSTM
WHERE (CUSTOMER) = ?
Argument(s): |A0311553|
20190513: 074202     DEBUG 80399[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@a77106
20190513: 074202      INFO 80696[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.insertBillTable(SubscriberUpgradeMigradeBLO.java:18164) - BILL TABLE TO INSERT INTO: bill_CYC1320190426
20190513: 074202     DEBUG 80697[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BillCccccyyyymmdd )
20190513: 074202     DEBUG 80698[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getBillCccccyyyymmddDAC(BaseAbstractDACFactory.java:905) - getBillCccccyyyymmddDAC()
20190513: 074202     DEBUG 80810[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.BillCccccyyyymmddDACImpl com.eppixcomm.eppix.base.dml.BillCccccyyyymmddDMLFactory@81b1fb
20190513: 074202     DEBUG 80810[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.BillCccccyyyymmddDACImpl
20190513: 074202     DEBUG 80811[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074202     DEBUG 80812[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.BillCccccyyyymmddDACImpl TO MAP
20190513: 074202     DEBUG 80813[main] - com.eppixcomm.eppix.base.blo.BillCccccyyyymmddAbstractBLO.get(BillCccccyyyymmddAbstractBLO.java:603) - get( filter )
20190513: 074202     DEBUG 80813[main] - com.eppixcomm.eppix.base.blo.BillCccccyyyymmddAbstractDACImpl.get(BillCccccyyyymmddAbstractDACImpl.java:649) - get( filter )
20190513: 074202     DEBUG 80813[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BillCccccyyyymmdd|0|equalSubscriberId+equalChaserv+equalBilldat+equalPackge|

20190513: 074203     DEBUG 81337[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: BillCccccyyyymmdd
Execute SQL Statement: SELECT BILL_ID, SUBSCRIBER_ID, HANDSET, CHASERV, BILLIND, BILLDAT, COST, CHARGE, SPARECH, INVOICE_NO, TWINBILL_NO, VATAMT, VATRATE, CYCLE_NO, VATCODE, START_PERIOD, END_PERIOD, BATCH_RUN_NUM, TIMESTAMP, CURRENCY_CHARGE, EXCHANGE_RATE, EXCH_OPERATOR, CHARGE_CLASS_ID, TECHNOLOGY, PACKAGE
FROM BILL_CCCCCYYYYMMDD
WHERE SUBSCRIBER_ID = ? AND (CHASERV) = ? AND BILLDAT = ? AND (PACKAGE) = ?
Argument(s): |607878|AR500|2019-05-13|500FF|
20190513: 074203     ERROR 81597[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.insertBillTable(SubscriberUpgradeMigradeBLO.java:18245) - Failed to get billing details from table: bill_CYC1320190426 for Subscriber: 607878
20190513: 074203     DEBUG 81598[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BillCccccyyyymmdd )
20190513: 074203     DEBUG 81598[main] - com.eppixcomm.eppix.base.blo.BillCccccyyyymmddAbstractBLO.create(BillCccccyyyymmddAbstractBLO.java:208) - create( billCccccyyyymmddDMO )
20190513: 074203     DEBUG 81598[main] - com.eppixcomm.eppix.base.blo.BillCccccyyyymmddAbstractDACImpl.create(BillCccccyyyymmddAbstractDACImpl.java:117) - create( billCccccyyyymmddDMO )
20190513: 074203     DEBUG 81598[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BillCccccyyyymmdd|11||

20190513: 074203     DEBUG 81828[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 0|607878|833819663|AR500|n|2019-05-13|0.00|215.00|CFF             BSWAMR5|0|0|0.00|0.00|CYC13||2019-05-13|2019-05-25||2019-05-13 07:42:02|215.00|1.00|*|312|GSM|500FF
20190513: 074204     DEBUG 82203[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: BillCccccyyyymmdd
Execute SQL Statement: INSERT INTO BILL_CCCCCYYYYMMDD (BILL_ID, SUBSCRIBER_ID, HANDSET, CHASERV, BILLIND, BILLDAT, COST, CHARGE, SPARECH, INVOICE_NO, TWINBILL_NO, VATAMT, VATRATE, CYCLE_NO, VATCODE, START_PERIOD, END_PERIOD, BATCH_RUN_NUM, TIMESTAMP, CURRENCY_CHARGE, EXCHANGE_RATE, EXCH_OPERATOR, CHARGE_CLASS_ID, TECHNOLOGY, PACKAGE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Argument(s): |0|607878|833819663|AR500|n|2019-05-13|0.00|215.00|CFF             BSWAMR5|0|0|0.00|0.00|CYC13||2019-05-13|2019-05-25||2019-05-13 07:42:02|215.00|1.00|*|312|GSM|500FF|
20190513: 074204     DEBUG 82204[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.insertBillTable(SubscriberUpgradeMigradeBLO.java:18320) - 
RETURNED DMO FROM INSERT BILLID: 95028
20190513: 074204     DEBUG 82205[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.CrbCustRiskBal )
20190513: 074204     DEBUG 82205[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getCrbCustRiskBalDAC(BaseAbstractDACFactory.java:943) - getCrbCustRiskBalDAC()
20190513: 074204     DEBUG 82262[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.CrbCustRiskBalDACImpl com.eppixcomm.eppix.base.dml.CrbCustRiskBalDMLFactory@5b0668
20190513: 074204     DEBUG 82262[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.CrbCustRiskBalDACImpl
20190513: 074204     DEBUG 82264[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074204     DEBUG 82264[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.CrbCustRiskBalDACImpl TO MAP
20190513: 074204     DEBUG 82264[main] - com.eppixcomm.eppix.base.blo.CrbCustRiskBalAbstractBLO.get(CrbCustRiskBalAbstractBLO.java:256) - get( filter )
20190513: 074204     DEBUG 82264[main] - com.eppixcomm.eppix.base.blo.CrbCustRiskBalAbstractDACImpl.get(CrbCustRiskBalAbstractDACImpl.java:96) - get( filter )
20190513: 074204     DEBUG 82265[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
crbCustRiskBal|0|equalCrbBillAcNo|

20190513: 074204     DEBUG 83029[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: crbCustRiskBal
Execute SQL Statement: SELECT CRB_BILL_AC_NO, CRB_ACCOUNT_TYPE, CRB_CREDIT_LIMIT, CRB_ACC_BAL, CRB_UNBILL_CHARGES, CRB_UNBILL_CALLS, CRB_DIFF, CRB_NEXT_THRESHOLD, CRB_PREV_THRESHOLD, CRB_COLL_PLAN, CRB_MIN_THRESHOLD, CRB_ACTIVATE_FLAG, CRB_EAP_FLAG, CRB_BL_STATUS, CRB_BL_TYPE, CRB_BL_LIMIT, CRB_BL_DIFF, CRB_BL_NEXT_THRESH, CRB_BL_PREV_THRESH, CRB_BL_NEXT_ACN_ID, CRB_BL_PREV_ACN_ID, CRB_BL_TRIG_FLAG, CRB_BL_LAST_UPDATE
FROM CRB_CUST_RISK_BAL
WHERE CRB_BILL_AC_NO = ?
Argument(s): |A0311553|
20190513: 074204     DEBUG 83030[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1c50507
20190513: 074205     DEBUG 83280[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.CrbCustRiskBal )
20190513: 074205     DEBUG 83281[main] - com.eppixcomm.eppix.base.blo.CrbCustRiskBalAbstractBLO.modify(CrbCustRiskBalAbstractBLO.java:159) - modify( filter )
20190513: 074205     DEBUG 83281[main] - com.eppixcomm.eppix.base.blo.CrbCustRiskBalAbstractDACImpl.modify(CrbCustRiskBalAbstractDACImpl.java:165) - modify( filter )
20190513: 074205     DEBUG 83281[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
crbCustRiskBal|16|equalCrbBillAcNo|

20190513: 074205     DEBUG 83781[main] - com.eppixcomm.eppix.common.data.DAOImpl.updateCustom(DAOImpl.java:2935) - updateCustom(DBO): DML Name: crbCustRiskBal
Execute SQL Statement: UPDATE CRB_CUST_RISK_BAL SET CRB_UNBILL_CHARGES = ?
WHERE CRB_BILL_AC_NO = ?
Argument(s): |3132.1390000000001236912794411182403564453125|A0311553|
20190513: 074205     DEBUG 83782[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.CrbCustRiskBal )
20190513: 074205     DEBUG 83782[main] - com.eppixcomm.eppix.base.blo.CrbCustRiskBalAbstractBLO.get(CrbCustRiskBalAbstractBLO.java:256) - get( filter )
20190513: 074205     DEBUG 83782[main] - com.eppixcomm.eppix.base.blo.CrbCustRiskBalAbstractDACImpl.get(CrbCustRiskBalAbstractDACImpl.java:96) - get( filter )
20190513: 074205     DEBUG 83782[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
crbCustRiskBal|0|equalCrbBillAcNo|

20190513: 074205     DEBUG 83902[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: crbCustRiskBal
Execute SQL Statement: SELECT CRB_BILL_AC_NO, CRB_ACCOUNT_TYPE, CRB_CREDIT_LIMIT, CRB_ACC_BAL, CRB_UNBILL_CHARGES, CRB_UNBILL_CALLS, CRB_DIFF, CRB_NEXT_THRESHOLD, CRB_PREV_THRESHOLD, CRB_COLL_PLAN, CRB_MIN_THRESHOLD, CRB_ACTIVATE_FLAG, CRB_EAP_FLAG, CRB_BL_STATUS, CRB_BL_TYPE, CRB_BL_LIMIT, CRB_BL_DIFF, CRB_BL_NEXT_THRESH, CRB_BL_PREV_THRESH, CRB_BL_NEXT_ACN_ID, CRB_BL_PREV_ACN_ID, CRB_BL_TRIG_FLAG, CRB_BL_LAST_UPDATE
FROM CRB_CUST_RISK_BAL
WHERE CRB_BILL_AC_NO = ?
Argument(s): |A0311553|
20190513: 074205     DEBUG 83904[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@fdb00d
20190513: 074206     DEBUG 84141[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19590) - Step 1
20190513: 074206     DEBUG 84142[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19603) - ACCOUNT BALANCE: 2213.01
20190513: 074206     DEBUG 84142[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19604) - UNBILL CHARGES: 3132.1390000000001236912794411182403564453125
20190513: 074206     DEBUG 84142[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19605) - UNBILL CALLS: 0
20190513: 074206     DEBUG 84142[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19606) - CREDIT LIMIT: 4399.27000000000043655745685100555419921875
20190513: 074206     DEBUG 84142[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19614) - CrValue: 2213.0171196789467343441363598642113785450269
20190513: 074206     DEBUG 84142[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19621) - Step 2
20190513: 074206     DEBUG 84142[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19637) - Step 3
20190513: 074206     DEBUG 84143[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19705) - Step 4
20190513: 074206     DEBUG 84143[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19714) - Step 5
20190513: 074206     DEBUG 84143[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19745) - Step 6
20190513: 074206     DEBUG 84143[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.calculateCreditLimDiffs(SubscriberUpgradeMigradeBLO.java:19753) - Step 7
20190513: 074206     DEBUG 84144[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BlhBillLimitHd )
20190513: 074206     DEBUG 84165[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getBlhBillLimitHdDAC(BaseAbstractDACFactory.java:930) - getBlhBillLimitHdDAC()
20190513: 074206     DEBUG 84264[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.BlhBillLimitHdDACImpl com.eppixcomm.eppix.base.dml.BlhBillLimitHdDMLFactory@50ca0c
20190513: 074206     DEBUG 84265[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.BlhBillLimitHdDACImpl
20190513: 074206     DEBUG 84266[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074206     DEBUG 84266[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.BlhBillLimitHdDACImpl TO MAP
20190513: 074206     DEBUG 84267[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractBLO.iterate(BlhBillLimitHdAbstractBLO.java:248) - iterate( filter )
20190513: 074206     DEBUG 84267[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractDACImpl.iterate(BlhBillLimitHdAbstractDACImpl.java:120) - iterate( filter )
20190513: 074206     DEBUG 84267[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BlhBillLimitHd|0|equalBlhSubscriberId|

20190513: 074206     DEBUG 84823[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: BlhBillLimitHd
Execute SQL Statement: SELECT BLH_SUBSCRIBER_ID, BLH_SERVICE_CODE, BLH_BILL_LIMIT_VAL, BLH_LEVEL,BLH_TYPE, BLH_VAT_IND, BLH_UNBILL_USAGE, BLH_UNBILL_CHARGES, BLH_DIFF,BLH_USER_STATUS, BLH_NEXT_THRESHOLD, BLH_PREV_THRESHOLD, BLH_NEXT_ACN_ID,BLH_PREV_ACN_ID, BLH_NETWORK_ACN, BLH_TRIG_FLAG, BLH_LAST_UPDATE
FROM BLH_BILL_LIMIT_HD
WHERE BLH_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 074206     DEBUG 84824[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@b1aebf
20190513: 074206     DEBUG 84824[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BlhBillLimitHd )
20190513: 074206     DEBUG 84824[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractBLO.modify(BlhBillLimitHdAbstractBLO.java:181) - modify( filter )
20190513: 074206     DEBUG 84825[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractDACImpl.modify(BlhBillLimitHdAbstractDACImpl.java:165) - modify( filter )
20190513: 074206     DEBUG 84825[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BlhBillLimitHd|16|equalBlhSubscriberId+equalBlhServiceCode|

20190513: 074207     DEBUG 85434[main] - com.eppixcomm.eppix.common.data.DAOImpl.updateCustom(DAOImpl.java:2935) - updateCustom(DBO): DML Name: BlhBillLimitHd
Execute SQL Statement: UPDATE BLH_BILL_LIMIT_HD SET BLH_UNBILL_CHARGES = ?
WHERE BLH_SUBSCRIBER_ID = ? AND BLH_SERVICE_CODE = ?
Argument(s): |1075.02899999999999636202119290828704833984375|607878|SUL|
20190513: 074207     DEBUG 85435[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BlhBillLimitHd )
20190513: 074207     DEBUG 85435[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractBLO.iterate(BlhBillLimitHdAbstractBLO.java:248) - iterate( filter )
20190513: 074207     DEBUG 85435[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractDACImpl.iterate(BlhBillLimitHdAbstractDACImpl.java:120) - iterate( filter )
20190513: 074207     DEBUG 85436[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BlhBillLimitHd|0|equalBlhSubscriberId|

20190513: 074207     DEBUG 85804[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: BlhBillLimitHd
Execute SQL Statement: SELECT BLH_SUBSCRIBER_ID, BLH_SERVICE_CODE, BLH_BILL_LIMIT_VAL, BLH_LEVEL,BLH_TYPE, BLH_VAT_IND, BLH_UNBILL_USAGE, BLH_UNBILL_CHARGES, BLH_DIFF,BLH_USER_STATUS, BLH_NEXT_THRESHOLD, BLH_PREV_THRESHOLD, BLH_NEXT_ACN_ID,BLH_PREV_ACN_ID, BLH_NETWORK_ACN, BLH_TRIG_FLAG, BLH_LAST_UPDATE
FROM BLH_BILL_LIMIT_HD
WHERE BLH_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 074207     DEBUG 85805[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1c65216
20190513: 074207     DEBUG 85805[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.updateBillLimDiff(SubscriberUpgradeMigradeBLO.java:19242) - no
20190513: 074207     DEBUG 85805[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.updateBillLimDiff(SubscriberUpgradeMigradeBLO.java:19258) - RETURN VALUE: 0
20190513: 074207     DEBUG 85805[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BlhBillLimitHd )
20190513: 074207     DEBUG 85805[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractBLO.iterate(BlhBillLimitHdAbstractBLO.java:248) - iterate( filter )
20190513: 074207     DEBUG 85805[main] - com.eppixcomm.eppix.base.blo.BlhBillLimitHdAbstractDACImpl.iterate(BlhBillLimitHdAbstractDACImpl.java:120) - iterate( filter )
20190513: 074207     DEBUG 85805[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BlhBillLimitHd|0|equalBlhSubscriberId|

20190513: 074208     DEBUG 86105[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: BlhBillLimitHd
Execute SQL Statement: SELECT BLH_SUBSCRIBER_ID, BLH_SERVICE_CODE, BLH_BILL_LIMIT_VAL, BLH_LEVEL,BLH_TYPE, BLH_VAT_IND, BLH_UNBILL_USAGE, BLH_UNBILL_CHARGES, BLH_DIFF,BLH_USER_STATUS, BLH_NEXT_THRESHOLD, BLH_PREV_THRESHOLD, BLH_NEXT_ACN_ID,BLH_PREV_ACN_ID, BLH_NETWORK_ACN, BLH_TRIG_FLAG, BLH_LAST_UPDATE
FROM BLH_BILL_LIMIT_HD
WHERE BLH_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 074208     DEBUG 86106[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1372656
20190513: 074208     DEBUG 86106[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.updateBillLimDiff(SubscriberUpgradeMigradeBLO.java:19242) - no
20190513: 074208     DEBUG 86106[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.updateBillLimDiff(SubscriberUpgradeMigradeBLO.java:19258) - RETURN VALUE: 0
20190513: 074208     DEBUG 86106[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.MshMsisdnHistory )
20190513: 074208     DEBUG 86106[main] - com.eppixcomm.eppix.base.blo.MshMsisdnHistoryAbstractBLO.create(MshMsisdnHistoryAbstractBLO.java:138) - create( mshMsisdnHistoryDMO )
20190513: 074208     DEBUG 86106[main] - com.eppixcomm.eppix.base.blo.MshMsisdnHistoryAbstractDACImpl.create(MshMsisdnHistoryAbstractDACImpl.java:98) - create( mshMsisdnHistoryDMO )
20190513: 074208     DEBUG 86107[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
MshMsisdnHistory|11||

20190513: 074208     DEBUG 86107[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 607878|833819663      |BSWA      | CFFAR500215.00 AMR5                              |||2019-05-13 07:42:08
20190513: 074208     DEBUG 86325[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: MshMsisdnHistory
Execute SQL Statement: INSERT INTO MSH_MSISDN_HISTORY (MSH_SUBSCRIBER_ID, MSH_MSISDN_NO, MSH_HIST_CODE, MSH_COMMENT, MSH_USER_ID, MSH_TERMINAL_ID, MSH_TIMESTAMP) VALUES (?,?,?,?,?,?,?)
Argument(s): |607878|833819663      |BSWA      | CFFAR500215.00 AMR5                              |||2019-05-13 07:42:08|
20190513: 074208     DEBUG 86325[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.ShcSmsHistcode )
20190513: 074208     DEBUG 86325[main] - com.eppixcomm.eppix.base.blo.ShcSmsHistcodeAbstractBLO.get(ShcSmsHistcodeAbstractBLO.java:267) - get( filter )
20190513: 074208     DEBUG 86326[main] - com.eppixcomm.eppix.base.blo.ShcSmsHistcodeAbstractDACImpl.get(ShcSmsHistcodeAbstractDACImpl.java:192) - get( filter )
20190513: 074208     DEBUG 86326[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
ShcSmsHistcode|0|equalShcHistCode|

20190513: 074208     DEBUG 86546[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: ShcSmsHistcode
Execute SQL Statement: SELECT SHC_MESG_ID, SHC_HIST_CODE 
FROM shc_sms_histcode
WHERE SHC_HIST_CODE = ? 
Argument(s): |BSWA|
20190513: 074208     DEBUG 86786[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsmServiceMsisdn )
20190513: 074208     DEBUG 86786[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractBLO.modify(VsmServiceMsisdnAbstractBLO.java:369) - modify( filter )
20190513: 074208     DEBUG 86786[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractDACImpl.modify(VsmServiceMsisdnAbstractDACImpl.java:181) - modify( filter )
20190513: 074208     DEBUG 86786[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsmServiceMsisdn|16|equalVsmSubscriberId+equalVsmMsisdnNo+equalVsmServiceCode|

20190513: 074209     DEBUG 87307[main] - com.eppixcomm.eppix.common.data.DAOImpl.updateCustom(DAOImpl.java:2935) - updateCustom(DBO): DML Name: VsmServiceMsisdn
Execute SQL Statement: UPDATE VSM_SERVICE_MSISDN SET VSM_BILLED_UPTO = ?
WHERE VSM_SUBSCRIBER_ID = ? AND (VSM_MSISDN_NO) = ? AND (VSM_SERVICE_CODE) = ?
Argument(s): |2019-05-25|607878|833819663|AMR5|
20190513: 074209     DEBUG 87307[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getScv
20190513: 074209     DEBUG 87308[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getScv|0||

20190513: 074209     DEBUG 87718[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getScv
Execute SQL Statement: SELECT SCV_SUBSCRIBER_ID, SCV_CRM_VALUE, SCV_TYPE FROM SCV_SUB_CRM_VALUE WHERE SCV_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 074209     DEBUG 87719[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1bdc9d8
20190513: 074209     DEBUG 87948[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 074209     DEBUG 87948[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 074209     DEBUG 87948[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 074209     DEBUG 87948[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 074209     DEBUG 88068[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 074209     DEBUG 88074[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@10ea9ba
20190513: 074210     DEBUG 88309[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbaSubAux )
20190513: 074210     DEBUG 88309[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractBLO.get(SbaSubAuxAbstractBLO.java:283) - get( filter )
20190513: 074210     DEBUG 88309[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractDACImpl.get(SbaSubAuxAbstractDACImpl.java:101) - get( filter )
20190513: 074210     DEBUG 88309[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbaSubAux|0|equalSbaSubscriberId|

20190513: 074210     DEBUG 88429[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbaSubAux
Execute SQL Statement: SELECT SBA_SUBSCRIBER_ID, SBA_ID_NUMBER, SBA_MATCHCODE, SBA_MARKETING, SBA_THIRD_PARTY, SBA_CUST_DEPT, SBA_DEALER_ID, SBA_DEPARTMENT, SBA_SALESMAN, SBA_REGION, SBA_INVOICE_ADDRID, SBA_INV_ACCOUNT, SBA_PREPAID_STAT, SBA_ANALYSIS_1, SBA_ANALYSIS_2, SBA_ANALYSIS_3, SBA_ANALYSIS_4, SBA_ANALYSIS_5, SBA_ANALYSIS_6, SBA_ANALYSIS_7, SBA_ANALYSIS_8, SBA_ANALYSIS_9, SBA_ANALYSIS_10, SBA_ANALYSIS_11, SBA_ANALYSIS_12, SBA_ANALYSIS_13, SBA_ANALYSIS_14, SBA_ANALYSIS_15, SBA_ANALYSIS_16, SBA_ANALYSIS_17, SBA_ANALYSIS_18, SBA_ANALYSIS_19, SBA_ANALYSIS_20, SBA_ANALYSIS_21, SBA_ANALYSIS_22, SBA_ANALYSIS_23, SBA_ANALYSIS_24, SBA_ANALYSIS_25, SBA_ANALYSIS_26, SBA_ANALYSIS_27, SBA_ANALYSIS_28, SBA_ANALYSIS_29, SBA_ANALYSIS_30,SBA_COMMENTS
FROM SBA_SUB_AUX
WHERE SBA_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 074210     DEBUG 88430[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1a918d5
20190513: 074210     DEBUG 88690[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.AuxCustomers )
20190513: 074210     DEBUG 88691[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getAuxCustomersDAC(BaseAbstractDACFactory.java:122) - getAuxCustomersDAC()
20190513: 074210     DEBUG 88799[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.AuxCustomersDACImpl com.eppixcomm.eppix.base.dml.AuxCustomersDMLFactory@401369
20190513: 074210     DEBUG 88799[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.AuxCustomersDACImpl
20190513: 074210     DEBUG 88802[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074210     DEBUG 88802[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.AuxCustomersDACImpl TO MAP
20190513: 074210     DEBUG 88802[main] - com.eppixcomm.eppix.base.blo.AuxCustomersAbstractBLO.get(AuxCustomersAbstractBLO.java:689) - get( filter )
20190513: 074210     DEBUG 88802[main] - com.eppixcomm.eppix.base.blo.AuxCustomersAbstractDACImpl.get(AuxCustomersAbstractDACImpl.java:1309) - get( filter )
20190513: 074210     DEBUG 88805[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
AuxCustomers|0|equalBillAcNo|

20190513: 074211     DEBUG 89631[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: AuxCustomers
Execute SQL Statement: SELECT AUX_TITLE, AUX_FIRSTNAME, AUX_INVOICE_ADDRID, BANK_NAME, BANK_ADDR1, BANK_ADDR2, BANK_AC_NAME, REF, BANK_SCODE, BANK_AC_NO, BANK_AC_TYPE, BANK_PAY_TYPE, AUX_PREF_DEBIT_DAY, BILL_AC_NO, PROTECT_CODE, HANDSET_CT, BANK_DATE, CONF_DATE, AUX_COMMENT, DATE_OF_BIRTH, REF_PAY_DATE, AC_CLOS_DATE, NO_REAS_DATE, REM_LET_DATE, AC_TRAN_DATE, NO_AC_DATE, SR_FLAG, PROCESSED, PACKAGE_CODE, AUX_ACCOUNT_TYPE, AUX_BILL_CYCLE, CREDIT_CARD_NO, CREDIT_CARD_NAME, EXPIRY_DATE, AUX_CARD_CVV_NO, CREDIT_SCORE, SERV_PROV_ID, DEALER_ID, SALESMAN, ID_NUMBER, ACC_STATUS, COMP_REG_NO, STATIONARY_TYPE, MAX_NO_SUBS, AUX_CURRENCY, AUX_COUNTRY_CODE, AUX_GENDER, AUX_SUB_GRP_ACC_NO, AUX_PREPAID_STAT, AUX_CREDIT_CLASS, AUX_AUTO_LIMIT_IND, AUX_LMT_UP_VAL, AUX_LMT_DN_VAL, AUX_ANALYSIS_1, AUX_ANALYSIS_2, AUX_ANALYSIS_3, AUX_ANALYSIS_4, AUX_ANALYSIS_5, AUX_ANALYSIS_6, AUX_ANALYSIS_7, AUX_ANALYSIS_8, AUX_ANALYSIS_9, AUX_ANALYSIS_10, AUX_ANALYSIS_11, AUX_ANALYSIS_12, AUX_ANALYSIS_13, AUX_ANALYSIS_14, AUX_ANALYSIS_15, AUX_ANALYSIS_16, AUX_ANALYSIS_17, AUX_ANALYSIS_18, AUX_ANALYSIS_19, AUX_ANALYSIS_20, AUX_ANALYSIS_21, AUX_ANALYSIS_22, AUX_ANALYSIS_23, AUX_ANALYSIS_24, AUX_ANALYSIS_25, AUX_ANALYSIS_26, AUX_ANALYSIS_27, AUX_ANALYSIS_28, AUX_ANALYSIS_29, AUX_ANALYSIS_30
FROM AUX_CUSTOMERS
WHERE (BILL_AC_NO) = ?
Argument(s): |A0311553|
20190513: 074211     DEBUG 89633[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1343ed0
20190513: 074211     DEBUG 89892[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getSerialCustomer
20190513: 074211     DEBUG 89893[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getSerialCustomer|0||

20190513: 074212     DEBUG 90311[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getSerialCustomer
Execute SQL Statement: SELECT SC_SERIAL, SC_BILL_AC_NO FROM SC_SERIAL_CUSTOMER WHERE SC_BILL_AC_NO = ?
Argument(s): |A0311553|
20190513: 074212     DEBUG 90312[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@192a848
20190513: 074212     DEBUG 90553[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getEppixHierarchyByTypeSubscriber|0|NONE|

20190513: 074212     DEBUG 90984[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getEppixHierarchyByTypeSubscriber
Execute SQL Statement: SELECT EH_SERIAL, EH_ENTITY_ID, EH_TYPE, EH_VALUE, EH_LINK, EH_HIER_TYPE FROM EH_EPPIX_HIERARCHY WHERE EH_TYPE = 'SUBSCRIBER' AND EH_ENTITY_ID = ? 
Argument(s): |607878|
20190513: 074213     DEBUG 91094[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getVsmUniqueServiceCodeBySubsciber|0|NONE|

20190513: 074213     DEBUG 91494[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getVsmUniqueServiceCodeBySubsciber
Execute SQL Statement: select vsm_service_code from vsm_service_msisdn	where vsm_subscriber_id = ? group by vsm_service_code
Argument(s): |607878|
20190513: 074213     DEBUG 91495[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@e66f56
20190513: 074213     DEBUG 91495[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@979e8b
20190513: 074213     DEBUG 91495[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@29ce8c
20190513: 074213     DEBUG 91495[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@b754b2
20190513: 074213     DEBUG 91495[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@197bb7
20190513: 074213     DEBUG 91495[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1094d48
20190513: 074213     DEBUG 91496[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1b0bdc8
20190513: 074213     DEBUG 91496[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@aeea66
20190513: 074213     DEBUG 91497[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@19eda2c
20190513: 074213     DEBUG 91497[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@59a34
20190513: 074213     DEBUG 91497[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1cef4f7
20190513: 074213     DEBUG 91497[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@349471
20190513: 074213     DEBUG 91497[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1fdadcd
20190513: 074213     DEBUG 91497[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@19d75ee
20190513: 074213     DEBUG 91497[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@10ab09f
20190513: 074213     DEBUG 91498[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@d1c778
20190513: 074213     DEBUG 91498[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@7eb366
20190513: 074213     DEBUG 91498[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@33f0de
20190513: 074213     DEBUG 91498[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@ab444
20190513: 074213     DEBUG 91498[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@c0f1ec
20190513: 074213     DEBUG 91498[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@14acfcd
20190513: 074213     DEBUG 91643[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 1
20190513: 074213     DEBUG 91644[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 2
20190513: 074213     DEBUG 91644[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91644[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91644[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91644[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91644[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91644[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91644[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91644[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91645[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91645[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91645[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91645[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91646[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91646[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91646[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91646[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91646[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91646[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91646[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91646[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91646[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91646[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91647[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91647[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91647[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91647[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91647[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91647[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91647[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91647[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91647[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91647[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91648[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91648[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91648[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91648[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91648[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91648[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91648[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 074213     DEBUG 91649[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 074213     DEBUG 91649[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 8
20190513: 074213     DEBUG 91649[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 16
20190513: 074213     DEBUG 91649[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 32
20190513: 074213     DEBUG 91649[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91649[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91649[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91649[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91649[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91649[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91650[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91650[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91650[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91650[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91650[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91650[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91650[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91650[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91650[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91650[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91651[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91651[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91651[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91651[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91651[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 074213     DEBUG 91651[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 128
20190513: 074213     DEBUG 91652[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 256
20190513: 074213     DEBUG 91652[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSdiSubsDiscountNotByQualId(SubscriberUpgradeMigradeBLO.java:20227) - 
SELECT SDI_SUB_DISC_ID,SDI_SUBSCRIBER_ID,SDI_DISCOUNT_ID,SDI_START_DATE,SDI_END_DATE,SDI_SUSPEND_DATE,SDI_QUAL_ID,SDI_QUAL_TYPE,SDI_PACKAGE_CODE,SDI_TARIFF_PLAN,SDI_SERVICE_CODE,SDI_PAYMENT_TYPE,SDI_ACCOUNT_TYPE,SDI_DISCOUNT_UPTO FROM SDI_SUBS_DISCOUNT WHERE SDI_SUBSCRIBER_ID = 607878 AND sdi_qual_id NOT IN (SELECT dqk_qual_id FROM dqk_disc_qual_key WHERE dqk_key_val IN  (2,4,6,10,18,34,66,130,258) AND dqk_key IN  ('ISIS','ISISA0311553','ISIS0','ISIS500FF','ISISACCDO','ISISHV','ISISAM10','ISISAM50','ISISAMR5','ISISAPNA','ISISAPNW','ISISBCDF','ISISBSTL','ISISCSCP','ISISGPRS','ISISITBL','ISISMEXU','ISISMMSS','ISISNBUN','ISISNDEP','ISISNPRO','ISISNUL ','ISISPSF ','ISISRSMS','ISISSPUL','ISISSUL ','ISISVCMA','ISISASKYL36M','ISISEXCEL') AND dqk_from  <= '43597' AND dqk_to >= '43597') AND sdi_end_date IS NULL  AND sdi_qual_id IS NOT NULL
20190513: 074214     DEBUG 92295[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getDiqDiscountQualByQualId(SubscriberUpgradeMigradeBLO.java:21944) - 
SELECT DIQ_QUAL_DESC, DIQ_QUAL_TYPE, DIQ_START_DATE, 
DIQ_END_DATE, DIQ_PACKAGE_CODE, DIQ_PACK_AFFECT, 
DIQ_TARIFF_PLAN, DIQ_TAR_AFFECT, DIQ_SERVICE_CODE, 
DIQ_SERV_AFFECT, DIQ_PAYMENT_TYPE, DIQ_PAY_AFFECT, 
DIQ_ACCOUNT_TYPE, DIQ_ACC_AFFECT, DIQ_DISCOUNT_ID, 
DIQ_USED FROM DIQ_DISCOUNT_QUAL 
 WHERE DIQ_QUAL_ID IN (  SELECT DQK_QUAL_ID 
 FROM DQK_DISC_QUAL_KEY 
 WHERE DQK_KEY_VAL IN  (2,4,6,10,18,34,66,130,258)
 AND DQK_KEY IN  ('ISIS','ISISA0311553','ISIS0','ISIS500FF','ISISACCDO','ISISHV','ISISAM10','ISISAM50','ISISAMR5','ISISAPNA','ISISAPNW','ISISBCDF','ISISBSTL','ISISCSCP','ISISGPRS','ISISITBL','ISISMEXU','ISISMMSS','ISISNBUN','ISISNDEP','ISISNPRO','ISISNUL ','ISISPSF ','ISISRSMS','ISISSPUL','ISISSUL ','ISISVCMA','ISISASKYL36M','ISISEXCEL') AND DQK_FROM  <= 43597
 AND DQK_TO >= 43597
 AND DQK_QUAL_ID NOT IN ( 
 SELECT NVL(SDI_QUAL_ID, 0)  FROM SDI_SUBS_DISCOUNT 
 WHERE SDI_SUBSCRIBER_ID = 607878 AND SDI_END_DATE IS NULL))
20190513: 074214     DEBUG 92936[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1895) - 
this.tsDMO: 
TsTariffServiceDMO [fieldSizes=[5, 20, 4, 15, 5, 5, 5, 5, 5, 5, 5, 1, 0, 4, 1]
tsChargeFreq=1
tsActCharge=
tsActInclusive=N
tsChargePeriod=M
tsDiscountRef=
tsInternalTariff=ASKYL36M
tsNetServCode=AMR500
tsPackageCode=500FF
tsPdeactCharge=
tsReactCharge=
tsServiceCode=AMR5
tsSubCharge1=AR500
tsSubCharge2=
tsSubCharge3=
tsTdeactCharge=]
20190513: 074214     DEBUG 92937[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.serviceCreateNonBasicN2N(SubscriberUpgradeMigradeBLO.java:46052) - 
Integer subscriberId: 607878
String simNo: 0004102502505
String newSim: N
String serviceExists: 
Integer priority: 5
String pCommand: 
Integer seqNo: 0
String netServCode: AMR500
String message: MODIFY_SERVICES
String serviceType: SW
String primarySIM: 
String primaryMSISDN: 
String secondMSISDN: 
String serviceCode: AMR5
String location: M1
String applyOption: MODIFY
Date activateDate: 2019-05-13
short depReqd: 0
20190513: 074214     DEBUG 92937[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 074214     DEBUG 92937[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.get(VamActiveMsisdnAbstractBLO.java:654) - get( filter )
20190513: 074214     DEBUG 92937[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.get(VamActiveMsisdnAbstractDACImpl.java:683) - get( filter )
20190513: 074214     DEBUG 92938[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId+equalVamSimNo+equalVamHierarchy+INVamStatCode_3|

20190513: 074215     DEBUG 93557[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ? AND (VAM_SIM_NO) = ? AND (VAM_HIERARCHY) = ? AND VAM_STAT_CODE IN ( ? , ? , ? )
Argument(s): |607878|0004102502505|0|1|4|6|
20190513: 074215     DEBUG 93558[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@53ab04
20190513: 074215     DEBUG 93799[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 074215     DEBUG 93800[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSysdirmDAC(BaseAbstractDACFactory.java:327) - getSysdirmDAC()
20190513: 074215     DEBUG 93919[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SysdirmDACImpl com.eppixcomm.eppix.base.dml.SysdirmAbstractDMLFactory@f0b7f8
20190513: 074215     DEBUG 93919[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SysdirmDACImpl
20190513: 074215     DEBUG 93919[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074215     DEBUG 93920[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SysdirmDACImpl TO MAP
20190513: 074215     DEBUG 93920[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 074215     DEBUG 93920[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 074215     DEBUG 93920[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 074216     DEBUG 94309[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASSWITCHM1|
20190513: 074216     DEBUG 94309[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1be16f5
20190513: 074216     DEBUG 94539[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 074216     DEBUG 94539[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 074216     DEBUG 94540[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 074216     DEBUG 94540[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 074216     DEBUG 94659[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASIMSIALGO|
20190513: 074216     DEBUG 94659[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@d56b37
20190513: 074216     DEBUG 94900[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9355) - 
=======================================================================================
PARAM OPTION: ALL
PARAM SIM NO: 0004102502505
PARAM NETWORK ID: 
PARAM HLR: 
PARAM DEALER ID: 
PARAM CUSTOMER: 
=======================================================================================
20190513: 074216     DEBUG 94900[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SacSimAssignCus )
20190513: 074216     DEBUG 94901[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractBLO.get(SacSimAssignCusAbstractBLO.java:287) - get( filter )
20190513: 074216     DEBUG 94902[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractDACImpl.get(SacSimAssignCusAbstractDACImpl.java:205) - get( filter )
20190513: 074216     DEBUG 94902[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SacSimAssignCus|0|equalSacSimNo|

20190513: 074216     DEBUG 95020[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SacSimAssignCus
Execute SQL Statement: SELECT SAC_BILL_AC_NO, SAC_SIM_NO 
FROM sac_sim_assign_cus
WHERE SAC_SIM_NO = ? 
Argument(s): |0004102502505|
20190513: 074217      INFO 95260[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9984) - Passed customer no  not found in Sac_Sim_assign_cus
20190513: 074217     DEBUG 95260[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190513: 074217     DEBUG 95260[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190513: 074217     DEBUG 95261[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190513: 074217     DEBUG 95261[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo|

20190513: 074217     DEBUG 95380[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ?
Argument(s): |0004102502505|
20190513: 074217     DEBUG 95381[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1a897a9
20190513: 074217     DEBUG 95621[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:10075) - NETWORK PARAMS: OPTION: ALL NETWORK ID:  NETWORKID.LENGTH: 0
20190513: 074217     DEBUG 95621[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 074217     DEBUG 95621[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.get(VamActiveMsisdnAbstractBLO.java:654) - get( filter )
20190513: 074217     DEBUG 95621[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.get(VamActiveMsisdnAbstractDACImpl.java:683) - get( filter )
20190513: 074217     DEBUG 95622[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamMsisdnNo|

20190513: 074218     DEBUG 96222[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE (VAM_MSISDN_NO) = ?
Argument(s): |833819663|
20190513: 074218     DEBUG 96224[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@90832e
20190513: 074218     DEBUG 96504[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VpnProviderNetwk )
20190513: 074218     DEBUG 96505[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVpnProviderNetwkDAC(BaseAbstractDACFactory.java:435) - getVpnProviderNetwkDAC()
20190513: 074218     DEBUG 96607[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VpnProviderNetwkDACImpl com.eppixcomm.eppix.base.dml.VpnProviderNetwkDMLFactory@15356d5
20190513: 074218     DEBUG 96607[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VpnProviderNetwkDACImpl
20190513: 074218     DEBUG 96608[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074218     DEBUG 96609[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VpnProviderNetwkDACImpl TO MAP
20190513: 074218     DEBUG 96609[main] - com.eppixcomm.eppix.base.blo.VpnProviderNetwkAbstractBLO.iterate(VpnProviderNetwkAbstractBLO.java:500) - iterate( filter )
20190513: 074218     DEBUG 96609[main] - com.eppixcomm.eppix.base.blo.VpnProviderNetwkAbstractDACImpl.iterate(VpnProviderNetwkAbstractDACImpl.java:421) - iterate( filter )
20190513: 074218     DEBUG 96609[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VpnProviderNetwk|0|VpnNetworkPrefixMatch|

20190513: 074218     DEBUG 97013[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VpnProviderNetwk
Execute SQL Statement: SELECT VPN_PROVIDER_ID, VPN_NETWORK_PREFIX, VPN_MSISDN_MASK, VPN_SIM_MASK
FROM VPN_PROVIDER_NETWK
WHERE VPN_NETWORK_PREFIX LIKE ?
Argument(s): |%83%|
20190513: 074218     DEBUG 97013[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@364641
20190513: 074219     DEBUG 97124[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 074219     DEBUG 97124[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 074219     DEBUG 97125[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 074219     DEBUG 97125[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 074219     DEBUG 97254[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNUBLOCK|
20190513: 074219     DEBUG 97254[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@187c55c
20190513: 074219     DEBUG 97484[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getImsiRestriction|0|NONE|

20190513: 074219     DEBUG 97945[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getImsiRestriction
Execute SQL Statement: SELECT UNIQUE(vas_active_service.vas_service_type) FROM vam_active_msisdn, vas_active_service, vsm_service_msisdn  WHERE vam_subscriber_id = ?  AND   vam_sim_no        = ?  AND   vam_subscriber_id = vas_subscriber_id AND   vas_service_type  IN ('NR','HR','HF') AND   vas_service_code  = vsm_service_code AND   vsm_msisdn_no     = vam_msisdn_no AND   vsm_subscriber_id = vam_subscriber_id ORDER BY vas_service_type
Argument(s): |607878|0004102502505|
20190513: 074219     DEBUG 98065[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 074219     DEBUG 98065[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 074219     DEBUG 98065[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 074219     DEBUG 98065[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 074220     DEBUG 98186[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNDEFRR|
20190513: 074220     DEBUG 98186[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@b02928
20190513: 074220     DEBUG 98426[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getImsiCategory|0|NONE|

20190513: 074220     DEBUG 98887[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getImsiCategory
Execute SQL Statement: SELECT vas_active_service.vas_service_type FROM vam_active_msisdn, vas_active_service, vsm_service_msisdn  WHERE vam_subscriber_id = ? AND vam_sim_no = ? AND vam_subscriber_id = vas_subscriber_id AND vas_service_type = 'HB' AND vas_service_code = vsm_service_code AND vsm_msisdn_no = vam_msisdn_no AND vsm_subscriber_id = vam_subscriber_id ORDER BY vas_service_type
Argument(s): |607878|0004102502505|
20190513: 074220     DEBUG 99047[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 074220     DEBUG 99047[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 074220     DEBUG 99047[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 074220     DEBUG 99047[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 074221     DEBUG 99187[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNDEFACT|
20190513: 074221     DEBUG 99187[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@15f7107
20190513: 074221     DEBUG 99429[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SfeSimFutEvent )
20190513: 074221     DEBUG 99430[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSfeSimFutEventDAC(BaseAbstractDACFactory.java:1153) - getSfeSimFutEventDAC()
20190513: 074221     DEBUG 99515[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SfeSimFutEventDACImpl com.eppixcomm.eppix.base.dml.SfeSimFutEventDMLFactory@1ee2c2c
20190513: 074221     DEBUG 99515[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SfeSimFutEventDACImpl
20190513: 074221     DEBUG 99557[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074221     DEBUG 99557[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SfeSimFutEventDACImpl TO MAP
20190513: 074221     DEBUG 99557[main] - com.eppixcomm.eppix.base.blo.SfeSimFutEventAbstractBLO.get(SfeSimFutEventAbstractBLO.java:341) - get( filter )
20190513: 074221     DEBUG 99558[main] - com.eppixcomm.eppix.base.blo.SfeSimFutEventAbstractDACImpl.get(SfeSimFutEventAbstractDACImpl.java:326) - get( filter )
20190513: 074221     DEBUG 99558[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SfeSimFutEvent|0|equalSfeSimNo+equalSfeFutEventId+nullSfeMsisdnNo+nullSfeServiceCode|

20190513: 074221     DEBUG100069[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SfeSimFutEvent
Execute SQL Statement: SELECT SFE_COMMAND,SFE_FUT_EVENT_ID,SFE_SUBSCRIBER_ID,SFE_SIM_NO,SFE_MSISDN_NO,SFE_SERVICE_CODE,SFE_EVENT_DATE,SFE_TIMESTAMP,SFE_ERROR_COMMENT,SFE_ORIG_STATUS
FROM SFE_SIM_FUT_EVENT
WHERE SFE_SIM_NO = ?  AND SFE_FUT_EVENT_ID = ?  AND (SFE_MSISDN_NO IS NULL OR LENGTH(SFE_MSISDN_NO) IS NULL OR LENGTH(SFE_MSISDN_NO) = 0) AND (SFE_SERVICE_CODE IS NULL OR LENGTH(SFE_SERVICE_CODE) IS NULL OR LENGTH(SFE_SERVICE_CODE) = 0)
Argument(s): |0004102502505|SIM_ACTIVATE|
20190513: 074222     DEBUG100451[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getNmMsisdnVam
20190513: 074222     DEBUG100452[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getNmMsisdnVam|0||

20190513: 074223     DEBUG101091[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getNmMsisdnVam
Execute SQL Statement: SELECT NM_INTERNAL_TARIFF, NM_NETWORK_TARIFF, NM_CONTRACT_PERIOD, NM_NTWRK_CONTR_PER, NM_MIN_CANC_PERIOD, NM_HIGHER_MIG_TYPE, NM_LOWER_MIG_TYPE, NM_SAME_MIG_TYPE, NM_NETWORK_ID, NM_NET_TYPE FROM nm_netmat, vam_active_msisdn WHERE vam_msisdn_no = ?  AND vam_intern_tariff = nm_internal_tariff
Argument(s): |833819663|
20190513: 074223     DEBUG101091[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1e7c5cb
20190513: 074223     DEBUG101373[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NgsNetGroupServ )
20190513: 074223     DEBUG101374[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getNgsNetGroupServDAC(BaseAbstractDACFactory.java:748) - getNgsNetGroupServDAC()
20190513: 074223     DEBUG101456[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.NgsNetGroupServDACImpl com.eppixcomm.eppix.base.dml.NgsNetGroupServAbstractDMLFactory@1961581
20190513: 074223     DEBUG101456[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.NgsNetGroupServDACImpl
20190513: 074223     DEBUG101458[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074223     DEBUG101458[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.NgsNetGroupServDACImpl TO MAP
20190513: 074223     DEBUG101458[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractBLO.iterate(NgsNetGroupServAbstractBLO.java:563) - iterate( filter )
20190513: 074223     DEBUG101458[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractDACImpl.iterate(NgsNetGroupServAbstractDACImpl.java:618) - iterate( filter )
20190513: 074223     DEBUG101459[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NgsNetGroupServ|0|NgsCodeMatch|NgsSequenceasc

20190513: 074223     ERROR101732[main] - com.eppixcomm.eppix.common.data.DAOThrower.unexpected(DAOThrower.java:150) - com.eppixcomm.eppix.base.error.EPPIXSeriousException: A database error has occurred: SQL Error: Reason: A syntax error has occurred., SQL State: 42000, Vendor Code: -201, DML Name: NgsNetGroupServ, SQL Statement: SELECT NGS_CODE, NGS_NETWORK, NGS_NET_SERV_CODE, NGS_SEQUENCE, NGS_APPLY_TEXT, NGS_MODIFY_TEXT, NGS_REMOVE_TEXT, NGS_PARAM_NAME1, NGS_PARAM_VALUE1, NGS_PARAM_NAME2, NGS_PARAM_VALUE2, NGS_PARAM_NAME3, NGS_PARAM_VALUE3, NGS_PARAM_NAME4, NGS_PARAM_VALUE4, NGS_PARAM_NAME5, NGS_PARAM_VALUE5
FROM NGS_NET_GROUP_SERV
WHERE NGS_CODE ? ORDER BY NGS_SEQUENCE ASC, Argument(s): None
20190513: 074223     DEBUG101732[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getNgsNetServCode
20190513: 074223     DEBUG101732[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getNgsNetServCode|0||

20190513: 074224     DEBUG103033[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getNgsNetServCode
Execute SQL Statement: SELECT first 1 ngs_net_serv_code  FROM ngs_net_group_serv  WHERE ngs_code = ?  AND ngs_network  = ?  AND ngs_sequence  = 1
Argument(s): |AMR500|M1|
20190513: 074224     DEBUG103034[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1f1235b
20190513: 074225     DEBUG103355[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.processExistingSimNonBasic(SubscriberUpgradeMigradeBLO.java:47589) - 
subscriberId: 607878
simNo: 0004102502505
serviceType: SW
serviceCode: AMR5
networkService: AMR500    
networkService: AMR500    
location: M1
priority: 5
activateDate: 20190513
command: 
primaryMsisdn: 833819663
smnDMO: 
SmnSimNosDMO [smnActiveDate=1999-11-23
smnAvailDate=2016-06-14
smnExpiryDate=2019-06-14
smnAnalysis1=null
smnAnalysis2=null
smnAnalysis3=null
smnDealerId=MTEL
smnHlr=25
smnImsiNo=null
smnKi=null
smnNetworkId=M1
smnOnNetwork=Y
smnPinNo=null
smnPinNo2=null
smnProductCode=83USIM
smnPukNo=32063218
smnPukNo2=null
smnSimNo=0004102502505
smnStatus=1
smnTransportKey=null
smnWarehouse=25]
20190513: 074225     DEBUG103355[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 074225     DEBUG103355[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 074225     DEBUG103355[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 074225     DEBUG103355[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 074225     DEBUG103855[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNTRANID|
20190513: 074225     DEBUG103856[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@113beb5
20190513: 074226     DEBUG104195[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 074226     DEBUG104196[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.modify(SysdirmAbstractBLO.java:308) - modify( filter )
20190513: 074226     DEBUG104196[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.modify(SysdirmAbstractDACImpl.java:175) - modify( filter )
20190513: 074226     DEBUG104196[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|16|equalSystemKey|

20190513: 074226     DEBUG104756[main] - com.eppixcomm.eppix.common.data.DAOImpl.updateCustom(DAOImpl.java:2935) - updateCustom(DBO): DML Name: Sysdirm
Execute SQL Statement: UPDATE SYSDIRM SET KEY_VALUE = ?
WHERE (SYSTEM_KEY) = ?
Argument(s): |46989890|ASNNTRANID|
20190513: 074226     DEBUG104757[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190513: 074226     DEBUG104757[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190513: 074226     DEBUG104757[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190513: 074226     DEBUG104757[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190513: 074226     DEBUG105017[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |ASSMROOTM1|
20190513: 074226     DEBUG105019[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@d17ec3
20190513: 074227     DEBUG105317[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getAuxSbd
20190513: 074227     DEBUG105317[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getAuxSbd|0||

20190513: 074229     DEBUG107381[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getAuxSbd
Execute SQL Statement: SELECT AUX_TITLE, AUX_FIRSTNAME, AUX_INVOICE_ADDRID, BANK_NAME, BANK_ADDR1, BANK_ADDR2, BANK_AC_NAME, REF, BANK_SCODE, BANK_AC_NO, BANK_AC_TYPE, BANK_PAY_TYPE, AUX_PREF_DEBIT_DAY, BILL_AC_NO, PROTECT_CODE, HANDSET_CT, BANK_DATE, CONF_DATE, AUX_COMMENT, DATE_OF_BIRTH, REF_PAY_DATE, AC_CLOS_DATE, NO_REAS_DATE, REM_LET_DATE, AC_TRAN_DATE, NO_AC_DATE, SR_FLAG, PROCESSED, PACKAGE_CODE, AUX_ACCOUNT_TYPE, AUX_BILL_CYCLE, CREDIT_CARD_NO, CREDIT_CARD_NAME, EXPIRY_DATE, AUX_CARD_CVV_NO, CREDIT_SCORE, SERV_PROV_ID, DEALER_ID, SALESMAN, ID_NUMBER, ACC_STATUS, COMP_REG_NO, STATIONARY_TYPE, MAX_NO_SUBS, AUX_CURRENCY, AUX_COUNTRY_CODE, AUX_GENDER, AUX_SUB_GRP_ACC_NO, AUX_PREPAID_STAT, AUX_CREDIT_CLASS, AUX_AUTO_LIMIT_IND, AUX_LMT_UP_VAL, AUX_LMT_DN_VAL, AUX_ANALYSIS_1, AUX_ANALYSIS_2, AUX_ANALYSIS_3, AUX_ANALYSIS_4, AUX_ANALYSIS_5, AUX_ANALYSIS_6, AUX_ANALYSIS_7, AUX_ANALYSIS_8, AUX_ANALYSIS_9, AUX_ANALYSIS_10, AUX_ANALYSIS_11, AUX_ANALYSIS_12, AUX_ANALYSIS_13, AUX_ANALYSIS_14, AUX_ANALYSIS_15, AUX_ANALYSIS_16, AUX_ANALYSIS_17, AUX_ANALYSIS_18, AUX_ANALYSIS_19, AUX_ANALYSIS_20, AUX_ANALYSIS_21, AUX_ANALYSIS_22, AUX_ANALYSIS_23, AUX_ANALYSIS_24, AUX_ANALYSIS_25, AUX_ANALYSIS_26, AUX_ANALYSIS_27, AUX_ANALYSIS_28, AUX_ANALYSIS_29, AUX_ANALYSIS_30 FROM aux_customers, sbd_sub_dets WHERE sbd_bill_ac_no = bill_ac_no AND sbd_subscriber_id = ? 
Argument(s): |607878|
20190513: 074229     DEBUG107383[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@193f6e2
20190513: 074229     DEBUG107722[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getNmMsisdnVam
20190513: 074229     DEBUG107722[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getNmMsisdnVam|0||

20190513: 074229     DEBUG107902[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getNmMsisdnVam
Execute SQL Statement: SELECT NM_INTERNAL_TARIFF, NM_NETWORK_TARIFF, NM_CONTRACT_PERIOD, NM_NTWRK_CONTR_PER, NM_MIN_CANC_PERIOD, NM_HIGHER_MIG_TYPE, NM_LOWER_MIG_TYPE, NM_SAME_MIG_TYPE, NM_NETWORK_ID, NM_NET_TYPE FROM nm_netmat, vam_active_msisdn WHERE vam_msisdn_no = ?  AND vam_intern_tariff = nm_internal_tariff
Argument(s): |833819663|
20190513: 074229     DEBUG107902[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1358f03
20190513: 074230     DEBUG108183[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SdSimDeactivate )
20190513: 074230     DEBUG108184[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSdSimDeactivateDAC(BaseAbstractDACFactory.java:1141) - getSdSimDeactivateDAC()
20190513: 074230     DEBUG108351[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SdSimDeactivateDACImpl com.eppixcomm.eppix.base.dml.SdSimDeactivateDMLFactory@1b34126
20190513: 074230     DEBUG108351[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SdSimDeactivateDACImpl
20190513: 074230     DEBUG108353[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074230     DEBUG108353[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SdSimDeactivateDACImpl TO MAP
20190513: 074230     DEBUG108354[main] - com.eppixcomm.eppix.base.blo.SdSimDeactivateAbstractBLO.get(SdSimDeactivateAbstractBLO.java:400) - get( filter )
20190513: 074230     DEBUG108354[main] - com.eppixcomm.eppix.base.blo.SdSimDeactivateAbstractDACImpl.get(SdSimDeactivateAbstractDACImpl.java:421) - get( filter )
20190513: 074230     DEBUG108354[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SdSimDeactivate|0|equalSdSimNo+notnullSdDconnectDate+greaterthanSdDconnectDate|equalSdTransStatus|

20190513: 074230     DEBUG108904[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SdSimDeactivate
Execute SQL Statement: SELECT SD_SUBSCRIBER_ID,SD_HANDSET_NO,SD_SIM_NO,SD_TRANS_STATUS,SD_STAT_CODE,SD_DCONNECT_DATE,SD_PRORATA_TO_DATE,SD_REASON,SD_LETTER_TYPE,SD_DISCON_CHARGE1,SD_DISCON_CHARGE2,SD_DISCON_CHARGE3,SD_DISCON_CHARGE4,SD_DISCON_CHARGE5,SD_EL_COMMAND,SD_EPPIX_STAMP,SD_N2N_STAMP,SD_ERROR_COMMENT
FROM SD_SIM_DEACTIVATE
WHERE SD_SIM_NO = ?  AND SD_DCONNECT_DATE IS NOT NULL AND SD_DCONNECT_DATE > ?  AND (SD_TRANS_STATUS = ?  )
Argument(s): |0004102502505|2019-05-13|F|
20190513: 074231     ERROR109184[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSimFutureDeactivate(SubscriberUpgradeMigradeBLO.java:29727) - No SIM details found in table sd_sim_deactivate for SIM no 0004102502505
20190513: 074231     DEBUG109186[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcEventCommand )
20190513: 074231     DEBUG109188[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getEcEventCommandDAC(BaseDACFactory.java:131) - getEcEventCommandDAC()
20190513: 074231     DEBUG109245[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.EcEventCommandDACImpl com.eppixcomm.eppix.base.dml.EcEventCommandDMLFactory@11c2b67
20190513: 074231     DEBUG109245[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.EcEventCommandDACImpl
20190513: 074231     DEBUG109246[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074231     DEBUG109246[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.EcEventCommandDACImpl TO MAP
20190513: 074231     DEBUG109247[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractBLO.create(EcEventCommandAbstractBLO.java:189) - create( ecEventCommandDMO )
20190513: 074231     DEBUG109247[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractBLO.exists(EcEventCommandAbstractBLO.java:423) - exists(ecEventCommand)
20190513: 074231     DEBUG109247[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractDACImpl.exists(EcEventCommandAbstractDACImpl.java:227) - exists( EcEventCommandDMO)
20190513: 074231     DEBUG109247[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcEventCommand|9|filterByPrimaryKey|

20190513: 074231     DEBUG109716[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: EcEventCommand
Execute SQL Statement: SELECT DISTINCT(0)
FROM EC_EVENT_COMMAND
WHERE (EC_COMMAND) = ?
Argument(s): |201905130742107 |
20190513: 074231     DEBUG109986[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractDACImpl.create(EcEventCommandAbstractDACImpl.java:99) - create( ecEventCommandDMO )
20190513: 074231     DEBUG109987[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcEventCommand|11||

20190513: 074232     DEBUG110186[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 201905130742107 |1|2019-05-13|742|MODIFY_SERVICES               |83   |C|5||607878|833819663           |0004102502505            ||eppixcomm     
20190513: 074232     DEBUG110657[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: EcEventCommand
Execute SQL Statement: INSERT INTO EC_EVENT_COMMAND (EC_COMMAND, EC_STATUS, EC_DATE, EC_TIME, EC_MESSAGE, EC_NETWORK, EC_TYPE, EC_PRIORITY, EC_SEND_SEQ, EC_SUBSCRIBER_ID, EC_MSISDN, EC_SIM, EC_OPERATOR, EC_TTY) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Argument(s): |201905130742107 |1|2019-05-13|742|MODIFY_SERVICES               |83   |C|5||607878|833819663           |0004102502505            ||eppixcomm     |
20190513: 074232     DEBUG110657[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcEventCommand )
20190513: 074232     DEBUG110657[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractBLO.iterate(EcEventCommandAbstractBLO.java:494) - iterate( filter )
20190513: 074232     DEBUG110657[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractDACImpl.iterate(EcEventCommandAbstractDACImpl.java:492) - iterate( filter )
20190513: 074232     DEBUG110657[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcEventCommand|0|equalEcMsisdn~|equalEcSim+INEcMessage_2+INEcStatus_3+notequalEcCommand|EcCommanddesc

20190513: 074233     DEBUG111198[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: EcEventCommand
Execute SQL Statement: SELECT EC_COMMAND, EC_STATUS, EC_DATE, EC_TIME, EC_MESSAGE, EC_NETWORK, EC_TYPE, EC_PRIORITY, EC_SEND_SEQ, EC_SUBSCRIBER_ID, EC_MSISDN, EC_SIM, EC_OPERATOR, EC_TTY
FROM EC_EVENT_COMMAND
WHERE (EC_MSISDN) = ? AND ((EC_SIM) = ?) AND (EC_MESSAGE) IN ( ? , ? ) AND (EC_STATUS) IN ( ? , ? , ? ) AND (EC_COMMAND) != ? ORDER BY EC_COMMAND DESC
Argument(s): |833819663|0004102502505|ACTIVATE_SIM|RESUME_SIM|1|2|4|201905130742107|
20190513: 074233     DEBUG111329[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NtpNetTransPend )
20190513: 074233     DEBUG111330[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getNtpNetTransPendDAC(BaseDACFactory.java:176) - getNtpNetTransPendDAC()
20190513: 074233     DEBUG111392[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl com.eppixcomm.eppix.base.dml.NtpNetTransPendDMLFactory@21e554
20190513: 074233     DEBUG111392[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl
20190513: 074233     DEBUG111393[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074233     DEBUG111393[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl TO MAP
20190513: 074233     DEBUG111393[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractBLO.create(NtpNetTransPendAbstractBLO.java:92) - create( NtpnetTransPendDMO )
20190513: 074233     DEBUG111394[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractBLO.exists(NtpNetTransPendAbstractBLO.java:357) - exists(nmNetmat)
20190513: 074233     DEBUG111394[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl.exists(NtpNetTransPendAbstractDACImpl.java:191) - exists( NtpNetTransPendDMO)
20190513: 074233     DEBUG111394[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NtpNetTransPend|9|filterByPrimaryKey|

20190513: 074233     DEBUG111849[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: NtpNetTransPend
Execute SQL Statement: SELECT DISTINCT(0)
FROM NTP_NET_TRANS_PEND
WHERE NTP_SERIAL_ID = ?
Argument(s): |0|
20190513: 074234     DEBUG112129[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl.create(NtpNetTransPendAbstractDACImpl.java:63) - create( ntpNetTransPendDMO )
20190513: 074234     DEBUG112130[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NtpNetTransPend|11||

20190513: 074234     DEBUG112330[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 0|201905130742107 |0|  |607878|                    |                    |AMR5|1|2019-05-13 07:42:33
20190513: 074234     DEBUG112722[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: NtpNetTransPend
Execute SQL Statement: INSERT INTO NTP_NET_TRANS_PEND (NTP_SERIAL_ID, NTP_COMMAND, NTP_SEND_SEQ,NTP_TRAN_TYPE, NTP_SUBSCRIBER_ID, NTP_OLD_VALUE, NTP_NEW_VALUE, NTP_SERVICE_CODE, NTP_STATUS, NTP_TIMESTAMP) VALUES (?,?,?,?,?,?,?,?,?,?)
Argument(s): |0|201905130742107 |0|  |607878|                    |                    |AMR5|1|2019-05-13 07:42:33|
20190513: 074234     DEBUG112724[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcdEventCmdDet )
20190513: 074234     DEBUG112781[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getEcdEventCmdDetDAC(BaseDACFactory.java:161) - getEcdEventCmdDetDAC()
20190513: 074234     DEBUG112827[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.EcdEventCmdDetDACImpl com.eppixcomm.eppix.base.dml.EcdEventCmdDetDMLFactory@1dc0e7a
20190513: 074234     DEBUG112827[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.EcdEventCmdDetDACImpl
20190513: 074234     DEBUG112827[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074234     DEBUG112828[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.EcdEventCmdDetDACImpl TO MAP
20190513: 074234     DEBUG112828[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.create(EcdEventCmdDetAbstractBLO.java:184) - create( ecdEventCmdDetDMO )
20190513: 074234     DEBUG112828[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.exists(EcdEventCmdDetAbstractBLO.java:411) - exists(ecdEventCmdDet)
20190513: 074234     DEBUG112828[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.exists(EcdEventCmdDetAbstractDACImpl.java:236) - exists( EcdEventCmdDetDMO)
20190513: 074234     DEBUG112828[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|9|filterByPrimaryKey|

20190513: 074235     DEBUG113282[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: EcdEventCmdDet
Execute SQL Statement: SELECT DISTINCT(0)
FROM ECD_EVENT_CMD_DET
WHERE (ECD_COMMAND) = ? AND  ECD_SEQNO = ?
Argument(s): |201905130742107 |1|
20190513: 074235     DEBUG113551[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.create(EcdEventCmdDetAbstractDACImpl.java:100) - create( ecdEventCmdDetDMO )
20190513: 074235     DEBUG113552[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|11||

20190513: 074235     DEBUG113732[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 201905130742107 |1|DET|[SERVICE_REQUEST_HEADER],SERV_REQ_TYPE=Modify_Subscriber_Services,ICC_ID=8927000004102502505,IMSI=null,PRIMARY_MSISDN=833819663,LOCATION=M1,SPID=        59,NETWORK_TARIFF=ASL,NETWORK_ID=M1,TRANS_ID=0046989890,PRIORITY=5,VERSION_NO=1.0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             | |2019-05-13 07:42:34
20190513: 074236     DEBUG114463[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: EcdEventCmdDet
Execute SQL Statement: INSERT INTO ECD_EVENT_CMD_DET (ECD_COMMAND, ECD_SEQNO, ECD_DET_TYPE, ECD_TEXT, ECD_FLAG, ECD_TIMESTAMP) VALUES (?,?,?,?,?,?)
Argument(s): |201905130742107 |1|DET|[SERVICE_REQUEST_HEADER],SERV_REQ_TYPE=Modify_Subscriber_Services,ICC_ID=8927000004102502505,IMSI=null,PRIMARY_MSISDN=833819663,LOCATION=M1,SPID=        59,NETWORK_TARIFF=ASL,NETWORK_ID=M1,TRANS_ID=0046989890,PRIORITY=5,VERSION_NO=1.0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             | |2019-05-13 07:42:34|
20190513: 074236     DEBUG114463[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createN2NDetailSegment(SubscriberUpgradeMigradeBLO.java:33011) - 
N2N_CreateDetailSegment
NETWORK: M1
NET SERV CODE: AMR500
COMMAND: 201905130742107
SEQ NO: 1
SIM: 0004102502505
NETWORK: M1
MSISDN: 
CATEGORY: ORDINARY
RESTRICTION: RR
MS STATE: U_ADMIN
TARIFF TYPE: CTRCT
PERIMARY SIM: 
SECOND SIM: 0004102502505
PRIMARY MISISDN: 
SECOND MSISDN: 
SERVICE TYPE: SW
SERVICE CODE: AMR5
SUBSCRIBER: 607878
OPTION: MODIFY
20190513: 074236     DEBUG114464[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NgsNetGroupServ )
20190513: 074236     DEBUG114464[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractBLO.iterate(NgsNetGroupServAbstractBLO.java:563) - iterate( filter )
20190513: 074236     DEBUG114464[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractDACImpl.iterate(NgsNetGroupServAbstractDACImpl.java:618) - iterate( filter )
20190513: 074236     DEBUG114464[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NgsNetGroupServ|0|equalNgsCode+equalNgsNetwork|NgsSequenceasc

20190513: 074236     DEBUG114984[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: NgsNetGroupServ
Execute SQL Statement: SELECT NGS_CODE, NGS_NETWORK, NGS_NET_SERV_CODE, NGS_SEQUENCE, NGS_APPLY_TEXT, NGS_MODIFY_TEXT, NGS_REMOVE_TEXT, NGS_PARAM_NAME1, NGS_PARAM_VALUE1, NGS_PARAM_NAME2, NGS_PARAM_VALUE2, NGS_PARAM_NAME3, NGS_PARAM_VALUE3, NGS_PARAM_NAME4, NGS_PARAM_VALUE4, NGS_PARAM_NAME5, NGS_PARAM_VALUE5
FROM NGS_NET_GROUP_SERV
WHERE NGS_CODE = ? AND NGS_NETWORK = ? ORDER BY NGS_SEQUENCE ASC
Argument(s): |AMR500|M1|
20190513: 074236     DEBUG114985[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 074236     DEBUG114985[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 074236     DEBUG114985[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 074236     DEBUG114987[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 074237     DEBUG115126[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASGENMBM1|
20190513: 074237     DEBUG115126[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@163f7a1
20190513: 074237     DEBUG115394[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 074237     DEBUG115394[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 074237     DEBUG115394[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 074237     DEBUG115395[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 074237     DEBUG115535[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASMBPWDM1|
20190513: 074237     DEBUG115536[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1690ab
20190513: 074237     DEBUG115815[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9355) - 
=======================================================================================
PARAM OPTION: ALL
PARAM SIM NO: 0004102502505
PARAM NETWORK ID: 
PARAM HLR: 
PARAM DEALER ID: 
PARAM CUSTOMER: 
=======================================================================================
20190513: 074237     DEBUG115816[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SacSimAssignCus )
20190513: 074237     DEBUG115816[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractBLO.get(SacSimAssignCusAbstractBLO.java:287) - get( filter )
20190513: 074237     DEBUG115816[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractDACImpl.get(SacSimAssignCusAbstractDACImpl.java:205) - get( filter )
20190513: 074237     DEBUG115816[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SacSimAssignCus|0|equalSacSimNo|

20190513: 074237     DEBUG115955[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SacSimAssignCus
Execute SQL Statement: SELECT SAC_BILL_AC_NO, SAC_SIM_NO 
FROM sac_sim_assign_cus
WHERE SAC_SIM_NO = ? 
Argument(s): |0004102502505|
20190513: 074238      INFO116236[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9984) - Passed customer no  not found in Sac_Sim_assign_cus
20190513: 074238     DEBUG116237[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190513: 074238     DEBUG116237[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190513: 074238     DEBUG116237[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190513: 074238     DEBUG116237[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo|

20190513: 074238     DEBUG116376[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ?
Argument(s): |0004102502505|
20190513: 074238     DEBUG116378[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1a85d38
20190513: 074238     DEBUG116657[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:10075) - NETWORK PARAMS: OPTION: ALL NETWORK ID:  NETWORKID.LENGTH: 0
20190513: 074238     DEBUG116657[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VstServiceTypes )
20190513: 074238     DEBUG116657[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractBLO.get(VstServiceTypesAbstractBLO.java:595) - get( filter )
20190513: 074238     DEBUG116657[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractDACImpl.get(VstServiceTypesAbstractDACImpl.java:540) - get( filter )
20190513: 074238     DEBUG116658[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VstServiceTypes|0|equalVstServiceType|

20190513: 074238     DEBUG116797[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VstServiceTypes
Execute SQL Statement: SELECT VST_SERVICE_TYPE, VST_SERVICE_DESC, VST_MULTI_CHARGE, VST_SERVICE_CLASS, VST_AUTO_CONNECT, VST_ORIGINATOR, VST_TARIFF_RELATED, VST_PARAMETERISED, VST_PARAMS_LEVEL, VST_ARCHIVE_MONTHS, VST_FUTURE_ACT, VST_NODE_LEVEL
FROM VST_SERVICE_TYPES
WHERE VST_SERVICE_TYPE = ?
Argument(s): |SW|
20190513: 074238     DEBUG116798[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@8046f4
20190513: 074239     DEBUG117077[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1b273cc
20190513: 074239     DEBUG117218[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcdEventCmdDet )
20190513: 074239     DEBUG117218[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.create(EcdEventCmdDetAbstractBLO.java:184) - create( ecdEventCmdDetDMO )
20190513: 074239     DEBUG117218[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.exists(EcdEventCmdDetAbstractBLO.java:411) - exists(ecdEventCmdDet)
20190513: 074239     DEBUG117219[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.exists(EcdEventCmdDetAbstractDACImpl.java:236) - exists( EcdEventCmdDetDMO)
20190513: 074239     DEBUG117219[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|9|filterByPrimaryKey|

20190513: 074239     DEBUG117358[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: EcdEventCmdDet
Execute SQL Statement: SELECT DISTINCT(0)
FROM ECD_EVENT_CMD_DET
WHERE (ECD_COMMAND) = ? AND  ECD_SEQNO = ?
Argument(s): |201905130742107 |2|
20190513: 074239     DEBUG117638[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.create(EcdEventCmdDetAbstractDACImpl.java:100) - create( ecdEventCmdDetDMO )
20190513: 074239     DEBUG117638[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|11||

20190513: 074239     DEBUG117638[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 201905130742107 |2|DET|| |2019-05-13 07:42:39
20190513: 074240     DEBUG118169[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: EcdEventCmdDet
Execute SQL Statement: INSERT INTO ECD_EVENT_CMD_DET (ECD_COMMAND, ECD_SEQNO, ECD_DET_TYPE, ECD_TEXT, ECD_FLAG, ECD_TIMESTAMP) VALUES (?,?,?,?,?,?)
Argument(s): |201905130742107 |2|DET|| |2019-05-13 07:42:39|
20190513: 074240     DEBUG118171[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createN2NDetailSegment(SubscriberUpgradeMigradeBLO.java:34849) - COMMAND: 201905130742107 SEQ NO: 2 ECD DETAILS: [MODIFY],SIM_RELATED_SERVICE=AMR500,
20190513: 074240     DEBUG118172[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcdEventCmdDet )
20190513: 074240     DEBUG118172[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.count(EcdEventCmdDetAbstractBLO.java:599) - count( filter )
20190513: 074240     DEBUG118172[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.count(EcdEventCmdDetAbstractDACImpl.java:518) - count( filter )
20190513: 074240     DEBUG118172[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|10|equalEcdCommand+EcdTextMatch|

20190513: 074240     DEBUG118640[main] - com.eppixcomm.eppix.common.data.DAOImpl.count(DAOImpl.java:1162) - count(param SQL): DML Name: EcdEventCmdDet
Execute SQL Statement: SELECT COUNT(*)
FROM ECD_EVENT_CMD_DET
WHERE (ECD_COMMAND) = ? AND ECD_TEXT LIKE ?
Argument(s): |201905130742107|%[SERVICE_REQUEST_TRAILER]%|
20190513: 074240     DEBUG118781[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.insertEcd(SubscriberUpgradeMigradeBLO.java:31199) - 
COUNT: 0
20190513: 074240     DEBUG118781[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcdEventCmdDet )
20190513: 074240     DEBUG118781[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.count(EcdEventCmdDetAbstractBLO.java:599) - count( filter )
20190513: 074240     DEBUG118781[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.count(EcdEventCmdDetAbstractDACImpl.java:518) - count( filter )
20190513: 074240     DEBUG118781[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|10|equalEcdCommand|

20190513: 074241     DEBUG119221[main] - com.eppixcomm.eppix.common.data.DAOImpl.count(DAOImpl.java:1162) - count(param SQL): DML Name: EcdEventCmdDet
Execute SQL Statement: SELECT COUNT(*)
FROM ECD_EVENT_CMD_DET
WHERE (ECD_COMMAND) = ?
Argument(s): |201905130742107|
20190513: 074241     DEBUG119362[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.insertEcd(SubscriberUpgradeMigradeBLO.java:31239) - 
COUNT: 2
20190513: 074241     DEBUG119362[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcdEventCmdDet )
20190513: 074241     DEBUG119362[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.create(EcdEventCmdDetAbstractBLO.java:184) - create( ecdEventCmdDetDMO )
20190513: 074241     DEBUG119362[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.exists(EcdEventCmdDetAbstractBLO.java:411) - exists(ecdEventCmdDet)
20190513: 074241     DEBUG119364[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.exists(EcdEventCmdDetAbstractDACImpl.java:236) - exists( EcdEventCmdDetDMO)
20190513: 074241     DEBUG119364[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|9|filterByPrimaryKey|

20190513: 074241     DEBUG119502[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: EcdEventCmdDet
Execute SQL Statement: SELECT DISTINCT(0)
FROM ECD_EVENT_CMD_DET
WHERE (ECD_COMMAND) = ? AND  ECD_SEQNO = ?
Argument(s): |201905130742107 |3|
20190513: 074241     DEBUG119762[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.create(EcdEventCmdDetAbstractDACImpl.java:100) - create( ecdEventCmdDetDMO )
20190513: 074241     DEBUG119762[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|11||

20190513: 074241     DEBUG119762[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 201905130742107 |3|DET|| |2019-05-13 07:42:41
20190513: 074242     DEBUG120223[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: EcdEventCmdDet
Execute SQL Statement: INSERT INTO ECD_EVENT_CMD_DET (ECD_COMMAND, ECD_SEQNO, ECD_DET_TYPE, ECD_TEXT, ECD_FLAG, ECD_TIMESTAMP) VALUES (?,?,?,?,?,?)
Argument(s): |201905130742107 |3|DET|| |2019-05-13 07:42:41|
20190513: 074242     DEBUG120224[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EqEventQueue )
20190513: 074242     DEBUG120224[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getEqEventQueueDAC(BaseDACFactory.java:119) - getEqEventQueueDAC()
20190513: 074242     DEBUG120282[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.EqEventQueueDACImpl com.eppixcomm.eppix.base.dml.EqEventQueueDMLFactory@47a0d4
20190513: 074242     DEBUG120282[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.EqEventQueueDACImpl
20190513: 074242     DEBUG120284[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 074242     DEBUG120284[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.EqEventQueueDACImpl TO MAP
20190513: 074242     DEBUG120284[main] - com.eppixcomm.eppix.base.blo.EqEventQueueAbstractBLO.count(EqEventQueueAbstractBLO.java:379) - count( filter )
20190513: 074242     DEBUG120284[main] - com.eppixcomm.eppix.base.blo.EqEventQueueAbstractDACImpl.count(EqEventQueueAbstractDACImpl.java:429) - count( filter )
20190513: 074242     DEBUG120284[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EqEventQueue|10|equalEqCommand|

20190513: 074242     DEBUG120724[main] - com.eppixcomm.eppix.common.data.DAOImpl.count(DAOImpl.java:1162) - count(param SQL): DML Name: EqEventQueue
Execute SQL Statement: SELECT COUNT(*)
FROM EQ_EVENT_QUEUE
WHERE (EQ_COMMAND) = ?
Argument(s): |201905130742107|
20190513: 074242     DEBUG120864[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EqEventQueue )
20190513: 074242     DEBUG120864[main] - com.eppixcomm.eppix.base.blo.EqEventQueueAbstractBLO.create(EqEventQueueAbstractBLO.java:121) - create( eqEventQueueDMO )
20190513: 074242     DEBUG120864[main] - com.eppixcomm.eppix.base.blo.EqEventQueueAbstractDACImpl.create(EqEventQueueAbstractDACImpl.java:83) - create( eqEventQueueDMO )
20190513: 074242     DEBUG120864[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EqEventQueue|11||

20190513: 074242     DEBUG121025[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 201905130742107 |MODIFY_SERVICES               |83   |5
20190513: 074243     DEBUG121336[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: EqEventQueue
Execute SQL Statement: INSERT INTO EQ_EVENT_QUEUE (EQ_COMMAND, EQ_MESSAGE, EQ_NETWORK, EQ_PRIORITY) VALUES (?,?,?,?)
Argument(s): |201905130742107 |MODIFY_SERVICES               |83   |5|
20190513: 075657     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:150) - loading appProperties
20190513: 075657     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:157) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190513: 075657     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:170) - DB Connection start
20190513: 075657     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:173) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190513: 075658     DEBUG  1012[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190513: 075658     DEBUG  1013[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190513: 075658     DEBUG  1014[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190513: 075658     DEBUG  1014[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190513: 075658     DEBUG  1035[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190513: 075658     DEBUG  1042[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@1b8f864
20190513: 075658     DEBUG  1044[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190513: 075658     DEBUG  1068[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075658     DEBUG  1068[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190513: 075658     DEBUG  1070[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 075658     DEBUG  1072[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190513: 075658     DEBUG  1074[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@3e89c3
20190513: 075658     DEBUG  1074[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190513: 075658     DEBUG  1075[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075658     DEBUG  1075[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190513: 075658     DEBUG  1076[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190513: 075658     DEBUG  1078[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190513: 075658     DEBUG  1079[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1bc82e7
20190513: 075658     DEBUG  1080[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190513: 075658     DEBUG  1081[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075658     DEBUG  1081[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190513: 075658     DEBUG  1082[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190513: 075658     DEBUG  1085[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190513: 075658     DEBUG  1086[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@140c281
20190513: 075658     DEBUG  1087[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190513: 075658     DEBUG  1087[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075658     DEBUG  1087[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190513: 075658     DEBUG  1088[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 075658     DEBUG  1096[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 075658     DEBUG  1266[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190513: 075658     DEBUG  1272[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@162dbb6
20190513: 075658     DEBUG  1272[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190513: 075658     DEBUG  1278[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075658     DEBUG  1278[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190513: 075658     DEBUG  1278[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 075658     DEBUG  1278[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190513: 075658     DEBUG  1279[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 075658     DEBUG  1279[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 075658     DEBUG  1279[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:200) - DB Connection successfull
20190513: 075658     DEBUG  1279[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1379) - 
Integer subscriberID: 607878
String msisdn: null
String serviceCode: APNA
String partnerId: null
20190513: 075658     DEBUG  1282[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 075658     DEBUG  1350[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbdSubDetsDAC(BaseAbstractDACFactory.java:234) - getSbdSubDetsDAC()
20190513: 075658     DEBUG  1359[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl com.eppixcomm.eppix.base.dml.SbdSubDetsAbstractDMLFactory@1d0fafc
20190513: 075658     DEBUG  1359[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl
20190513: 075658     DEBUG  1361[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075658     DEBUG  1361[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl TO MAP
20190513: 075658     DEBUG  1361[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 075658     DEBUG  1361[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 075658     DEBUG  1367[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 075659     DEBUG  2361[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 075659     DEBUG  2364[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@961dff
20190513: 075700     DEBUG  2644[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 075700     DEBUG  2645[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190513: 075700     DEBUG  2655[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@8ee016
20190513: 075700     DEBUG  2655[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190513: 075700     DEBUG  2658[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075700     DEBUG  2658[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190513: 075700     DEBUG  2658[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190513: 075700     DEBUG  2659[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190513: 075700     DEBUG  2661[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190513: 075701     DEBUG  3582[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 075701     DEBUG  3590[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@3c0007
20190513: 075701     DEBUG  3743[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190513: 075701     DEBUG  3744[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVasActiveServiceDAC(BaseAbstractDACFactory.java:1177) - getVasActiveServiceDAC()
20190513: 075701     DEBUG  3748[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl com.eppixcomm.eppix.base.dml.VasActiveServiceDMLFactory@17e121c
20190513: 075701     DEBUG  3749[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl
20190513: 075701     DEBUG  3751[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075701     DEBUG  3751[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl TO MAP
20190513: 075701     DEBUG  3751[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190513: 075701     DEBUG  3751[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190513: 075701     DEBUG  3752[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode|

20190513: 075701     DEBUG  4342[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ? 
Argument(s): |607878|APNA|
20190513: 075702     DEBUG  4685[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TsTariffService )
20190513: 075702     DEBUG  4685[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getTsTariffServiceDAC(BaseDACFactory.java:287) - getTsTariffServiceDAC()
20190513: 075702     DEBUG  4690[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl com.eppixcomm.eppix.base.dml.TsTariffServiceAbstractDMLFactory@4ecfdd
20190513: 075702     DEBUG  4690[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl
20190513: 075702     DEBUG  4692[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075702     DEBUG  4692[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl TO MAP
20190513: 075702     DEBUG  4692[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractBLO.get(TsTariffServiceAbstractBLO.java:593) - get( filter )
20190513: 075702     DEBUG  4692[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractDACImpl.get(TsTariffServiceAbstractDACImpl.java:589) - get( filter )
20190513: 075702     DEBUG  4693[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TsTariffService|0|equalTsServiceCode+equalTsPackageCode+equalTsInternalTariff|

20190513: 075703     DEBUG  5743[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TsTariffService
Execute SQL Statement: SELECT TS_PACKAGE_CODE, TS_INTERNAL_TARIFF, TS_SERVICE_CODE, TS_NET_SERV_CODE, TS_ACT_CHARGE, TS_TDEACT_CHARGE, TS_REACT_CHARGE, TS_PDEACT_CHARGE, TS_SUB_CHARGE1, TS_SUB_CHARGE2, TS_SUB_CHARGE3, TS_CHARGE_PERIOD, TS_CHARGE_FREQ, TS_DISCOUNT_REF, TS_ACT_INCLUSIVE
FROM TS_TARIFF_SERVICE
WHERE (TS_SERVICE_CODE) = ? AND (TS_PACKAGE_CODE) = ? AND (TS_INTERNAL_TARIFF) = ?
Argument(s): |APNA|500FF|ASKYL36M|
20190513: 075703     DEBUG  5744[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@13d28e3
20190513: 075703     DEBUG  6023[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getServRuleVas
20190513: 075703     DEBUG  6024[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getServRuleVas|0||

20190513: 075704     DEBUG  6583[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getServRuleVas
Execute SQL Statement: SELECT count(*) FROM svr_serv_rule, vas_active_service WHERE svr_serv_type = 'E' AND svr_target_serv = vas_service_code AND svr_primary_serv = ? AND vas_subscriber_id =? 
Argument(s): |APNA|607878|
20190513: 075704     DEBUG  6585[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@164dbd5
20190513: 075704     DEBUG  6863[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 075704     DEBUG  6865[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 075704     DEBUG  6866[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 075704     DEBUG  6866[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 075704     DEBUG  7063[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 075704     DEBUG  7064[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@f42ad0
20190513: 075704     DEBUG  7324[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbaSubAux )
20190513: 075704     DEBUG  7324[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbaSubAuxDAC(BaseAbstractDACFactory.java:995) - getSbaSubAuxDAC()
20190513: 075704     DEBUG  7333[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbaSubAuxDACImpl com.eppixcomm.eppix.base.dml.SbaSubAuxDMLFactory@50988
20190513: 075704     DEBUG  7333[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbaSubAuxDACImpl
20190513: 075704     DEBUG  7336[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075704     DEBUG  7336[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbaSubAuxDACImpl TO MAP
20190513: 075704     DEBUG  7336[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractBLO.get(SbaSubAuxAbstractBLO.java:283) - get( filter )
20190513: 075704     DEBUG  7336[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractDACImpl.get(SbaSubAuxAbstractDACImpl.java:101) - get( filter )
20190513: 075704     DEBUG  7337[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbaSubAux|0|equalSbaSubscriberId|

20190513: 075706     DEBUG  8544[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbaSubAux
Execute SQL Statement: SELECT SBA_SUBSCRIBER_ID, SBA_ID_NUMBER, SBA_MATCHCODE, SBA_MARKETING, SBA_THIRD_PARTY, SBA_CUST_DEPT, SBA_DEALER_ID, SBA_DEPARTMENT, SBA_SALESMAN, SBA_REGION, SBA_INVOICE_ADDRID, SBA_INV_ACCOUNT, SBA_PREPAID_STAT, SBA_ANALYSIS_1, SBA_ANALYSIS_2, SBA_ANALYSIS_3, SBA_ANALYSIS_4, SBA_ANALYSIS_5, SBA_ANALYSIS_6, SBA_ANALYSIS_7, SBA_ANALYSIS_8, SBA_ANALYSIS_9, SBA_ANALYSIS_10, SBA_ANALYSIS_11, SBA_ANALYSIS_12, SBA_ANALYSIS_13, SBA_ANALYSIS_14, SBA_ANALYSIS_15, SBA_ANALYSIS_16, SBA_ANALYSIS_17, SBA_ANALYSIS_18, SBA_ANALYSIS_19, SBA_ANALYSIS_20, SBA_ANALYSIS_21, SBA_ANALYSIS_22, SBA_ANALYSIS_23, SBA_ANALYSIS_24, SBA_ANALYSIS_25, SBA_ANALYSIS_26, SBA_ANALYSIS_27, SBA_ANALYSIS_28, SBA_ANALYSIS_29, SBA_ANALYSIS_30,SBA_COMMENTS
FROM SBA_SUB_AUX
WHERE SBA_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 075706     DEBUG  8545[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@2200d5
20190513: 075706     DEBUG  8924[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd1
20190513: 075706     DEBUG  8924[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd1|0||

20190513: 075707     DEBUG  9883[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd1
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |P|500FF||||
20190513: 075707     DEBUG 10164[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd1
20190513: 075707     DEBUG 10164[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd1|0||

20190513: 075707     DEBUG 10323[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd1
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |T|ASKYL36M||||
20190513: 075708     DEBUG 10563[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd1
20190513: 075708     DEBUG 10564[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd1|0||

20190513: 075708     DEBUG 10705[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd1
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |S|APNA||||
20190513: 075708     DEBUG 10944[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd3
20190513: 075708     DEBUG 10945[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd3|0||

20190513: 075709     DEBUG 11624[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd3
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND ur_right_id IN  (SELECT ur2.ur_right_id FROM ur_user_restrict ur2  WHERE ur_type = ?  AND ur_code = ?  AND ur1.ur_group_id = ur2.ur_group_id  AND ur_right_id IN  (SELECT ur3.ur_right_id FROM ur_user_restrict ur3  WHERE ur_type = ?  AND ur_code = ?  AND ur1.ur_group_id = ur3.ur_group_id))  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |P3|500FF|S3|APNA|T3|ASKYL36M||||
20190513: 075709     DEBUG 11925[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190513: 075709     DEBUG 11926[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSmnSimNosDAC(BaseAbstractDACFactory.java:387) - getSmnSimNosDAC()
20190513: 075709     DEBUG 11930[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SmnSimNosDACImpl com.eppixcomm.eppix.base.dml.SmnSimNosDMLFactory@453807
20190513: 075709     DEBUG 11930[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SmnSimNosDACImpl
20190513: 075709     DEBUG 11932[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075709     DEBUG 11932[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SmnSimNosDACImpl TO MAP
20190513: 075709     DEBUG 11932[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190513: 075709     DEBUG 11934[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190513: 075709     DEBUG 11936[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo|

20190513: 075710     DEBUG 13285[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ?
Argument(s): |0004102502505|
20190513: 075710     DEBUG 13288[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@4fc156
20190513: 075711     DEBUG 13555[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9355) - 
=======================================================================================
PARAM OPTION: ACTIVE
PARAM SIM NO: 0004102502505
PARAM NETWORK ID: 
PARAM HLR: 
PARAM DEALER ID: 
PARAM CUSTOMER: 
=======================================================================================
20190513: 075711     DEBUG 13556[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SacSimAssignCus )
20190513: 075711     DEBUG 13557[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSacSimAssignCusDAC(BaseAbstractDACFactory.java:1345) - getSacSimAssignCusDAC()
20190513: 075711     DEBUG 13559[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SacSimAssignCusDACImpl com.eppixcomm.eppix.base.dml.SacSimAssignCusDMLFactory@633e5e
20190513: 075711     DEBUG 13559[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SacSimAssignCusDACImpl
20190513: 075711     DEBUG 13560[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075711     DEBUG 13560[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SacSimAssignCusDACImpl TO MAP
20190513: 075711     DEBUG 13560[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractBLO.get(SacSimAssignCusAbstractBLO.java:287) - get( filter )
20190513: 075711     DEBUG 13560[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractDACImpl.get(SacSimAssignCusAbstractDACImpl.java:205) - get( filter )
20190513: 075711     DEBUG 13561[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SacSimAssignCus|0|equalSacSimNo|

20190513: 075711     DEBUG 13865[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SacSimAssignCus
Execute SQL Statement: SELECT SAC_BILL_AC_NO, SAC_SIM_NO 
FROM sac_sim_assign_cus
WHERE SAC_SIM_NO = ? 
Argument(s): |0004102502505|
20190513: 075711      INFO 14005[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9984) - Passed customer no  not found in Sac_Sim_assign_cus
20190513: 075711     DEBUG 14005[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190513: 075711     DEBUG 14005[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190513: 075711     DEBUG 14005[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190513: 075711     DEBUG 14005[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo+equalSmnStatus|

20190513: 075711     DEBUG 14226[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ? AND SMN_STATUS = ?
Argument(s): |0004102502505|1|
20190513: 075711     DEBUG 14226[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@888e6c
20190513: 075711     DEBUG 14345[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:10075) - NETWORK PARAMS: OPTION: ACTIVE NETWORK ID:  NETWORKID.LENGTH: 0
20190513: 075711     DEBUG 14345[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5665) - 
STEP 1
20190513: 075711     DEBUG 14345[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5684) - 
STEP 3
20190513: 075711     DEBUG 14345[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5689) - 
STEP 4
20190513: 075711     DEBUG 14346[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5691) - BASE: com.eppixcomm.eppix.base.blo.BaseBLOBinder@13e58d4
20190513: 075711     DEBUG 14347[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsrService )
20190513: 075711     DEBUG 14347[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVsrServiceDAC(BaseAbstractDACFactory.java:486) - getVsrServiceDAC()
20190513: 075711     DEBUG 14353[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VsrServiceDACImpl com.eppixcomm.eppix.base.dml.VsrServiceDMLFactory@32784a
20190513: 075711     DEBUG 14353[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VsrServiceDACImpl
20190513: 075711     DEBUG 14355[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075711     DEBUG 14355[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VsrServiceDACImpl TO MAP
20190513: 075711     DEBUG 14355[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractBLO.get(VsrServiceAbstractBLO.java:576) - get( filter )
20190513: 075711     DEBUG 14355[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractDACImpl.get(VsrServiceAbstractDACImpl.java:517) - get( filter )
20190513: 075711     DEBUG 14356[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsrService|0|equalVsrServiceCode|

20190513: 075712     DEBUG 14545[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VsrService
Execute SQL Statement: SELECT VSR_SERVICE_CODE, VSR_SERVICE_TYPE, VSR_SERVICE_DESC, VSR_ORIGINATOR, VSR_SERVICE_CLASS, VSR_TEMP_DEACT, VSR_PRORATA, VSR_PROVIDER_ID, VSR_SHORT_DESC, VSR_SUSPEND
FROM VSR_SERVICE
WHERE VSR_SERVICE_CODE = ?
Argument(s): |APNA|
20190513: 075712     DEBUG 14546[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@104c575
20190513: 075712     DEBUG 14664[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5695) - 
STEP 5
20190513: 075712     DEBUG 14665[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190513: 075712     DEBUG 14666[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSksKeySettingDAC(BaseAbstractDACFactory.java:314) - getSksKeySettingDAC()
20190513: 075712     DEBUG 14670[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SksKeySettingDACImpl com.eppixcomm.eppix.base.dml.SksKeySettingAbstractDMLFactory@11ff436
20190513: 075712     DEBUG 14670[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SksKeySettingDACImpl
20190513: 075712     DEBUG 14672[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075712     DEBUG 14672[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SksKeySettingDACImpl TO MAP
20190513: 075712     DEBUG 14672[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190513: 075712     DEBUG 14672[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190513: 075712     DEBUG 14672[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190513: 075712     DEBUG 14884[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |PRTNSRVTYP|
20190513: 075712     DEBUG 14886[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@11dba45
20190513: 075712     DEBUG 15005[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VpsPackageServ )
20190513: 075712     DEBUG 15006[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVpsPackageServDAC(BaseAbstractDACFactory.java:473) - getVpsPackageServDAC()
20190513: 075712     DEBUG 15008[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VpsPackageServDACImpl com.eppixcomm.eppix.base.dml.VpsPackageServDMLFactory@8238f4
20190513: 075712     DEBUG 15008[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VpsPackageServDACImpl
20190513: 075712     DEBUG 15012[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075712     DEBUG 15012[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VpsPackageServDACImpl TO MAP
20190513: 075712     DEBUG 15012[main] - com.eppixcomm.eppix.base.blo.VpsPackageServAbstractBLO.get(VpsPackageServAbstractBLO.java:570) - get( filter )
20190513: 075712     DEBUG 15012[main] - com.eppixcomm.eppix.base.blo.VpsPackageServAbstractDACImpl.get(VpsPackageServAbstractDACImpl.java:489) - get( filter )
20190513: 075712     DEBUG 15013[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VpsPackageServ|0|equalVpsPackageCode+equalVpsServiceCode|

20190513: 075712     DEBUG 15303[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VpsPackageServ
Execute SQL Statement: SELECT VPS_PACKAGE_CODE, VPS_SERVICE_CODE, VPS_ALTER_CHARGE, VPS_MULTI_CHARGE, VPS_CHANGE_MULTI, VPS_PRICE_BY_TARIF, VPS_AUTO_CONNECT
FROM VPS_PACKAGE_SERV
WHERE (VPS_PACKAGE_CODE) = ? AND (VPS_SERVICE_CODE) = ?
Argument(s): |500FF|APNA|
20190513: 075712     DEBUG 15303[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1326484
20190513: 075713     DEBUG 15483[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TsTariffService )
20190513: 075713     DEBUG 15483[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractBLO.get(TsTariffServiceAbstractBLO.java:593) - get( filter )
20190513: 075713     DEBUG 15483[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractDACImpl.get(TsTariffServiceAbstractDACImpl.java:589) - get( filter )
20190513: 075713     DEBUG 15483[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TsTariffService|0|equalTsPackageCode+equalTsServiceCode+equalornullTsInternalTariff|

20190513: 075713     DEBUG 15773[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TsTariffService
Execute SQL Statement: SELECT TS_PACKAGE_CODE, TS_INTERNAL_TARIFF, TS_SERVICE_CODE, TS_NET_SERV_CODE, TS_ACT_CHARGE, TS_TDEACT_CHARGE, TS_REACT_CHARGE, TS_PDEACT_CHARGE, TS_SUB_CHARGE1, TS_SUB_CHARGE2, TS_SUB_CHARGE3, TS_CHARGE_PERIOD, TS_CHARGE_FREQ, TS_DISCOUNT_REF, TS_ACT_INCLUSIVE
FROM TS_TARIFF_SERVICE
WHERE (TS_PACKAGE_CODE) = ? AND (TS_SERVICE_CODE) = ? AND ((TS_INTERNAL_TARIFF) = ? OR TS_INTERNAL_TARIFF IS NULL)
Argument(s): |500FF|APNA|ASKYL36M|
20190513: 075713     DEBUG 15773[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@16546ef
20190513: 075713     DEBUG 15913[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VstServiceTypes )
20190513: 075713     DEBUG 15913[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVstServiceTypesDAC(BaseAbstractDACFactory.java:499) - getVstServiceTypesDAC()
20190513: 075713     DEBUG 15916[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VstServiceTypesDACImpl com.eppixcomm.eppix.base.dml.VstServiceTypesDMLFactory@acb158
20190513: 075713     DEBUG 15916[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VstServiceTypesDACImpl
20190513: 075713     DEBUG 15918[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075713     DEBUG 15918[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VstServiceTypesDACImpl TO MAP
20190513: 075713     DEBUG 15918[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractBLO.get(VstServiceTypesAbstractBLO.java:595) - get( filter )
20190513: 075713     DEBUG 15918[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractDACImpl.get(VstServiceTypesAbstractDACImpl.java:540) - get( filter )
20190513: 075713     DEBUG 15919[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VstServiceTypes|0|equalVstServiceType|

20190513: 075713     DEBUG 16152[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VstServiceTypes
Execute SQL Statement: SELECT VST_SERVICE_TYPE, VST_SERVICE_DESC, VST_MULTI_CHARGE, VST_SERVICE_CLASS, VST_AUTO_CONNECT, VST_ORIGINATOR, VST_TARIFF_RELATED, VST_PARAMETERISED, VST_PARAMS_LEVEL, VST_ARCHIVE_MONTHS, VST_FUTURE_ACT, VST_NODE_LEVEL
FROM VST_SERVICE_TYPES
WHERE VST_SERVICE_TYPE = ?
Argument(s): |AP|
20190513: 075713     DEBUG 16152[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@17431b9
20190513: 075713      INFO 16272[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getServiceType(SubscriberUpgradeMigradeBLO.java:12935) - FOUND Service type from VST for AP
20190513: 075713     DEBUG 16272[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getMinVamConnectDate
20190513: 075713     DEBUG 16273[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getMinVamConnectDate|0||

20190513: 075714     DEBUG 16461[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getMinVamConnectDate
Execute SQL Statement: SELECT MIN((VAM_CONNECT_DATE)) FROM VAM_ACTIVE_MSISDN  WHERE VAM_SUBSCRIBER_ID = ?  AND VAM_STAT_CODE IN ( 1 , 4 )
Argument(s): |607878|
20190513: 075714     DEBUG 16462[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@c837cd
20190513: 075714     DEBUG 16582[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NmNetmat )
20190513: 075714     DEBUG 16582[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getNmNetmatDAC(BaseAbstractDACFactory.java:167) - getNmNetmatDAC()
20190513: 075714     DEBUG 16585[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.NmNetmatDACImpl com.eppixcomm.eppix.base.dml.NmNetmatDMLFactory@384065
20190513: 075714     DEBUG 16585[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.NmNetmatDACImpl
20190513: 075714     DEBUG 16587[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075714     DEBUG 16587[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.NmNetmatDACImpl TO MAP
20190513: 075714     DEBUG 16587[main] - com.eppixcomm.eppix.base.blo.NmNetmatAbstractBLO.get(NmNetmatAbstractBLO.java:527) - get( filter )
20190513: 075714     DEBUG 16587[main] - com.eppixcomm.eppix.base.blo.NmNetmatAbstractDACImpl.get(NmNetmatAbstractDACImpl.java:501) - get( filter )
20190513: 075714     DEBUG 16590[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NmNetmat|0|equalNmInternalTariff|

20190513: 075714     DEBUG 16860[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: NmNetmat
Execute SQL Statement: SELECT NM_INTERNAL_TARIFF, NM_NETWORK_TARIFF, NM_CONTRACT_PERIOD, NM_NTWRK_CONTR_PER, NM_MIN_CANC_PERIOD, NM_HIGHER_MIG_TYPE, NM_LOWER_MIG_TYPE, NM_SAME_MIG_TYPE, NM_NETWORK_ID, NM_NET_TYPE 
FROM nm_netmat
WHERE NM_INTERNAL_TARIFF = ? 
Argument(s): |ASKYL36M|
20190513: 075714     DEBUG 16860[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@194d372
20190513: 075714     DEBUG 17080[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: serviceExistsOnSim
20190513: 075714     DEBUG 17080[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
serviceExistsOnSim|0||

20190513: 075714     DEBUG 17271[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: serviceExistsOnSim
Execute SQL Statement: SELECT UNIQUE(0) FROM vam_active_msisdn, vsm_service_msisdn  WHERE vam_msisdn_no = vsm_msisdn_no AND vam_sim_no = ? AND vsm_service_code = ? 
Argument(s): |0004102502505|APNA|
20190513: 075714     DEBUG 17271[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1c5fde0
20190513: 075715     ERROR 17429[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65083) - Service exist on SIM: 0004102502505 and Service Code: APNA
20190513: 075715     DEBUG 17429[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190513: 075715     DEBUG 17429[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190513: 075715     DEBUG 17429[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190513: 075715     DEBUG 17429[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190513: 075715     DEBUG 17500[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |VRSERVICE|
20190513: 075715     DEBUG 17501[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@19e8329
20190513: 075715     DEBUG 17619[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190513: 075715     DEBUG 17622[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190513: 075715     DEBUG 17622[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190513: 075715     DEBUG 17622[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode+equalornullVasInternTariff|

20190513: 075715     DEBUG 17818[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ?  AND (VAS_INTERN_TARIFF = ? OR VAS_INTERN_TARIFF IS NULL) 
Argument(s): |607878|APNA|ASKYL36M|
20190513: 075715     ERROR 17938[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSubscriberService(SubscriberUpgradeMigradeBLO.java:5772) - Cannot SELECT subscriber service details from table vas_active_service for subscriber 607878 Service: APNA Tariff: ASKYL36M
20190513: 075715     DEBUG 17938[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65186) - 1 Before VAS create
20190513: 075715     DEBUG 17938[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65188) - 1A Before VAS createAP
20190513: 075715     DEBUG 17938[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65191) - 
Subscriber: 607878
connect_date: 2019-05-13
sub charge 1: null
sub charge 2: 
sub charge 3: 
multiCharge: N
tariff: ASKYL36M
20190513: 075715     DEBUG 17938[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65197) - VST TARIFF RELATED: Y
20190513: 075715     DEBUG 17938[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65217) - INSIDE TARIFF RELATED = 
20190513: 075715     DEBUG 17939[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65220) - 2 Before VAS create
20190513: 075715     DEBUG 17939[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
createVas|12||

20190513: 075715     DEBUG 18258[main] - com.eppixcomm.eppix.common.data.DAOImpl.execute(DAOImpl.java:3581) - execute(static SQL): DML Name: createVas
Execute SQL Statement: INSERT INTO VAS_ACTIVE_SERVICE (VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE)VALUES (?,?,?,?,?,?,?,?,?,?,?)
Argument(s): |607878|APNA|ASKYL36M|AP|2019-05-13|||||0|N|
20190513: 075715     DEBUG 18258[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getVasBillLimitByMsisdnTariff
20190513: 075715     DEBUG 18258[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getVasBillLimitByMsisdnTariff|0||

20190513: 075716     DEBUG 18537[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getVasBillLimitByMsisdnTariff
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE, VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE  FROM vas_active_service, vam_active_msisdn  WHERE vas_service_code = ?  AND vam_msisdn_no = ?  AND vas_subscriber_id = vam_subscriber_id  AND (vas_intern_tariff = ?  OR vas_intern_tariff IS NULL)
Argument(s): |APNA|833819663|ASKYL36M|
20190513: 075716     DEBUG 18537[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@f9c40
20190513: 075716     ERROR 18767[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65288) - Failed to get twinbill
20190513: 075716     DEBUG 18768[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 075716     DEBUG 18768[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190513: 075716     DEBUG 18768[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190513: 075716     DEBUG 18768[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId+equalVamSimNo+INVamStatCode_2|VamHierarchyasc,VamMsisdnKnownasc

20190513: 075716     DEBUG 19196[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ? AND (VAM_SIM_NO) = ? AND VAM_STAT_CODE IN ( ? , ? ) ORDER BY VAM_HIERARCHY ASC,VAM_MSISDN_KNOWN ASC
Argument(s): |607878|0004102502505|1|4|
20190513: 075716     DEBUG 19197[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@db4fa2
20190513: 075716     DEBUG 19266[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 075716     DEBUG 19266[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 075716     DEBUG 19267[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 075716     DEBUG 19267[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 075716     DEBUG 19348[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 075716     DEBUG 19349[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1e0f2f6
20190513: 075717     DEBUG 19485[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190513: 075717     DEBUG 19485[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190513: 075717     DEBUG 19485[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190513: 075717     DEBUG 19485[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190513: 075717     DEBUG 19554[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |PRESTIGSVC|
20190513: 075717     DEBUG 19555[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@16f25a7
20190513: 075717     DEBUG 19694[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190513: 075717     DEBUG 19695[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190513: 075717     DEBUG 19695[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190513: 075717     DEBUG 19695[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode+equalornullVasInternTariff|

20190513: 075717     DEBUG 19784[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ?  AND (VAS_INTERN_TARIFF = ? OR VAS_INTERN_TARIFF IS NULL) 
Argument(s): |607878|PRST|ASKYL36M|
20190513: 075717     ERROR 19983[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.checkPrestigeSubscriber(SubscriberUpgradeMigradeBLO.java:9068) - Failed to get VAS records for subscriber: 607878 old service: ASKYL36M old tariff: PRST
20190513: 075717     DEBUG 19985[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsmServiceMsisdn )
20190513: 075717     DEBUG 19986[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVsmServiceMsisdnDAC(BaseDACFactory.java:271) - getVsmServiceMsisdnDAC()
20190513: 075717     DEBUG 19989[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VsmServiceMsisdnDACImpl com.eppixcomm.eppix.base.dml.VsmServiceMsisdnAbstractDMLFactory@11e0c13
20190513: 075717     DEBUG 19991[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VsmServiceMsisdnDACImpl
20190513: 075717     DEBUG 19992[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075717     DEBUG 19992[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VsmServiceMsisdnDACImpl TO MAP
20190513: 075717     DEBUG 19992[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractBLO.create(VsmServiceMsisdnAbstractBLO.java:209) - create( vsmServiceMsisdnDMO )
20190513: 075717     DEBUG 19992[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractBLO.exists(VsmServiceMsisdnAbstractBLO.java:453) - exists(vsmServiceMsisdn)
20190513: 075717     DEBUG 19992[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractDACImpl.exists(VsmServiceMsisdnAbstractDACImpl.java:249) - exists( VsmServiceMsisdnDMO)
20190513: 075717     DEBUG 19992[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsmServiceMsisdn|9|filterByPrimaryKey|

20190513: 075717     DEBUG 20294[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: VsmServiceMsisdn
Execute SQL Statement: SELECT DISTINCT(0)
FROM VSM_SERVICE_MSISDN
WHERE VSM_SUBSCRIBER_ID = ? AND  VSM_SERVICE_CODE = ? AND  VSM_MSISDN_NO = ?
Argument(s): |607878|APNA|833819663|
20190513: 075717      INFO 20368[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:156) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: vsmServiceMsisdnDMO does exist
20190513: 075717     ERROR 20369[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65386) - Exception inserting new VSM record for subscriber: 607878 EXCEPTION: com.eppixcomm.eppix.base.error.EPPIXBusinessException: vsmServiceMsisdnDMO does exist
20190513: 075717     DEBUG 20371[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.MshMsisdnHistory )
20190513: 075717     DEBUG 20371[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getMshMsisdnHistoryDAC(BaseAbstractDACFactory.java:762) - getMshMsisdnHistoryDAC()
20190513: 075717     DEBUG 20374[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.MshMsisdnHistoryDACImpl com.eppixcomm.eppix.base.dml.MshMsisdnHistoryDMLFactory@1d2b01b
20190513: 075717     DEBUG 20376[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.MshMsisdnHistoryDACImpl
20190513: 075717     DEBUG 20377[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075717     DEBUG 20377[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.MshMsisdnHistoryDACImpl TO MAP
20190513: 075717     DEBUG 20377[main] - com.eppixcomm.eppix.base.blo.MshMsisdnHistoryAbstractBLO.create(MshMsisdnHistoryAbstractBLO.java:138) - create( mshMsisdnHistoryDMO )
20190513: 075717     DEBUG 20377[main] - com.eppixcomm.eppix.base.blo.MshMsisdnHistoryAbstractDACImpl.create(MshMsisdnHistoryAbstractDACImpl.java:98) - create( mshMsisdnHistoryDMO )
20190513: 075717     DEBUG 20377[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
MshMsisdnHistory|11||

20190513: 075718     DEBUG 20473[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 607878|833819663      |EAPA      |BAPA A0311553 APNA 0004102502505 2019-05-13       |||2019-05-13 07:57:17
20190513: 075718     DEBUG 20742[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: MshMsisdnHistory
Execute SQL Statement: INSERT INTO MSH_MSISDN_HISTORY (MSH_SUBSCRIBER_ID, MSH_MSISDN_NO, MSH_HIST_CODE, MSH_COMMENT, MSH_USER_ID, MSH_TERMINAL_ID, MSH_TIMESTAMP) VALUES (?,?,?,?,?,?,?)
Argument(s): |607878|833819663      |EAPA      |BAPA A0311553 APNA 0004102502505 2019-05-13       |||2019-05-13 07:57:17|
20190513: 075718     DEBUG 20744[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.ShcSmsHistcode )
20190513: 075718     DEBUG 20744[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getShcSmsHistcodeDAC(BaseAbstractDACFactory.java:1429) - getShcSmsHistcodeDAC()
20190513: 075718     DEBUG 20746[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.ShcSmsHistcodeDACImpl com.eppixcomm.eppix.base.dml.ShcSmsHistcodeDMLFactory@baa466
20190513: 075718     DEBUG 20746[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.ShcSmsHistcodeDACImpl
20190513: 075718     DEBUG 20747[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075718     DEBUG 20747[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.ShcSmsHistcodeDACImpl TO MAP
20190513: 075718     DEBUG 20747[main] - com.eppixcomm.eppix.base.blo.ShcSmsHistcodeAbstractBLO.get(ShcSmsHistcodeAbstractBLO.java:267) - get( filter )
20190513: 075718     DEBUG 20748[main] - com.eppixcomm.eppix.base.blo.ShcSmsHistcodeAbstractDACImpl.get(ShcSmsHistcodeAbstractDACImpl.java:192) - get( filter )
20190513: 075718     DEBUG 20748[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
ShcSmsHistcode|0|equalShcHistCode|

20190513: 075718     DEBUG 21032[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: ShcSmsHistcode
Execute SQL Statement: SELECT SHC_MESG_ID, SHC_HIST_CODE 
FROM shc_sms_histcode
WHERE SHC_HIST_CODE = ? 
Argument(s): |EAPA|
20190513: 075718     DEBUG 21171[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65424) - BEFORE CHECK : (multiCharge.equals('Y') || firstOnSim
20190513: 075718     DEBUG 21172[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65426) - 
multiCharge: N
firstOnSim: true
vamDmo.getVamMsisdnNo: 833819663
20190513: 075718     DEBUG 21172[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65441) - BEFORE updateVsmBilledupto
20190513: 075718     DEBUG 21172[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.updateVsmBilledupto(SubscriberUpgradeMigradeBLO.java:6453) - 
updateVsmBilledupto 
Subscriber: 607878
msisdnNo: 833819663
serviceCode: APNA
PRORATA DATE: 2019-05-13
20190513: 075718     DEBUG 21172[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 075718     DEBUG 21172[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 075718     DEBUG 21172[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 075718     DEBUG 21172[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 075718     DEBUG 21301[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 075718     DEBUG 21302[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@ee6681
20190513: 075719     DEBUG 21481[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BcyBillingCycle )
20190513: 075719     DEBUG 21482[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getBcyBillingCycleDAC(BaseAbstractDACFactory.java:550) - getBcyBillingCycleDAC()
20190513: 075719     DEBUG 21487[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.BcyBillingCycleDACImpl com.eppixcomm.eppix.base.dml.BcyBillingCycleDMLFactory@2f48d2
20190513: 075719     DEBUG 21487[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.BcyBillingCycleDACImpl
20190513: 075719     DEBUG 21489[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075719     DEBUG 21489[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.BcyBillingCycleDACImpl TO MAP
20190513: 075719     DEBUG 21489[main] - com.eppixcomm.eppix.base.blo.BcyBillingCycleAbstractBLO.get(BcyBillingCycleAbstractBLO.java:587) - get( filter )
20190513: 075719     DEBUG 21489[main] - com.eppixcomm.eppix.base.blo.BcyBillingCycleAbstractDACImpl.get(BcyBillingCycleAbstractDACImpl.java:492) - get( filter )
20190513: 075719     DEBUG 21490[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BcyBillingCycle|0|equalBcyBillCycle|

20190513: 075719     DEBUG 21780[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: BcyBillingCycle
Execute SQL Statement: SELECT BCY_BILL_CYCLE, BCY_DESCRIPTION, BCY_PERIOD, BCY_FREQUENCY, BCY_DAY_OF_RUN, BCY_NEXT_RUN, BCY_SUSPENDED, BCY_USE_STATUS, BCY_NEXT_CALL_RUN, BCY_IN_ADVANCE
FROM BCY_BILLING_CYCLE
WHERE BCY_BILL_CYCLE = ?
Argument(s): |CYC13|
20190513: 075719     DEBUG 21781[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@54c4ad
20190513: 075719     DEBUG 21920[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17874) - initialDate: 26 Apr 2019
20190513: 075719     DEBUG 21921[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17875) - period: M
20190513: 075719     DEBUG 21921[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17876) - freq: 1
20190513: 075719     DEBUG 21921[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17877) - day: 26
20190513: 075719     DEBUG 21921[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17878) - type: F
20190513: 075719     DEBUG 21921[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17923) - MONTH calcDate: 26 May 2019
20190513: 075719     DEBUG 21922[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsmServiceMsisdn )
20190513: 075719     DEBUG 21923[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractBLO.modify(VsmServiceMsisdnAbstractBLO.java:369) - modify( filter )
20190513: 075719     DEBUG 21923[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractDACImpl.modify(VsmServiceMsisdnAbstractDACImpl.java:181) - modify( filter )
20190513: 075719     DEBUG 21923[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsmServiceMsisdn|16|equalVsmSubscriberId+equalVsmMsisdnNo+equalVsmServiceCode|

20190513: 075719     DEBUG 22179[main] - com.eppixcomm.eppix.common.data.DAOImpl.updateCustom(DAOImpl.java:2935) - updateCustom(DBO): DML Name: VsmServiceMsisdn
Execute SQL Statement: UPDATE VSM_SERVICE_MSISDN SET VSM_BILLED_UPTO = ?
WHERE VSM_SUBSCRIBER_ID = ? AND (VSM_MSISDN_NO) = ? AND (VSM_SERVICE_CODE) = ?
Argument(s): |2019-05-25|607878|833819663|APNA|
20190513: 075719     DEBUG 22180[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65447) - AFTER updateVsmBilledupto
20190513: 075719     DEBUG 22181[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65470) - AFTER CHECK : (multiCharge.equals('Y') || firstOnSim
20190513: 075719     DEBUG 22181[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getSbuActive
20190513: 075719     DEBUG 22183[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getSbuActive|0||

20190513: 075719     ERROR 22295[main] - com.eppixcomm.eppix.common.data.DAOThrower.unexpected(DAOThrower.java:150) - com.eppixcomm.eppix.base.error.EPPIXSeriousException: A database error has occurred: SQL Error: Reason: A syntax error has occurred., SQL State: 42000, Vendor Code: -201, DML Name: getSbuActive, SQL Statement: SELECT * FROM sbu_sub_upgrade WHERE sbu_subscriber_id = ? AND sbu_subupgrade_id = (SELECT MAX (sbu_subupgrade_id) FROM sbu_sub_upgrade WHERE sbu_subscriber_id = ? AND sbu_record_status = 'A', Argument(s): None
20190513: 075719     ERROR 22297[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65479) - Digital Service - Exception getting the active SBU record for the subscriber
20190513: 075719     DEBUG 22298[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsrService )
20190513: 075719     DEBUG 22298[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractBLO.get(VsrServiceAbstractBLO.java:576) - get( filter )
20190513: 075719     DEBUG 22298[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractDACImpl.get(VsrServiceAbstractDACImpl.java:517) - get( filter )
20190513: 075719     DEBUG 22298[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsrService|0|equalVsrServiceCode|

20190513: 075719     DEBUG 22370[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VsrService
Execute SQL Statement: SELECT VSR_SERVICE_CODE, VSR_SERVICE_TYPE, VSR_SERVICE_DESC, VSR_ORIGINATOR, VSR_SERVICE_CLASS, VSR_TEMP_DEACT, VSR_PRORATA, VSR_PROVIDER_ID, VSR_SHORT_DESC, VSR_SUSPEND
FROM VSR_SERVICE
WHERE VSR_SERVICE_CODE = ?
Argument(s): |APNA|
20190513: 075719     DEBUG 22370[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@ba5c7a
20190513: 075720     DEBUG 22519[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VstServiceTypes )
20190513: 075720     DEBUG 22519[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractBLO.get(VstServiceTypesAbstractBLO.java:595) - get( filter )
20190513: 075720     DEBUG 22519[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractDACImpl.get(VstServiceTypesAbstractDACImpl.java:540) - get( filter )
20190513: 075720     DEBUG 22520[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VstServiceTypes|0|equalVstServiceType|

20190513: 075720     DEBUG 22618[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VstServiceTypes
Execute SQL Statement: SELECT VST_SERVICE_TYPE, VST_SERVICE_DESC, VST_MULTI_CHARGE, VST_SERVICE_CLASS, VST_AUTO_CONNECT, VST_ORIGINATOR, VST_TARIFF_RELATED, VST_PARAMETERISED, VST_PARAMS_LEVEL, VST_ARCHIVE_MONTHS, VST_FUTURE_ACT, VST_NODE_LEVEL
FROM VST_SERVICE_TYPES
WHERE VST_SERVICE_TYPE = ?
Argument(s): |AP|
20190513: 075720     DEBUG 22619[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@15e0873
20190513: 075720      INFO 22838[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1820) - 
IS PARAMETER SERVICES: true
20190513: 075720      INFO 22838[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1823) - 
START PARAMETER SERVICES
20190513: 075720     DEBUG 22838[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getSpcSpvPshPsdBySubServCode
20190513: 075720     DEBUG 22841[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getSpcSpvPshPsdBySubServCode|0||

20190513: 075720     DEBUG 23287[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getSpcSpvPshPsdBySubServCode
Execute SQL Statement: SELECT * FROM spc_param_config, spv_param_values, psh_param_serv_hdr, psd_param_serv_det WHERE spc_param_id = spv_param_id AND spc_service_code = psh_service_code AND psd_psh_id = psh_id AND psh_archived = 'N' AND psd_param_value = spv_param_value AND psh_service_code = ? AND psh_subscriber_id = ? 
Argument(s): |APNA|607878|
20190513: 075721     DEBUG 23509[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TtTypeText )
20190513: 075721     DEBUG 23510[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getTtTypeTextDAC(BaseAbstractDACFactory.java:144) - getTtTypeTextDAC()
20190513: 075721     DEBUG 23512[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.TtTypeTextDACImpl com.eppixcomm.eppix.base.dml.TtTypeTextAbstractDMLFactory@1a001ff
20190513: 075721     DEBUG 23512[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.TtTypeTextDACImpl
20190513: 075721     DEBUG 23513[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075721     DEBUG 23513[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.TtTypeTextDACImpl TO MAP
20190513: 075721     DEBUG 23513[main] - com.eppixcomm.eppix.base.blo.TtTypeTextAbstractBLO.get(TtTypeTextAbstractBLO.java:542) - get( filter )
20190513: 075721     DEBUG 23513[main] - com.eppixcomm.eppix.base.blo.TtTypeTextAbstractDACImpl.get(TtTypeTextAbstractDACImpl.java:451) - get( filter )
20190513: 075721     DEBUG 23514[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TtTypeText|0|equalTtGroup+equalTtType+equalTtLang|

20190513: 075721     DEBUG 23806[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TtTypeText
Execute SQL Statement: SELECT TT_GROUP, TT_LANG, TT_TYPE, TT_TEXT, TT_CONFIG
FROM TT_TYPE_TEXT
WHERE (TT_GROUP) = ? AND (TT_TYPE) = ? AND (TT_LANG) = ?
Argument(s): |CHGVARPARM|AP|ENG|
20190513: 075721     DEBUG 23998[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SpvParamValues )
20190513: 075721     DEBUG 23998[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSpvParamValuesDAC(BaseAbstractDACFactory.java:1165) - getSpvParamValuesDAC()
20190513: 075721     DEBUG 24071[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SpvParamValuesDACImpl com.eppixcomm.eppix.base.dml.SpvParamValuesDMLFactory@1829e6f
20190513: 075721     DEBUG 24071[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SpvParamValuesDACImpl
20190513: 075721     DEBUG 24072[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075721     DEBUG 24072[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SpvParamValuesDACImpl TO MAP
20190513: 075721     DEBUG 24072[main] - com.eppixcomm.eppix.base.blo.SpvParamValuesAbstractBLO.get(SpvParamValuesAbstractBLO.java:299) - get( filter )
20190513: 075721     DEBUG 24072[main] - com.eppixcomm.eppix.base.blo.SpvParamValuesAbstractDACImpl.get(SpvParamValuesAbstractDACImpl.java:253) - get( filter )
20190513: 075721     DEBUG 24073[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SpvParamValues|0|equalspvNetwrkCode|

20190513: 075721     DEBUG 24305[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SpvParamValues
Execute SQL Statement: SELECT SPV_PARAM_ID, SPV_PARAM_VALUE, SPV_ACT_CHARGE, SPV_CHARGE_CODE, SPV_DEFAULT_VALUE, SPV_NETWRK_CODE
FROM spv_param_values
WHERE SPV_NETWRK_CODE = ? 
Argument(s): |APN|
20190513: 075722     ERROR 24445[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doParamInsertValidation(SubscriberActiveServicesBLO.java:2489) - Failed to get SPV for NETWRKCODE: APN
20190513: 075722      INFO 24445[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1830) - 
END PARAMETER SERVICES
20190513: 075722     DEBUG 24445[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getScv
20190513: 075722     DEBUG 24446[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getScv|0||

20190513: 075722     DEBUG 24684[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getScv
Execute SQL Statement: SELECT SCV_SUBSCRIBER_ID, SCV_CRM_VALUE, SCV_TYPE FROM SCV_SUB_CRM_VALUE WHERE SCV_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 075722     DEBUG 24684[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@180f96c
20190513: 075722     DEBUG 24844[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 075722     DEBUG 24845[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 075722     DEBUG 24845[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 075722     DEBUG 24845[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 075722     DEBUG 24944[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 075722     DEBUG 24945[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@aadc97
20190513: 075722     DEBUG 25084[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbaSubAux )
20190513: 075722     DEBUG 25084[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractBLO.get(SbaSubAuxAbstractBLO.java:283) - get( filter )
20190513: 075722     DEBUG 25085[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractDACImpl.get(SbaSubAuxAbstractDACImpl.java:101) - get( filter )
20190513: 075722     DEBUG 25085[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbaSubAux|0|equalSbaSubscriberId|

20190513: 075722     DEBUG 25163[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbaSubAux
Execute SQL Statement: SELECT SBA_SUBSCRIBER_ID, SBA_ID_NUMBER, SBA_MATCHCODE, SBA_MARKETING, SBA_THIRD_PARTY, SBA_CUST_DEPT, SBA_DEALER_ID, SBA_DEPARTMENT, SBA_SALESMAN, SBA_REGION, SBA_INVOICE_ADDRID, SBA_INV_ACCOUNT, SBA_PREPAID_STAT, SBA_ANALYSIS_1, SBA_ANALYSIS_2, SBA_ANALYSIS_3, SBA_ANALYSIS_4, SBA_ANALYSIS_5, SBA_ANALYSIS_6, SBA_ANALYSIS_7, SBA_ANALYSIS_8, SBA_ANALYSIS_9, SBA_ANALYSIS_10, SBA_ANALYSIS_11, SBA_ANALYSIS_12, SBA_ANALYSIS_13, SBA_ANALYSIS_14, SBA_ANALYSIS_15, SBA_ANALYSIS_16, SBA_ANALYSIS_17, SBA_ANALYSIS_18, SBA_ANALYSIS_19, SBA_ANALYSIS_20, SBA_ANALYSIS_21, SBA_ANALYSIS_22, SBA_ANALYSIS_23, SBA_ANALYSIS_24, SBA_ANALYSIS_25, SBA_ANALYSIS_26, SBA_ANALYSIS_27, SBA_ANALYSIS_28, SBA_ANALYSIS_29, SBA_ANALYSIS_30,SBA_COMMENTS
FROM SBA_SUB_AUX
WHERE SBA_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 075722     DEBUG 25164[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@13f210f
20190513: 075723     DEBUG 25394[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.AuxCustomers )
20190513: 075723     DEBUG 25396[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getAuxCustomersDAC(BaseAbstractDACFactory.java:122) - getAuxCustomersDAC()
20190513: 075723     DEBUG 25405[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.AuxCustomersDACImpl com.eppixcomm.eppix.base.dml.AuxCustomersDMLFactory@cafb56
20190513: 075723     DEBUG 25405[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.AuxCustomersDACImpl
20190513: 075723     DEBUG 25409[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075723     DEBUG 25409[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.AuxCustomersDACImpl TO MAP
20190513: 075723     DEBUG 25409[main] - com.eppixcomm.eppix.base.blo.AuxCustomersAbstractBLO.get(AuxCustomersAbstractBLO.java:689) - get( filter )
20190513: 075723     DEBUG 25409[main] - com.eppixcomm.eppix.base.blo.AuxCustomersAbstractDACImpl.get(AuxCustomersAbstractDACImpl.java:1309) - get( filter )
20190513: 075723     DEBUG 25412[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
AuxCustomers|0|equalBillAcNo|

20190513: 075723     DEBUG 25862[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: AuxCustomers
Execute SQL Statement: SELECT AUX_TITLE, AUX_FIRSTNAME, AUX_INVOICE_ADDRID, BANK_NAME, BANK_ADDR1, BANK_ADDR2, BANK_AC_NAME, REF, BANK_SCODE, BANK_AC_NO, BANK_AC_TYPE, BANK_PAY_TYPE, AUX_PREF_DEBIT_DAY, BILL_AC_NO, PROTECT_CODE, HANDSET_CT, BANK_DATE, CONF_DATE, AUX_COMMENT, DATE_OF_BIRTH, REF_PAY_DATE, AC_CLOS_DATE, NO_REAS_DATE, REM_LET_DATE, AC_TRAN_DATE, NO_AC_DATE, SR_FLAG, PROCESSED, PACKAGE_CODE, AUX_ACCOUNT_TYPE, AUX_BILL_CYCLE, CREDIT_CARD_NO, CREDIT_CARD_NAME, EXPIRY_DATE, AUX_CARD_CVV_NO, CREDIT_SCORE, SERV_PROV_ID, DEALER_ID, SALESMAN, ID_NUMBER, ACC_STATUS, COMP_REG_NO, STATIONARY_TYPE, MAX_NO_SUBS, AUX_CURRENCY, AUX_COUNTRY_CODE, AUX_GENDER, AUX_SUB_GRP_ACC_NO, AUX_PREPAID_STAT, AUX_CREDIT_CLASS, AUX_AUTO_LIMIT_IND, AUX_LMT_UP_VAL, AUX_LMT_DN_VAL, AUX_ANALYSIS_1, AUX_ANALYSIS_2, AUX_ANALYSIS_3, AUX_ANALYSIS_4, AUX_ANALYSIS_5, AUX_ANALYSIS_6, AUX_ANALYSIS_7, AUX_ANALYSIS_8, AUX_ANALYSIS_9, AUX_ANALYSIS_10, AUX_ANALYSIS_11, AUX_ANALYSIS_12, AUX_ANALYSIS_13, AUX_ANALYSIS_14, AUX_ANALYSIS_15, AUX_ANALYSIS_16, AUX_ANALYSIS_17, AUX_ANALYSIS_18, AUX_ANALYSIS_19, AUX_ANALYSIS_20, AUX_ANALYSIS_21, AUX_ANALYSIS_22, AUX_ANALYSIS_23, AUX_ANALYSIS_24, AUX_ANALYSIS_25, AUX_ANALYSIS_26, AUX_ANALYSIS_27, AUX_ANALYSIS_28, AUX_ANALYSIS_29, AUX_ANALYSIS_30
FROM AUX_CUSTOMERS
WHERE (BILL_AC_NO) = ?
Argument(s): |A0311553|
20190513: 075723     DEBUG 25864[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1d6a56e
20190513: 075723     DEBUG 26032[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getSerialCustomer
20190513: 075723     DEBUG 26033[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getSerialCustomer|0||

20190513: 075723     DEBUG 26252[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getSerialCustomer
Execute SQL Statement: SELECT SC_SERIAL, SC_BILL_AC_NO FROM SC_SERIAL_CUSTOMER WHERE SC_BILL_AC_NO = ?
Argument(s): |A0311553|
20190513: 075723     DEBUG 26252[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1c6572b
20190513: 075724     DEBUG 26401[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getEppixHierarchyByTypeSubscriber|0|NONE|

20190513: 075724     DEBUG 26641[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getEppixHierarchyByTypeSubscriber
Execute SQL Statement: SELECT EH_SERIAL, EH_ENTITY_ID, EH_TYPE, EH_VALUE, EH_LINK, EH_HIER_TYPE FROM EH_EPPIX_HIERARCHY WHERE EH_TYPE = 'SUBSCRIBER' AND EH_ENTITY_ID = ? 
Argument(s): |607878|
20190513: 075724     DEBUG 26711[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getVsmUniqueServiceCodeBySubsciber|0|NONE|

20190513: 075724     DEBUG 26960[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getVsmUniqueServiceCodeBySubsciber
Execute SQL Statement: select vsm_service_code from vsm_service_msisdn	where vsm_subscriber_id = ? group by vsm_service_code
Argument(s): |607878|
20190513: 075724     DEBUG 26960[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@6f9b8e
20190513: 075724     DEBUG 26960[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@14db0e3
20190513: 075724     DEBUG 26960[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1982fc1
20190513: 075724     DEBUG 26961[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@676437
20190513: 075724     DEBUG 26961[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1e4853f
20190513: 075724     DEBUG 26961[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1e808ca
20190513: 075724     DEBUG 26961[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@992bae
20190513: 075724     DEBUG 26961[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@2bd3a
20190513: 075724     DEBUG 26961[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1d53f5b
20190513: 075724     DEBUG 26962[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@26d607
20190513: 075724     DEBUG 26962[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1ad98ef
20190513: 075724     DEBUG 26962[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@138c63
20190513: 075724     DEBUG 26962[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@165f738
20190513: 075724     DEBUG 26962[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@149b290
20190513: 075724     DEBUG 26963[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@55a338
20190513: 075724     DEBUG 26963[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@4ee70b
20190513: 075724     DEBUG 26963[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@22ab57
20190513: 075724     DEBUG 26963[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1eec35
20190513: 075724     DEBUG 26963[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@25c828
20190513: 075724     DEBUG 26963[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@77ef83
20190513: 075724     DEBUG 26963[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@d85cc
20190513: 075724     DEBUG 27031[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 1
20190513: 075724     DEBUG 27031[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 2
20190513: 075724     DEBUG 27031[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27031[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27031[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27031[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27031[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27032[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27032[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27032[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27032[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27032[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27032[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27032[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27033[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27033[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27033[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27033[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27033[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27033[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27033[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27034[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27034[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27034[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27034[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27034[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27034[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27034[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27034[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27034[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27034[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27035[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27035[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27035[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27035[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27035[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27035[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27035[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27035[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27035[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27035[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 075724     DEBUG 27035[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 075724     DEBUG 27036[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 8
20190513: 075724     DEBUG 27036[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 16
20190513: 075724     DEBUG 27036[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 32
20190513: 075724     DEBUG 27036[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27036[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27036[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27036[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27037[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27037[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27037[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27037[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27037[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27037[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27037[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27037[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27037[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27037[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27038[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27038[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27038[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27038[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27038[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27038[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27038[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 075724     DEBUG 27038[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 128
20190513: 075724     DEBUG 27038[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 256
20190513: 075724     DEBUG 27039[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSdiSubsDiscountNotByQualId(SubscriberUpgradeMigradeBLO.java:20227) - 
SELECT SDI_SUB_DISC_ID,SDI_SUBSCRIBER_ID,SDI_DISCOUNT_ID,SDI_START_DATE,SDI_END_DATE,SDI_SUSPEND_DATE,SDI_QUAL_ID,SDI_QUAL_TYPE,SDI_PACKAGE_CODE,SDI_TARIFF_PLAN,SDI_SERVICE_CODE,SDI_PAYMENT_TYPE,SDI_ACCOUNT_TYPE,SDI_DISCOUNT_UPTO FROM SDI_SUBS_DISCOUNT WHERE SDI_SUBSCRIBER_ID = 607878 AND sdi_qual_id NOT IN (SELECT dqk_qual_id FROM dqk_disc_qual_key WHERE dqk_key_val IN  (2,4,6,10,18,34,66,130,258) AND dqk_key IN  ('ISIS','ISISA0311553','ISIS0','ISIS500FF','ISISACCDO','ISISHV','ISISAM10','ISISAM50','ISISAMR5','ISISAPNA','ISISAPNW','ISISBCDF','ISISBSTL','ISISCSCP','ISISGPRS','ISISITBL','ISISMEXU','ISISMMSS','ISISNBUN','ISISNDEP','ISISNPRO','ISISNUL ','ISISPSF ','ISISRSMS','ISISSPUL','ISISSUL ','ISISVCMA','ISISASKYL36M','ISISEXCEL') AND dqk_from  <= '43597' AND dqk_to >= '43597') AND sdi_end_date IS NULL  AND sdi_qual_id IS NOT NULL
20190513: 075724     DEBUG 27329[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getDiqDiscountQualByQualId(SubscriberUpgradeMigradeBLO.java:21944) - 
SELECT DIQ_QUAL_DESC, DIQ_QUAL_TYPE, DIQ_START_DATE, 
DIQ_END_DATE, DIQ_PACKAGE_CODE, DIQ_PACK_AFFECT, 
DIQ_TARIFF_PLAN, DIQ_TAR_AFFECT, DIQ_SERVICE_CODE, 
DIQ_SERV_AFFECT, DIQ_PAYMENT_TYPE, DIQ_PAY_AFFECT, 
DIQ_ACCOUNT_TYPE, DIQ_ACC_AFFECT, DIQ_DISCOUNT_ID, 
DIQ_USED FROM DIQ_DISCOUNT_QUAL 
 WHERE DIQ_QUAL_ID IN (  SELECT DQK_QUAL_ID 
 FROM DQK_DISC_QUAL_KEY 
 WHERE DQK_KEY_VAL IN  (2,4,6,10,18,34,66,130,258)
 AND DQK_KEY IN  ('ISIS','ISISA0311553','ISIS0','ISIS500FF','ISISACCDO','ISISHV','ISISAM10','ISISAM50','ISISAMR5','ISISAPNA','ISISAPNW','ISISBCDF','ISISBSTL','ISISCSCP','ISISGPRS','ISISITBL','ISISMEXU','ISISMMSS','ISISNBUN','ISISNDEP','ISISNPRO','ISISNUL ','ISISPSF ','ISISRSMS','ISISSPUL','ISISSUL ','ISISVCMA','ISISASKYL36M','ISISEXCEL') AND DQK_FROM  <= 43597
 AND DQK_TO >= 43597
 AND DQK_QUAL_ID NOT IN ( 
 SELECT NVL(SDI_QUAL_ID, 0)  FROM SDI_SUBS_DISCOUNT 
 WHERE SDI_SUBSCRIBER_ID = 607878 AND SDI_END_DATE IS NULL))
20190513: 075725     DEBUG 27550[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1895) - 
this.tsDMO: 
TsTariffServiceDMO [fieldSizes=[5, 20, 4, 15, 5, 5, 5, 5, 5, 5, 5, 1, 0, 4, 1]
tsChargeFreq=1
tsActCharge=
tsActInclusive=N
tsChargePeriod=M
tsDiscountRef=
tsInternalTariff=ASKYL36M
tsNetServCode=APN
tsPackageCode=500FF
tsPdeactCharge=
tsReactCharge=
tsServiceCode=APNA
tsSubCharge1=null
tsSubCharge2=
tsSubCharge3=
tsTdeactCharge=]
20190513: 075725     DEBUG 27550[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.serviceCreateNonBasicN2N(SubscriberUpgradeMigradeBLO.java:46052) - 
Integer subscriberId: 607878
String simNo: 0004102502505
String newSim: N
String serviceExists: 
Integer priority: 5
String pCommand: 
Integer seqNo: 0
String netServCode: APN
String message: MODIFY_SERVICES
String serviceType: AP
String primarySIM: 
String primaryMSISDN: 
String secondMSISDN: 
String serviceCode: APNA
String location: M1
String applyOption: MODIFY
Date activateDate: 2019-05-13
short depReqd: 0
20190513: 075725     DEBUG 27551[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 075725     DEBUG 27551[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.get(VamActiveMsisdnAbstractBLO.java:654) - get( filter )
20190513: 075725     DEBUG 27551[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.get(VamActiveMsisdnAbstractDACImpl.java:683) - get( filter )
20190513: 075725     DEBUG 27551[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId+equalVamSimNo+equalVamHierarchy+INVamStatCode_3|

20190513: 075725     DEBUG 27818[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ? AND (VAM_SIM_NO) = ? AND (VAM_HIERARCHY) = ? AND VAM_STAT_CODE IN ( ? , ? , ? )
Argument(s): |607878|0004102502505|0|1|4|6|
20190513: 075725     DEBUG 27819[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1cf4a2c
20190513: 075725     DEBUG 27999[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 075725     DEBUG 27999[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSysdirmDAC(BaseAbstractDACFactory.java:327) - getSysdirmDAC()
20190513: 075725     DEBUG 28002[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SysdirmDACImpl com.eppixcomm.eppix.base.dml.SysdirmAbstractDMLFactory@1e1dadb
20190513: 075725     DEBUG 28003[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SysdirmDACImpl
20190513: 075725     DEBUG 28003[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075725     DEBUG 28003[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SysdirmDACImpl TO MAP
20190513: 075725     DEBUG 28003[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 075725     DEBUG 28004[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 075725     DEBUG 28004[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 075725     DEBUG 28258[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASSWITCHM1|
20190513: 075725     DEBUG 28258[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@e79839
20190513: 075726     DEBUG 28437[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 075726     DEBUG 28437[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 075726     DEBUG 28437[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 075726     DEBUG 28437[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 075726     DEBUG 28517[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASIMSIALGO|
20190513: 075726     DEBUG 28517[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@bac9b9
20190513: 075726     DEBUG 28667[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9355) - 
=======================================================================================
PARAM OPTION: ALL
PARAM SIM NO: 0004102502505
PARAM NETWORK ID: 
PARAM HLR: 
PARAM DEALER ID: 
PARAM CUSTOMER: 
=======================================================================================
20190513: 075726     DEBUG 28667[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SacSimAssignCus )
20190513: 075726     DEBUG 28667[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractBLO.get(SacSimAssignCusAbstractBLO.java:287) - get( filter )
20190513: 075726     DEBUG 28668[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractDACImpl.get(SacSimAssignCusAbstractDACImpl.java:205) - get( filter )
20190513: 075726     DEBUG 28668[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SacSimAssignCus|0|equalSacSimNo|

20190513: 075726     DEBUG 28767[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SacSimAssignCus
Execute SQL Statement: SELECT SAC_BILL_AC_NO, SAC_SIM_NO 
FROM sac_sim_assign_cus
WHERE SAC_SIM_NO = ? 
Argument(s): |0004102502505|
20190513: 075726      INFO 28947[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9984) - Passed customer no  not found in Sac_Sim_assign_cus
20190513: 075726     DEBUG 28947[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190513: 075726     DEBUG 28947[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190513: 075726     DEBUG 28947[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190513: 075726     DEBUG 28947[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo|

20190513: 075726     DEBUG 29096[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ?
Argument(s): |0004102502505|
20190513: 075726     DEBUG 29096[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@8ceeea
20190513: 075726     DEBUG 29247[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:10075) - NETWORK PARAMS: OPTION: ALL NETWORK ID:  NETWORKID.LENGTH: 0
20190513: 075726     DEBUG 29247[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 075726     DEBUG 29247[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.get(VamActiveMsisdnAbstractBLO.java:654) - get( filter )
20190513: 075726     DEBUG 29247[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.get(VamActiveMsisdnAbstractDACImpl.java:683) - get( filter )
20190513: 075726     DEBUG 29247[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamMsisdnNo|

20190513: 075727     DEBUG 29535[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE (VAM_MSISDN_NO) = ?
Argument(s): |833819663|
20190513: 075727     DEBUG 29535[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@995a79
20190513: 075727     DEBUG 29696[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VpnProviderNetwk )
20190513: 075727     DEBUG 29696[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVpnProviderNetwkDAC(BaseAbstractDACFactory.java:435) - getVpnProviderNetwkDAC()
20190513: 075727     DEBUG 29698[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VpnProviderNetwkDACImpl com.eppixcomm.eppix.base.dml.VpnProviderNetwkDMLFactory@1c50507
20190513: 075727     DEBUG 29698[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VpnProviderNetwkDACImpl
20190513: 075727     DEBUG 29700[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075727     DEBUG 29700[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VpnProviderNetwkDACImpl TO MAP
20190513: 075727     DEBUG 29700[main] - com.eppixcomm.eppix.base.blo.VpnProviderNetwkAbstractBLO.iterate(VpnProviderNetwkAbstractBLO.java:500) - iterate( filter )
20190513: 075727     DEBUG 29700[main] - com.eppixcomm.eppix.base.blo.VpnProviderNetwkAbstractDACImpl.iterate(VpnProviderNetwkAbstractDACImpl.java:421) - iterate( filter )
20190513: 075727     DEBUG 29700[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VpnProviderNetwk|0|VpnNetworkPrefixMatch|

20190513: 075727     DEBUG 29914[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VpnProviderNetwk
Execute SQL Statement: SELECT VPN_PROVIDER_ID, VPN_NETWORK_PREFIX, VPN_MSISDN_MASK, VPN_SIM_MASK
FROM VPN_PROVIDER_NETWK
WHERE VPN_NETWORK_PREFIX LIKE ?
Argument(s): |%83%|
20190513: 075727     DEBUG 29914[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1f64158
20190513: 075727     DEBUG 29973[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 075727     DEBUG 29974[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 075727     DEBUG 29974[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 075727     DEBUG 29975[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 075727     DEBUG 30074[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNUBLOCK|
20190513: 075727     DEBUG 30074[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@3cc262
20190513: 075727     DEBUG 30194[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getImsiRestriction|0|NONE|

20190513: 075728     DEBUG 30472[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getImsiRestriction
Execute SQL Statement: SELECT UNIQUE(vas_active_service.vas_service_type) FROM vam_active_msisdn, vas_active_service, vsm_service_msisdn  WHERE vam_subscriber_id = ?  AND   vam_sim_no        = ?  AND   vam_subscriber_id = vas_subscriber_id AND   vas_service_type  IN ('NR','HR','HF') AND   vas_service_code  = vsm_service_code AND   vsm_msisdn_no     = vam_msisdn_no AND   vsm_subscriber_id = vam_subscriber_id ORDER BY vas_service_type
Argument(s): |607878|0004102502505|
20190513: 075728     DEBUG 30532[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 075728     DEBUG 30533[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 075728     DEBUG 30533[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 075728     DEBUG 30533[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 075728     DEBUG 30603[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNDEFRR|
20190513: 075728     DEBUG 30603[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@fdb00d
20190513: 075728     DEBUG 30733[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getImsiCategory|0|NONE|

20190513: 075728     DEBUG 30991[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getImsiCategory
Execute SQL Statement: SELECT vas_active_service.vas_service_type FROM vam_active_msisdn, vas_active_service, vsm_service_msisdn  WHERE vam_subscriber_id = ? AND vam_sim_no = ? AND vam_subscriber_id = vas_subscriber_id AND vas_service_type = 'HB' AND vas_service_code = vsm_service_code AND vsm_msisdn_no = vam_msisdn_no AND vsm_subscriber_id = vam_subscriber_id ORDER BY vas_service_type
Argument(s): |607878|0004102502505|
20190513: 075728     DEBUG 31121[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 075728     DEBUG 31122[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 075728     DEBUG 31123[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 075728     DEBUG 31124[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 075728     DEBUG 31232[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNDEFACT|
20190513: 075728     DEBUG 31232[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@56860b
20190513: 075729     DEBUG 31443[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SfeSimFutEvent )
20190513: 075729     DEBUG 31444[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSfeSimFutEventDAC(BaseAbstractDACFactory.java:1153) - getSfeSimFutEventDAC()
20190513: 075729     DEBUG 31447[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SfeSimFutEventDACImpl com.eppixcomm.eppix.base.dml.SfeSimFutEventDMLFactory@50ca0c
20190513: 075729     DEBUG 31447[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SfeSimFutEventDACImpl
20190513: 075729     DEBUG 31449[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075729     DEBUG 31449[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SfeSimFutEventDACImpl TO MAP
20190513: 075729     DEBUG 31449[main] - com.eppixcomm.eppix.base.blo.SfeSimFutEventAbstractBLO.get(SfeSimFutEventAbstractBLO.java:341) - get( filter )
20190513: 075729     DEBUG 31449[main] - com.eppixcomm.eppix.base.blo.SfeSimFutEventAbstractDACImpl.get(SfeSimFutEventAbstractDACImpl.java:326) - get( filter )
20190513: 075729     DEBUG 31450[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SfeSimFutEvent|0|equalSfeSimNo+equalSfeFutEventId+nullSfeMsisdnNo+nullSfeServiceCode|

20190513: 075729     DEBUG 31710[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SfeSimFutEvent
Execute SQL Statement: SELECT SFE_COMMAND,SFE_FUT_EVENT_ID,SFE_SUBSCRIBER_ID,SFE_SIM_NO,SFE_MSISDN_NO,SFE_SERVICE_CODE,SFE_EVENT_DATE,SFE_TIMESTAMP,SFE_ERROR_COMMENT,SFE_ORIG_STATUS
FROM SFE_SIM_FUT_EVENT
WHERE SFE_SIM_NO = ?  AND SFE_FUT_EVENT_ID = ?  AND (SFE_MSISDN_NO IS NULL OR LENGTH(SFE_MSISDN_NO) IS NULL OR LENGTH(SFE_MSISDN_NO) = 0) AND (SFE_SERVICE_CODE IS NULL OR LENGTH(SFE_SERVICE_CODE) IS NULL OR LENGTH(SFE_SERVICE_CODE) = 0)
Argument(s): |0004102502505|SIM_ACTIVATE|
20190513: 075729     DEBUG 31860[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getNmMsisdnVam
20190513: 075729     DEBUG 31861[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getNmMsisdnVam|0||

20190513: 075729     DEBUG 32169[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getNmMsisdnVam
Execute SQL Statement: SELECT NM_INTERNAL_TARIFF, NM_NETWORK_TARIFF, NM_CONTRACT_PERIOD, NM_NTWRK_CONTR_PER, NM_MIN_CANC_PERIOD, NM_HIGHER_MIG_TYPE, NM_LOWER_MIG_TYPE, NM_SAME_MIG_TYPE, NM_NETWORK_ID, NM_NET_TYPE FROM nm_netmat, vam_active_msisdn WHERE vam_msisdn_no = ?  AND vam_intern_tariff = nm_internal_tariff
Argument(s): |833819663|
20190513: 075729     DEBUG 32170[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1478a43
20190513: 075729     DEBUG 32351[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NgsNetGroupServ )
20190513: 075729     DEBUG 32352[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getNgsNetGroupServDAC(BaseAbstractDACFactory.java:748) - getNgsNetGroupServDAC()
20190513: 075729     DEBUG 32356[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.NgsNetGroupServDACImpl com.eppixcomm.eppix.base.dml.NgsNetGroupServAbstractDMLFactory@238a47
20190513: 075729     DEBUG 32356[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.NgsNetGroupServDACImpl
20190513: 075729     DEBUG 32358[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075729     DEBUG 32358[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.NgsNetGroupServDACImpl TO MAP
20190513: 075729     DEBUG 32358[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractBLO.iterate(NgsNetGroupServAbstractBLO.java:563) - iterate( filter )
20190513: 075729     DEBUG 32358[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractDACImpl.iterate(NgsNetGroupServAbstractDACImpl.java:618) - iterate( filter )
20190513: 075729     DEBUG 32359[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NgsNetGroupServ|0|NgsCodeMatch|NgsSequenceasc

20190513: 075730     ERROR 32459[main] - com.eppixcomm.eppix.common.data.DAOThrower.unexpected(DAOThrower.java:150) - com.eppixcomm.eppix.base.error.EPPIXSeriousException: A database error has occurred: SQL Error: Reason: A syntax error has occurred., SQL State: 42000, Vendor Code: -201, DML Name: NgsNetGroupServ, SQL Statement: SELECT NGS_CODE, NGS_NETWORK, NGS_NET_SERV_CODE, NGS_SEQUENCE, NGS_APPLY_TEXT, NGS_MODIFY_TEXT, NGS_REMOVE_TEXT, NGS_PARAM_NAME1, NGS_PARAM_VALUE1, NGS_PARAM_NAME2, NGS_PARAM_VALUE2, NGS_PARAM_NAME3, NGS_PARAM_VALUE3, NGS_PARAM_NAME4, NGS_PARAM_VALUE4, NGS_PARAM_NAME5, NGS_PARAM_VALUE5
FROM NGS_NET_GROUP_SERV
WHERE NGS_CODE ? ORDER BY NGS_SEQUENCE ASC, Argument(s): None
20190513: 075730     DEBUG 32460[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getNgsNetServCode
20190513: 075730     DEBUG 32460[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getNgsNetServCode|0||

20190513: 075730     DEBUG 32698[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getNgsNetServCode
Execute SQL Statement: SELECT first 1 ngs_net_serv_code  FROM ngs_net_group_serv  WHERE ngs_code = ?  AND ngs_network  = ?  AND ngs_sequence  = 1
Argument(s): |APN|M1|
20190513: 075730     DEBUG 32699[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@15d17d7
20190513: 075730     DEBUG 32879[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.processExistingSimNonBasic(SubscriberUpgradeMigradeBLO.java:47589) - 
subscriberId: 607878
simNo: 0004102502505
serviceType: AP
serviceCode: APNA
networkService: APN       
networkService: APN       
location: M1
priority: 5
activateDate: 20190513
command: 
primaryMsisdn: 833819663
smnDMO: 
SmnSimNosDMO [smnActiveDate=1999-11-23
smnAvailDate=2016-06-14
smnExpiryDate=2019-06-14
smnAnalysis1=null
smnAnalysis2=null
smnAnalysis3=null
smnDealerId=MTEL
smnHlr=25
smnImsiNo=null
smnKi=null
smnNetworkId=M1
smnOnNetwork=Y
smnPinNo=null
smnPinNo2=null
smnProductCode=83USIM
smnPukNo=32063218
smnPukNo2=null
smnSimNo=0004102502505
smnStatus=1
smnTransportKey=null
smnWarehouse=25]
20190513: 075730     DEBUG 32879[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 075730     DEBUG 32880[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 075730     DEBUG 32880[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 075730     DEBUG 32880[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 075730     DEBUG 32958[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNTRANID|
20190513: 075730     DEBUG 32958[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@ae533a
20190513: 075730     DEBUG 33107[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 075730     DEBUG 33107[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.modify(SysdirmAbstractBLO.java:308) - modify( filter )
20190513: 075730     DEBUG 33108[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.modify(SysdirmAbstractDACImpl.java:175) - modify( filter )
20190513: 075730     DEBUG 33108[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|16|equalSystemKey|

20190513: 075730     DEBUG 33377[main] - com.eppixcomm.eppix.common.data.DAOImpl.updateCustom(DAOImpl.java:2935) - updateCustom(DBO): DML Name: Sysdirm
Execute SQL Statement: UPDATE SYSDIRM SET KEY_VALUE = ?
WHERE (SYSTEM_KEY) = ?
Argument(s): |46989891|ASNNTRANID|
20190513: 075730     DEBUG 33377[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190513: 075730     DEBUG 33378[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190513: 075730     DEBUG 33378[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190513: 075730     DEBUG 33378[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190513: 075731     DEBUG 33467[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |ASSMROOTM1|
20190513: 075731     DEBUG 33468[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@da18ac
20190513: 075731     DEBUG 33646[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getAuxSbd
20190513: 075731     DEBUG 33646[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getAuxSbd|0||

20190513: 075731     DEBUG 34095[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getAuxSbd
Execute SQL Statement: SELECT AUX_TITLE, AUX_FIRSTNAME, AUX_INVOICE_ADDRID, BANK_NAME, BANK_ADDR1, BANK_ADDR2, BANK_AC_NAME, REF, BANK_SCODE, BANK_AC_NO, BANK_AC_TYPE, BANK_PAY_TYPE, AUX_PREF_DEBIT_DAY, BILL_AC_NO, PROTECT_CODE, HANDSET_CT, BANK_DATE, CONF_DATE, AUX_COMMENT, DATE_OF_BIRTH, REF_PAY_DATE, AC_CLOS_DATE, NO_REAS_DATE, REM_LET_DATE, AC_TRAN_DATE, NO_AC_DATE, SR_FLAG, PROCESSED, PACKAGE_CODE, AUX_ACCOUNT_TYPE, AUX_BILL_CYCLE, CREDIT_CARD_NO, CREDIT_CARD_NAME, EXPIRY_DATE, AUX_CARD_CVV_NO, CREDIT_SCORE, SERV_PROV_ID, DEALER_ID, SALESMAN, ID_NUMBER, ACC_STATUS, COMP_REG_NO, STATIONARY_TYPE, MAX_NO_SUBS, AUX_CURRENCY, AUX_COUNTRY_CODE, AUX_GENDER, AUX_SUB_GRP_ACC_NO, AUX_PREPAID_STAT, AUX_CREDIT_CLASS, AUX_AUTO_LIMIT_IND, AUX_LMT_UP_VAL, AUX_LMT_DN_VAL, AUX_ANALYSIS_1, AUX_ANALYSIS_2, AUX_ANALYSIS_3, AUX_ANALYSIS_4, AUX_ANALYSIS_5, AUX_ANALYSIS_6, AUX_ANALYSIS_7, AUX_ANALYSIS_8, AUX_ANALYSIS_9, AUX_ANALYSIS_10, AUX_ANALYSIS_11, AUX_ANALYSIS_12, AUX_ANALYSIS_13, AUX_ANALYSIS_14, AUX_ANALYSIS_15, AUX_ANALYSIS_16, AUX_ANALYSIS_17, AUX_ANALYSIS_18, AUX_ANALYSIS_19, AUX_ANALYSIS_20, AUX_ANALYSIS_21, AUX_ANALYSIS_22, AUX_ANALYSIS_23, AUX_ANALYSIS_24, AUX_ANALYSIS_25, AUX_ANALYSIS_26, AUX_ANALYSIS_27, AUX_ANALYSIS_28, AUX_ANALYSIS_29, AUX_ANALYSIS_30 FROM aux_customers, sbd_sub_dets WHERE sbd_bill_ac_no = bill_ac_no AND sbd_subscriber_id = ? 
Argument(s): |607878|
20190513: 075731     DEBUG 34097[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@401369
20190513: 075731     DEBUG 34225[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getNmMsisdnVam
20190513: 075731     DEBUG 34225[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getNmMsisdnVam|0||

20190513: 075731     DEBUG 34285[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getNmMsisdnVam
Execute SQL Statement: SELECT NM_INTERNAL_TARIFF, NM_NETWORK_TARIFF, NM_CONTRACT_PERIOD, NM_NTWRK_CONTR_PER, NM_MIN_CANC_PERIOD, NM_HIGHER_MIG_TYPE, NM_LOWER_MIG_TYPE, NM_SAME_MIG_TYPE, NM_NETWORK_ID, NM_NET_TYPE FROM nm_netmat, vam_active_msisdn WHERE vam_msisdn_no = ?  AND vam_intern_tariff = nm_internal_tariff
Argument(s): |833819663|
20190513: 075731     DEBUG 34285[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@ba5bdb
20190513: 075732     DEBUG 34467[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SdSimDeactivate )
20190513: 075732     DEBUG 34467[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSdSimDeactivateDAC(BaseAbstractDACFactory.java:1141) - getSdSimDeactivateDAC()
20190513: 075732     DEBUG 34473[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SdSimDeactivateDACImpl com.eppixcomm.eppix.base.dml.SdSimDeactivateDMLFactory@e66f56
20190513: 075732     DEBUG 34473[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SdSimDeactivateDACImpl
20190513: 075732     DEBUG 34475[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075732     DEBUG 34475[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SdSimDeactivateDACImpl TO MAP
20190513: 075732     DEBUG 34475[main] - com.eppixcomm.eppix.base.blo.SdSimDeactivateAbstractBLO.get(SdSimDeactivateAbstractBLO.java:400) - get( filter )
20190513: 075732     DEBUG 34475[main] - com.eppixcomm.eppix.base.blo.SdSimDeactivateAbstractDACImpl.get(SdSimDeactivateAbstractDACImpl.java:421) - get( filter )
20190513: 075732     DEBUG 34476[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SdSimDeactivate|0|equalSdSimNo+notnullSdDconnectDate+greaterthanSdDconnectDate|equalSdTransStatus|

20190513: 075732     DEBUG 34884[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SdSimDeactivate
Execute SQL Statement: SELECT SD_SUBSCRIBER_ID,SD_HANDSET_NO,SD_SIM_NO,SD_TRANS_STATUS,SD_STAT_CODE,SD_DCONNECT_DATE,SD_PRORATA_TO_DATE,SD_REASON,SD_LETTER_TYPE,SD_DISCON_CHARGE1,SD_DISCON_CHARGE2,SD_DISCON_CHARGE3,SD_DISCON_CHARGE4,SD_DISCON_CHARGE5,SD_EL_COMMAND,SD_EPPIX_STAMP,SD_N2N_STAMP,SD_ERROR_COMMENT
FROM SD_SIM_DEACTIVATE
WHERE SD_SIM_NO = ?  AND SD_DCONNECT_DATE IS NOT NULL AND SD_DCONNECT_DATE > ?  AND (SD_TRANS_STATUS = ?  )
Argument(s): |0004102502505|2019-05-13|F|
20190513: 075732     ERROR 35054[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSimFutureDeactivate(SubscriberUpgradeMigradeBLO.java:29727) - No SIM details found in table sd_sim_deactivate for SIM no 0004102502505
20190513: 075732     DEBUG 35057[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcEventCommand )
20190513: 075732     DEBUG 35057[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getEcEventCommandDAC(BaseDACFactory.java:131) - getEcEventCommandDAC()
20190513: 075732     DEBUG 35081[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.EcEventCommandDACImpl com.eppixcomm.eppix.base.dml.EcEventCommandDMLFactory@349471
20190513: 075732     DEBUG 35081[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.EcEventCommandDACImpl
20190513: 075732     DEBUG 35082[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075732     DEBUG 35082[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.EcEventCommandDACImpl TO MAP
20190513: 075732     DEBUG 35082[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractBLO.create(EcEventCommandAbstractBLO.java:189) - create( ecEventCommandDMO )
20190513: 075732     DEBUG 35082[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractBLO.exists(EcEventCommandAbstractBLO.java:423) - exists(ecEventCommand)
20190513: 075732     DEBUG 35082[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractDACImpl.exists(EcEventCommandAbstractDACImpl.java:227) - exists( EcEventCommandDMO)
20190513: 075732     DEBUG 35082[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcEventCommand|9|filterByPrimaryKey|

20190513: 075732     DEBUG 35343[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: EcEventCommand
Execute SQL Statement: SELECT DISTINCT(0)
FROM EC_EVENT_COMMAND
WHERE (EC_COMMAND) = ?
Argument(s): |201905130757674 |
20190513: 075733     DEBUG 35493[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractDACImpl.create(EcEventCommandAbstractDACImpl.java:99) - create( ecEventCommandDMO )
20190513: 075733     DEBUG 35493[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcEventCommand|11||

20190513: 075733     DEBUG 35593[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 201905130757674 |1|2019-05-13|757|MODIFY_SERVICES               |83   |C|5||607878|833819663           |0004102502505            ||eppixcomm     
20190513: 075733     DEBUG 35792[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: EcEventCommand
Execute SQL Statement: INSERT INTO EC_EVENT_COMMAND (EC_COMMAND, EC_STATUS, EC_DATE, EC_TIME, EC_MESSAGE, EC_NETWORK, EC_TYPE, EC_PRIORITY, EC_SEND_SEQ, EC_SUBSCRIBER_ID, EC_MSISDN, EC_SIM, EC_OPERATOR, EC_TTY) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Argument(s): |201905130757674 |1|2019-05-13|757|MODIFY_SERVICES               |83   |C|5||607878|833819663           |0004102502505            ||eppixcomm     |
20190513: 075733     DEBUG 35792[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcEventCommand )
20190513: 075733     DEBUG 35792[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractBLO.iterate(EcEventCommandAbstractBLO.java:494) - iterate( filter )
20190513: 075733     DEBUG 35792[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractDACImpl.iterate(EcEventCommandAbstractDACImpl.java:492) - iterate( filter )
20190513: 075733     DEBUG 35793[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcEventCommand|0|equalEcMsisdn~|equalEcSim+INEcMessage_2+INEcStatus_3+notequalEcCommand|EcCommanddesc

20190513: 075733     DEBUG 36092[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: EcEventCommand
Execute SQL Statement: SELECT EC_COMMAND, EC_STATUS, EC_DATE, EC_TIME, EC_MESSAGE, EC_NETWORK, EC_TYPE, EC_PRIORITY, EC_SEND_SEQ, EC_SUBSCRIBER_ID, EC_MSISDN, EC_SIM, EC_OPERATOR, EC_TTY
FROM EC_EVENT_COMMAND
WHERE (EC_MSISDN) = ? AND ((EC_SIM) = ?) AND (EC_MESSAGE) IN ( ? , ? ) AND (EC_STATUS) IN ( ? , ? , ? ) AND (EC_COMMAND) != ? ORDER BY EC_COMMAND DESC
Argument(s): |833819663|0004102502505|ACTIVATE_SIM|RESUME_SIM|1|2|4|201905130757674|
20190513: 075733     DEBUG 36174[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NtpNetTransPend )
20190513: 075733     DEBUG 36174[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getNtpNetTransPendDAC(BaseDACFactory.java:176) - getNtpNetTransPendDAC()
20190513: 075733     DEBUG 36177[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl com.eppixcomm.eppix.base.dml.NtpNetTransPendDMLFactory@ab444
20190513: 075733     DEBUG 36178[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl
20190513: 075733     DEBUG 36178[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075733     DEBUG 36178[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl TO MAP
20190513: 075733     DEBUG 36179[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractBLO.create(NtpNetTransPendAbstractBLO.java:92) - create( NtpnetTransPendDMO )
20190513: 075733     DEBUG 36179[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractBLO.exists(NtpNetTransPendAbstractBLO.java:357) - exists(nmNetmat)
20190513: 075733     DEBUG 36179[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl.exists(NtpNetTransPendAbstractDACImpl.java:191) - exists( NtpNetTransPendDMO)
20190513: 075733     DEBUG 36179[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NtpNetTransPend|9|filterByPrimaryKey|

20190513: 075734     DEBUG 36451[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: NtpNetTransPend
Execute SQL Statement: SELECT DISTINCT(0)
FROM NTP_NET_TRANS_PEND
WHERE NTP_SERIAL_ID = ?
Argument(s): |0|
20190513: 075734     DEBUG 36621[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl.create(NtpNetTransPendAbstractDACImpl.java:63) - create( ntpNetTransPendDMO )
20190513: 075734     DEBUG 36621[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NtpNetTransPend|11||

20190513: 075734     DEBUG 36741[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 0|201905130757674 |0|  |607878|                    |                    |APNA|1|2019-05-13 07:57:33
20190513: 075734     DEBUG 36960[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: NtpNetTransPend
Execute SQL Statement: INSERT INTO NTP_NET_TRANS_PEND (NTP_SERIAL_ID, NTP_COMMAND, NTP_SEND_SEQ,NTP_TRAN_TYPE, NTP_SUBSCRIBER_ID, NTP_OLD_VALUE, NTP_NEW_VALUE, NTP_SERVICE_CODE, NTP_STATUS, NTP_TIMESTAMP) VALUES (?,?,?,?,?,?,?,?,?,?)
Argument(s): |0|201905130757674 |0|  |607878|                    |                    |APNA|1|2019-05-13 07:57:33|
20190513: 075734     DEBUG 36962[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcdEventCmdDet )
20190513: 075734     DEBUG 36963[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getEcdEventCmdDetDAC(BaseDACFactory.java:161) - getEcdEventCmdDetDAC()
20190513: 075734     DEBUG 36965[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.EcdEventCmdDetDACImpl com.eppixcomm.eppix.base.dml.EcdEventCmdDetDMLFactory@15aed57
20190513: 075734     DEBUG 36965[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.EcdEventCmdDetDACImpl
20190513: 075734     DEBUG 36966[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075734     DEBUG 36966[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.EcdEventCmdDetDACImpl TO MAP
20190513: 075734     DEBUG 36966[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.create(EcdEventCmdDetAbstractBLO.java:184) - create( ecdEventCmdDetDMO )
20190513: 075734     DEBUG 36967[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.exists(EcdEventCmdDetAbstractBLO.java:411) - exists(ecdEventCmdDet)
20190513: 075734     DEBUG 36967[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.exists(EcdEventCmdDetAbstractDACImpl.java:236) - exists( EcdEventCmdDetDMO)
20190513: 075734     DEBUG 36967[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|9|filterByPrimaryKey|

20190513: 075734     DEBUG 37279[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: EcdEventCmdDet
Execute SQL Statement: SELECT DISTINCT(0)
FROM ECD_EVENT_CMD_DET
WHERE (ECD_COMMAND) = ? AND  ECD_SEQNO = ?
Argument(s): |201905130757674 |1|
20190513: 075735     DEBUG 37431[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.create(EcdEventCmdDetAbstractDACImpl.java:100) - create( ecdEventCmdDetDMO )
20190513: 075735     DEBUG 37432[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|11||

20190513: 075735     DEBUG 37530[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 201905130757674 |1|DET|[SERVICE_REQUEST_HEADER],SERV_REQ_TYPE=Modify_Subscriber_Services,ICC_ID=8927000004102502505,IMSI=null,PRIMARY_MSISDN=833819663,LOCATION=M1,SPID=        59,NETWORK_TARIFF=ASL,NETWORK_ID=M1,TRANS_ID=0046989891,PRIORITY=5,VERSION_NO=1.0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             | |2019-05-13 07:57:34
20190513: 075735     DEBUG 37818[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: EcdEventCmdDet
Execute SQL Statement: INSERT INTO ECD_EVENT_CMD_DET (ECD_COMMAND, ECD_SEQNO, ECD_DET_TYPE, ECD_TEXT, ECD_FLAG, ECD_TIMESTAMP) VALUES (?,?,?,?,?,?)
Argument(s): |201905130757674 |1|DET|[SERVICE_REQUEST_HEADER],SERV_REQ_TYPE=Modify_Subscriber_Services,ICC_ID=8927000004102502505,IMSI=null,PRIMARY_MSISDN=833819663,LOCATION=M1,SPID=        59,NETWORK_TARIFF=ASL,NETWORK_ID=M1,TRANS_ID=0046989891,PRIORITY=5,VERSION_NO=1.0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             | |2019-05-13 07:57:34|
20190513: 075735     DEBUG 37820[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createN2NDetailSegment(SubscriberUpgradeMigradeBLO.java:33011) - 
N2N_CreateDetailSegment
NETWORK: M1
NET SERV CODE: APN
COMMAND: 201905130757674
SEQ NO: 1
SIM: 0004102502505
NETWORK: M1
MSISDN: 
CATEGORY: ORDINARY
RESTRICTION: RR
MS STATE: U_ADMIN
TARIFF TYPE: CTRCT
PERIMARY SIM: 
SECOND SIM: 0004102502505
PRIMARY MISISDN: 
SECOND MSISDN: 
SERVICE TYPE: AP
SERVICE CODE: APNA
SUBSCRIBER: 607878
OPTION: MODIFY
20190513: 075735     DEBUG 37821[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NgsNetGroupServ )
20190513: 075735     DEBUG 37822[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractBLO.iterate(NgsNetGroupServAbstractBLO.java:563) - iterate( filter )
20190513: 075735     DEBUG 37823[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractDACImpl.iterate(NgsNetGroupServAbstractDACImpl.java:618) - iterate( filter )
20190513: 075735     DEBUG 37824[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NgsNetGroupServ|0|equalNgsCode+equalNgsNetwork|NgsSequenceasc

20190513: 075735     DEBUG 38058[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: NgsNetGroupServ
Execute SQL Statement: SELECT NGS_CODE, NGS_NETWORK, NGS_NET_SERV_CODE, NGS_SEQUENCE, NGS_APPLY_TEXT, NGS_MODIFY_TEXT, NGS_REMOVE_TEXT, NGS_PARAM_NAME1, NGS_PARAM_VALUE1, NGS_PARAM_NAME2, NGS_PARAM_VALUE2, NGS_PARAM_NAME3, NGS_PARAM_VALUE3, NGS_PARAM_NAME4, NGS_PARAM_VALUE4, NGS_PARAM_NAME5, NGS_PARAM_VALUE5
FROM NGS_NET_GROUP_SERV
WHERE NGS_CODE = ? AND NGS_NETWORK = ? ORDER BY NGS_SEQUENCE ASC
Argument(s): |APN|M1|
20190513: 075735     DEBUG 38058[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 075735     DEBUG 38058[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 075735     DEBUG 38059[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 075735     DEBUG 38059[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 075735     DEBUG 38129[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASGENMBM1|
20190513: 075735     DEBUG 38129[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1cd66ea
20190513: 075735     DEBUG 38248[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 075735     DEBUG 38248[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 075735     DEBUG 38248[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 075735     DEBUG 38248[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 075735     DEBUG 38307[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASMBPWDM1|
20190513: 075735     DEBUG 38307[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1fbfd6
20190513: 075736     DEBUG 38437[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9355) - 
=======================================================================================
PARAM OPTION: ALL
PARAM SIM NO: 0004102502505
PARAM NETWORK ID: 
PARAM HLR: 
PARAM DEALER ID: 
PARAM CUSTOMER: 
=======================================================================================
20190513: 075736     DEBUG 38437[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SacSimAssignCus )
20190513: 075736     DEBUG 38437[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractBLO.get(SacSimAssignCusAbstractBLO.java:287) - get( filter )
20190513: 075736     DEBUG 38437[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractDACImpl.get(SacSimAssignCusAbstractDACImpl.java:205) - get( filter )
20190513: 075736     DEBUG 38437[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SacSimAssignCus|0|equalSacSimNo|

20190513: 075736     DEBUG 38497[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SacSimAssignCus
Execute SQL Statement: SELECT SAC_BILL_AC_NO, SAC_SIM_NO 
FROM sac_sim_assign_cus
WHERE SAC_SIM_NO = ? 
Argument(s): |0004102502505|
20190513: 075736      INFO 38617[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9984) - Passed customer no  not found in Sac_Sim_assign_cus
20190513: 075736     DEBUG 38617[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190513: 075736     DEBUG 38617[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190513: 075736     DEBUG 38617[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190513: 075736     DEBUG 38617[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo|

20190513: 075736     DEBUG 38687[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ?
Argument(s): |0004102502505|
20190513: 075736     DEBUG 38689[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1be16f5
20190513: 075736     DEBUG 38915[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:10075) - NETWORK PARAMS: OPTION: ALL NETWORK ID:  NETWORKID.LENGTH: 0
20190513: 075736     DEBUG 38916[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VstServiceTypes )
20190513: 075736     DEBUG 38916[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractBLO.get(VstServiceTypesAbstractBLO.java:595) - get( filter )
20190513: 075736     DEBUG 38916[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractDACImpl.get(VstServiceTypesAbstractDACImpl.java:540) - get( filter )
20190513: 075736     DEBUG 38916[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VstServiceTypes|0|equalVstServiceType|

20190513: 075736     DEBUG 39066[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VstServiceTypes
Execute SQL Statement: SELECT VST_SERVICE_TYPE, VST_SERVICE_DESC, VST_MULTI_CHARGE, VST_SERVICE_CLASS, VST_AUTO_CONNECT, VST_ORIGINATOR, VST_TARIFF_RELATED, VST_PARAMETERISED, VST_PARAMS_LEVEL, VST_ARCHIVE_MONTHS, VST_FUTURE_ACT, VST_NODE_LEVEL
FROM VST_SERVICE_TYPES
WHERE VST_SERVICE_TYPE = ?
Argument(s): |AP|
20190513: 075736     DEBUG 39066[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@d56b37
20190513: 075736     DEBUG 39277[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.PshParamServHdr )
20190513: 075736     DEBUG 39277[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getPshParamServHdrDAC(BaseDACFactory.java:194) - getPshParamServHdrDAC()
20190513: 075736     DEBUG 39303[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.PshParamServHdrDACImpl com.eppixcomm.eppix.base.dml.PshParamServHdrAbstractDMLFactory@1724a9d
20190513: 075736     DEBUG 39303[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.PshParamServHdrDACImpl
20190513: 075736     DEBUG 39304[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 075736     DEBUG 39304[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.PshParamServHdrDACImpl TO MAP
20190513: 075736     DEBUG 39304[main] - com.eppixcomm.eppix.base.blo.PshParamServHdrAbstractBLO.get(PshParamServHdrAbstractBLO.java:516) - get( filter )
20190513: 075736     DEBUG 39305[main] - com.eppixcomm.eppix.base.blo.PshParamServHdrAbstractDACImpl.get(PshParamServHdrAbstractDACImpl.java:448) - get( filter )
20190513: 075736     DEBUG 39305[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
PshParamServHdr|0|equalPshServiceCode+equalPshSubscriberId+equalPshSimNo+equalPshArchived|

20190513: 075737     DEBUG 39655[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: PshParamServHdr
Execute SQL Statement: SELECT PSH_ID, PSH_SERVICE_CODE, PSH_SERVICE_TYPE, PSH_SUBSCRIBER_ID, PSH_SIM_NO, PSH_MSISDN_NO, PSH_ARCHIVED
FROM PSH_PARAM_SERV_HDR
WHERE (PSH_SERVICE_CODE) = ? AND PSH_SUBSCRIBER_ID = ? AND (PSH_SIM_NO) = ? AND (PSH_ARCHIVED) = ?
Argument(s): |APNA|607878|0004102502505|N|
20190513: 075737     ERROR 39835[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getPsh(SubscriberUpgradeMigradeBLO.java:6549) - Service code does not exists on parameter service code: APNA: Sim no: 0004102502505: Msisdn No: 
20190513: 075737     ERROR 39835[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createN2NDetailSegment(SubscriberUpgradeMigradeBLO.java:33654) - NO HEADER FOUND
20190513: 075737     ERROR 39835[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1924) - NO HEADER FOUND
20190513: 075737      INFO 39835[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:109) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: N2N creation failed: NO HEADER FOUND
20190513: 082807     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:150) - loading appProperties
20190513: 082807     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:157) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190513: 082807     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:170) - DB Connection start
20190513: 082807     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:173) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190513: 082832     DEBUG 25094[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190513: 082832     DEBUG 25096[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190513: 082832     DEBUG 25096[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190513: 082832     DEBUG 25097[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190513: 082832     DEBUG 25120[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190513: 082832     DEBUG 25128[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@1989f84
20190513: 082832     DEBUG 25129[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190513: 082832     DEBUG 25155[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 082832     DEBUG 25155[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190513: 082832     DEBUG 25156[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 082832     DEBUG 25159[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190513: 082832     DEBUG 25160[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@13adc56
20190513: 082832     DEBUG 25161[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190513: 082832     DEBUG 25161[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 082832     DEBUG 25162[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190513: 082832     DEBUG 25163[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190513: 082832     DEBUG 25165[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190513: 082832     DEBUG 25166[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1f8c6df
20190513: 082832     DEBUG 25168[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190513: 082832     DEBUG 25169[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 082832     DEBUG 25169[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190513: 082832     DEBUG 25171[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190513: 082832     DEBUG 25173[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190513: 082832     DEBUG 25175[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@110fe28
20190513: 082832     DEBUG 25175[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190513: 082832     DEBUG 25176[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 082832     DEBUG 25176[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190513: 082832     DEBUG 25176[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 082832     DEBUG 25185[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 082833     DEBUG 25361[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190513: 082833     DEBUG 25366[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@6cb8
20190513: 082833     DEBUG 25367[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190513: 082833     DEBUG 25372[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 082833     DEBUG 25372[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190513: 082833     DEBUG 25373[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 082833     DEBUG 25373[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190513: 082833     DEBUG 25373[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 082833     DEBUG 25373[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 082833     DEBUG 25373[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:200) - DB Connection successfull
20190513: 082833     DEBUG 25373[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1379) - 
Integer subscriberID: 607878
String msisdn: null
String serviceCode: APNA
String partnerId: null
20190513: 082833     DEBUG 25376[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 082833     DEBUG 25455[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbdSubDetsDAC(BaseAbstractDACFactory.java:234) - getSbdSubDetsDAC()
20190513: 082833     DEBUG 25464[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl com.eppixcomm.eppix.base.dml.SbdSubDetsAbstractDMLFactory@1f06dc3
20190513: 082833     DEBUG 25464[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl
20190513: 082833     DEBUG 25466[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 082833     DEBUG 25466[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl TO MAP
20190513: 082833     DEBUG 25467[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 082833     DEBUG 25467[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 082833     DEBUG 25474[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 083451     DEBUG     1[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:150) - loading appProperties
20190513: 083451     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:157) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190513: 083451     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:170) - DB Connection start
20190513: 083451     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:173) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190513: 083452     DEBUG   814[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190513: 083452     DEBUG   816[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190513: 083452     DEBUG   816[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190513: 083452     DEBUG   816[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190513: 083452     DEBUG   839[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190513: 083452     DEBUG   844[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@1b8f864
20190513: 083452     DEBUG   846[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190513: 083452     DEBUG   870[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083452     DEBUG   871[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190513: 083452     DEBUG   872[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 083452     DEBUG   874[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190513: 083452     DEBUG   876[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@3e89c3
20190513: 083452     DEBUG   876[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190513: 083452     DEBUG   877[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083452     DEBUG   877[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190513: 083452     DEBUG   879[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190513: 083452     DEBUG   881[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190513: 083452     DEBUG   882[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@120d62b
20190513: 083452     DEBUG   884[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190513: 083452     DEBUG   884[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083452     DEBUG   884[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190513: 083452     DEBUG   886[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190513: 083452     DEBUG   889[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190513: 083452     DEBUG   890[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@140c281
20190513: 083452     DEBUG   891[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190513: 083452     DEBUG   891[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083452     DEBUG   891[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190513: 083452     DEBUG   892[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 083452     DEBUG   900[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 083452     DEBUG  1068[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190513: 083452     DEBUG  1073[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@162dbb6
20190513: 083452     DEBUG  1074[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190513: 083452     DEBUG  1079[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083452     DEBUG  1079[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190513: 083452     DEBUG  1079[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 083452     DEBUG  1079[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190513: 083452     DEBUG  1079[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 083452     DEBUG  1080[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 083452     DEBUG  1080[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:200) - DB Connection successfull
20190513: 083452     DEBUG  1080[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1379) - 
Integer subscriberID: 607878
String msisdn: null
String serviceCode: APNA
String partnerId: null
20190513: 083452     DEBUG  1082[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 083452     DEBUG  1165[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbdSubDetsDAC(BaseAbstractDACFactory.java:234) - getSbdSubDetsDAC()
20190513: 083452     DEBUG  1174[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl com.eppixcomm.eppix.base.dml.SbdSubDetsAbstractDMLFactory@1d0fafc
20190513: 083452     DEBUG  1174[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl
20190513: 083452     DEBUG  1176[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083452     DEBUG  1176[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl TO MAP
20190513: 083452     DEBUG  1176[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 083452     DEBUG  1176[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 083452     DEBUG  1183[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 083452     DEBUG  1392[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 083452     DEBUG  1395[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@fcfa52
20190513: 083452     DEBUG  1493[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 083452     DEBUG  1494[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190513: 083452     DEBUG  1504[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@e5bbd6
20190513: 083452     DEBUG  1504[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190513: 083452     DEBUG  1507[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083452     DEBUG  1507[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190513: 083452     DEBUG  1507[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190513: 083452     DEBUG  1508[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190513: 083452     DEBUG  1509[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190513: 083453     DEBUG  1682[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 083453     DEBUG  1688[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1e845c2
20190513: 083453     DEBUG  1743[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190513: 083453     DEBUG  1744[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVasActiveServiceDAC(BaseAbstractDACFactory.java:1177) - getVasActiveServiceDAC()
20190513: 083453     DEBUG  1747[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl com.eppixcomm.eppix.base.dml.VasActiveServiceDMLFactory@102799c
20190513: 083453     DEBUG  1747[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl
20190513: 083453     DEBUG  1748[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083453     DEBUG  1749[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl TO MAP
20190513: 083453     DEBUG  1749[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190513: 083453     DEBUG  1749[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190513: 083453     DEBUG  1749[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode|

20190513: 083453     DEBUG  1922[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ? 
Argument(s): |607878|APNA|
20190513: 083453     DEBUG  2024[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TsTariffService )
20190513: 083453     DEBUG  2025[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getTsTariffServiceDAC(BaseDACFactory.java:287) - getTsTariffServiceDAC()
20190513: 083453     DEBUG  2028[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl com.eppixcomm.eppix.base.dml.TsTariffServiceAbstractDMLFactory@b25b9d
20190513: 083453     DEBUG  2029[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl
20190513: 083453     DEBUG  2030[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083453     DEBUG  2030[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl TO MAP
20190513: 083453     DEBUG  2030[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractBLO.get(TsTariffServiceAbstractBLO.java:593) - get( filter )
20190513: 083453     DEBUG  2030[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractDACImpl.get(TsTariffServiceAbstractDACImpl.java:589) - get( filter )
20190513: 083453     DEBUG  2031[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TsTariffService|0|equalTsServiceCode+equalTsPackageCode+equalTsInternalTariff|

20190513: 083453     DEBUG  2192[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TsTariffService
Execute SQL Statement: SELECT TS_PACKAGE_CODE, TS_INTERNAL_TARIFF, TS_SERVICE_CODE, TS_NET_SERV_CODE, TS_ACT_CHARGE, TS_TDEACT_CHARGE, TS_REACT_CHARGE, TS_PDEACT_CHARGE, TS_SUB_CHARGE1, TS_SUB_CHARGE2, TS_SUB_CHARGE3, TS_CHARGE_PERIOD, TS_CHARGE_FREQ, TS_DISCOUNT_REF, TS_ACT_INCLUSIVE
FROM TS_TARIFF_SERVICE
WHERE (TS_SERVICE_CODE) = ? AND (TS_PACKAGE_CODE) = ? AND (TS_INTERNAL_TARIFF) = ?
Argument(s): |APNA|500FF|ASKYL36M|
20190513: 083453     DEBUG  2193[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@c09554
20190513: 083453     DEBUG  2292[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getServRuleVas
20190513: 083453     DEBUG  2293[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getServRuleVas|0||

20190513: 083453     DEBUG  2452[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getServRuleVas
Execute SQL Statement: SELECT count(*) FROM svr_serv_rule, vas_active_service WHERE svr_serv_type = 'E' AND svr_target_serv = vas_service_code AND svr_primary_serv = ? AND vas_subscriber_id =? 
Argument(s): |APNA|607878|
20190513: 083453     DEBUG  2454[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@476128
20190513: 083454     DEBUG  2672[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 083454     DEBUG  2672[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 083454     DEBUG  2672[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 083454     DEBUG  2673[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 083454     DEBUG  2742[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 083454     DEBUG  2743[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@18235ed
20190513: 083454     DEBUG  2934[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbaSubAux )
20190513: 083454     DEBUG  2935[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbaSubAuxDAC(BaseAbstractDACFactory.java:995) - getSbaSubAuxDAC()
20190513: 083454     DEBUG  2943[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbaSubAuxDACImpl com.eppixcomm.eppix.base.dml.SbaSubAuxDMLFactory@11978b
20190513: 083454     DEBUG  2943[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbaSubAuxDACImpl
20190513: 083454     DEBUG  2945[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083454     DEBUG  2946[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbaSubAuxDACImpl TO MAP
20190513: 083454     DEBUG  2946[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractBLO.get(SbaSubAuxAbstractBLO.java:283) - get( filter )
20190513: 083454     DEBUG  2946[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractDACImpl.get(SbaSubAuxAbstractDACImpl.java:101) - get( filter )
20190513: 083454     DEBUG  2947[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbaSubAux|0|equalSbaSubscriberId|

20190513: 083454     DEBUG  3234[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbaSubAux
Execute SQL Statement: SELECT SBA_SUBSCRIBER_ID, SBA_ID_NUMBER, SBA_MATCHCODE, SBA_MARKETING, SBA_THIRD_PARTY, SBA_CUST_DEPT, SBA_DEALER_ID, SBA_DEPARTMENT, SBA_SALESMAN, SBA_REGION, SBA_INVOICE_ADDRID, SBA_INV_ACCOUNT, SBA_PREPAID_STAT, SBA_ANALYSIS_1, SBA_ANALYSIS_2, SBA_ANALYSIS_3, SBA_ANALYSIS_4, SBA_ANALYSIS_5, SBA_ANALYSIS_6, SBA_ANALYSIS_7, SBA_ANALYSIS_8, SBA_ANALYSIS_9, SBA_ANALYSIS_10, SBA_ANALYSIS_11, SBA_ANALYSIS_12, SBA_ANALYSIS_13, SBA_ANALYSIS_14, SBA_ANALYSIS_15, SBA_ANALYSIS_16, SBA_ANALYSIS_17, SBA_ANALYSIS_18, SBA_ANALYSIS_19, SBA_ANALYSIS_20, SBA_ANALYSIS_21, SBA_ANALYSIS_22, SBA_ANALYSIS_23, SBA_ANALYSIS_24, SBA_ANALYSIS_25, SBA_ANALYSIS_26, SBA_ANALYSIS_27, SBA_ANALYSIS_28, SBA_ANALYSIS_29, SBA_ANALYSIS_30,SBA_COMMENTS
FROM SBA_SUB_AUX
WHERE SBA_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 083454     DEBUG  3235[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@f7c31d
20190513: 083454     DEBUG  3363[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd1
20190513: 083454     DEBUG  3363[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd1|0||

20190513: 083455     DEBUG  3604[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd1
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |P|500FF||||
20190513: 083455     DEBUG  3723[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd1
20190513: 083455     DEBUG  3724[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd1|0||

20190513: 083455     DEBUG  3793[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd1
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |T|ASKYL36M||||
20190513: 083455     DEBUG  3953[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd1
20190513: 083455     DEBUG  3953[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd1|0||

20190513: 083455     DEBUG  4063[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd1
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |S|APNA||||
20190513: 083455     DEBUG  4313[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: userRestrictionGetAdd3
20190513: 083455     DEBUG  4313[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
userRestrictionGetAdd3|0||

20190513: 083456     DEBUG  4553[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: userRestrictionGetAdd3
Execute SQL Statement: SELECT UNIQUE(0) FROM ur_user_restrict ur1  WHERE ur_add = 'Y'  AND ur_type = ?  AND ur_code = ?  AND ur_right_id IN  (SELECT ur2.ur_right_id FROM ur_user_restrict ur2  WHERE ur_type = ?  AND ur_code = ?  AND ur1.ur_group_id = ur2.ur_group_id  AND ur_right_id IN  (SELECT ur3.ur_right_id FROM ur_user_restrict ur3  WHERE ur_type = ?  AND ur_code = ?  AND ur1.ur_group_id = ur3.ur_group_id))  AND (ur_right_id IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'Y')  OR ur_right_id IN  (SELECT urr_right_id FROM urr_role_right,  uur_user_role  WHERE uur_role_id = urr_role_id  AND uur_login = ?  AND urr_right_id NOT IN  (SELECT uut_right_id FROM uut_user_right  WHERE uut_login = ?  AND uut_add_remove = 'N')  ))
Argument(s): |P3|500FF|S3|APNA|T3|ASKYL36M||||
20190513: 083456     DEBUG  4654[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190513: 083456     DEBUG  4655[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSmnSimNosDAC(BaseAbstractDACFactory.java:387) - getSmnSimNosDAC()
20190513: 083456     DEBUG  4659[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SmnSimNosDACImpl com.eppixcomm.eppix.base.dml.SmnSimNosDMLFactory@1171b26
20190513: 083456     DEBUG  4659[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SmnSimNosDACImpl
20190513: 083456     DEBUG  4661[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083456     DEBUG  4661[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SmnSimNosDACImpl TO MAP
20190513: 083456     DEBUG  4661[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190513: 083456     DEBUG  4663[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190513: 083456     DEBUG  4664[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo|

20190513: 083456     DEBUG  4813[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ?
Argument(s): |0004102502505|
20190513: 083456     DEBUG  4814[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@12a55aa
20190513: 083456     DEBUG  4913[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9355) - 
=======================================================================================
PARAM OPTION: ACTIVE
PARAM SIM NO: 0004102502505
PARAM NETWORK ID: 
PARAM HLR: 
PARAM DEALER ID: 
PARAM CUSTOMER: 
=======================================================================================
20190513: 083456     DEBUG  4914[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SacSimAssignCus )
20190513: 083456     DEBUG  4915[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSacSimAssignCusDAC(BaseAbstractDACFactory.java:1345) - getSacSimAssignCusDAC()
20190513: 083456     DEBUG  4917[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SacSimAssignCusDACImpl com.eppixcomm.eppix.base.dml.SacSimAssignCusDMLFactory@618d26
20190513: 083456     DEBUG  4917[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SacSimAssignCusDACImpl
20190513: 083456     DEBUG  4918[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083456     DEBUG  4918[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SacSimAssignCusDACImpl TO MAP
20190513: 083456     DEBUG  4918[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractBLO.get(SacSimAssignCusAbstractBLO.java:287) - get( filter )
20190513: 083456     DEBUG  4918[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractDACImpl.get(SacSimAssignCusAbstractDACImpl.java:205) - get( filter )
20190513: 083456     DEBUG  4919[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SacSimAssignCus|0|equalSacSimNo|

20190513: 083456     DEBUG  5133[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SacSimAssignCus
Execute SQL Statement: SELECT SAC_BILL_AC_NO, SAC_SIM_NO 
FROM sac_sim_assign_cus
WHERE SAC_SIM_NO = ? 
Argument(s): |0004102502505|
20190513: 083456      INFO  5273[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9984) - Passed customer no  not found in Sac_Sim_assign_cus
20190513: 083456     DEBUG  5273[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190513: 083456     DEBUG  5273[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190513: 083456     DEBUG  5273[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190513: 083456     DEBUG  5273[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo+equalSmnStatus|

20190513: 083457     DEBUG  5523[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ? AND SMN_STATUS = ?
Argument(s): |0004102502505|1|
20190513: 083457     DEBUG  5523[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1d1e730
20190513: 083457     DEBUG  5653[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:10075) - NETWORK PARAMS: OPTION: ACTIVE NETWORK ID:  NETWORKID.LENGTH: 0
20190513: 083457     DEBUG  5653[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5665) - 
STEP 1
20190513: 083457     DEBUG  5653[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5684) - 
STEP 3
20190513: 083457     DEBUG  5653[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5689) - 
STEP 4
20190513: 083457     DEBUG  5653[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5691) - BASE: com.eppixcomm.eppix.base.blo.BaseBLOBinder@1a116c9
20190513: 083457     DEBUG  5654[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsrService )
20190513: 083457     DEBUG  5655[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVsrServiceDAC(BaseAbstractDACFactory.java:486) - getVsrServiceDAC()
20190513: 083457     DEBUG  5661[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VsrServiceDACImpl com.eppixcomm.eppix.base.dml.VsrServiceDMLFactory@d3db51
20190513: 083457     DEBUG  5661[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VsrServiceDACImpl
20190513: 083457     DEBUG  5663[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083457     DEBUG  5663[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VsrServiceDACImpl TO MAP
20190513: 083457     DEBUG  5663[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractBLO.get(VsrServiceAbstractBLO.java:576) - get( filter )
20190513: 083457     DEBUG  5664[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractDACImpl.get(VsrServiceAbstractDACImpl.java:517) - get( filter )
20190513: 083457     DEBUG  5664[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsrService|0|equalVsrServiceCode|

20190513: 083457     DEBUG  5923[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VsrService
Execute SQL Statement: SELECT VSR_SERVICE_CODE, VSR_SERVICE_TYPE, VSR_SERVICE_DESC, VSR_ORIGINATOR, VSR_SERVICE_CLASS, VSR_TEMP_DEACT, VSR_PRORATA, VSR_PROVIDER_ID, VSR_SHORT_DESC, VSR_SUSPEND
FROM VSR_SERVICE
WHERE VSR_SERVICE_CODE = ?
Argument(s): |APNA|
20190513: 083457     DEBUG  5923[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1e57e8f
20190513: 083457     DEBUG  6063[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getService(SubscriberUpgradeMigradeBLO.java:5695) - 
STEP 5
20190513: 083457     DEBUG  6064[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190513: 083457     DEBUG  6064[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSksKeySettingDAC(BaseAbstractDACFactory.java:314) - getSksKeySettingDAC()
20190513: 083457     DEBUG  6069[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SksKeySettingDACImpl com.eppixcomm.eppix.base.dml.SksKeySettingAbstractDMLFactory@766a24
20190513: 083457     DEBUG  6069[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SksKeySettingDACImpl
20190513: 083457     DEBUG  6070[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083457     DEBUG  6071[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SksKeySettingDACImpl TO MAP
20190513: 083457     DEBUG  6071[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190513: 083457     DEBUG  6071[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190513: 083457     DEBUG  6071[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190513: 083457     DEBUG  6313[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |PRTNSRVTYP|
20190513: 083457     DEBUG  6314[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1774b9b
20190513: 083457     DEBUG  6494[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VpsPackageServ )
20190513: 083457     DEBUG  6494[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVpsPackageServDAC(BaseAbstractDACFactory.java:473) - getVpsPackageServDAC()
20190513: 083457     DEBUG  6497[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VpsPackageServDACImpl com.eppixcomm.eppix.base.dml.VpsPackageServDMLFactory@da6bf4
20190513: 083457     DEBUG  6497[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VpsPackageServDACImpl
20190513: 083457     DEBUG  6501[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083457     DEBUG  6501[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VpsPackageServDACImpl TO MAP
20190513: 083457     DEBUG  6501[main] - com.eppixcomm.eppix.base.blo.VpsPackageServAbstractBLO.get(VpsPackageServAbstractBLO.java:570) - get( filter )
20190513: 083457     DEBUG  6501[main] - com.eppixcomm.eppix.base.blo.VpsPackageServAbstractDACImpl.get(VpsPackageServAbstractDACImpl.java:489) - get( filter )
20190513: 083457     DEBUG  6502[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VpsPackageServ|0|equalVpsPackageCode+equalVpsServiceCode|

20190513: 083458     DEBUG  6833[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VpsPackageServ
Execute SQL Statement: SELECT VPS_PACKAGE_CODE, VPS_SERVICE_CODE, VPS_ALTER_CHARGE, VPS_MULTI_CHARGE, VPS_CHANGE_MULTI, VPS_PRICE_BY_TARIF, VPS_AUTO_CONNECT
FROM VPS_PACKAGE_SERV
WHERE (VPS_PACKAGE_CODE) = ? AND (VPS_SERVICE_CODE) = ?
Argument(s): |500FF|APNA|
20190513: 083458     DEBUG  6834[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@11dba45
20190513: 083458     DEBUG  7043[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TsTariffService )
20190513: 083458     DEBUG  7043[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractBLO.get(TsTariffServiceAbstractBLO.java:593) - get( filter )
20190513: 083458     DEBUG  7043[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractDACImpl.get(TsTariffServiceAbstractDACImpl.java:589) - get( filter )
20190513: 083458     DEBUG  7043[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TsTariffService|0|equalTsPackageCode+equalTsServiceCode+equalornullTsInternalTariff|

20190513: 083458     DEBUG  7363[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TsTariffService
Execute SQL Statement: SELECT TS_PACKAGE_CODE, TS_INTERNAL_TARIFF, TS_SERVICE_CODE, TS_NET_SERV_CODE, TS_ACT_CHARGE, TS_TDEACT_CHARGE, TS_REACT_CHARGE, TS_PDEACT_CHARGE, TS_SUB_CHARGE1, TS_SUB_CHARGE2, TS_SUB_CHARGE3, TS_CHARGE_PERIOD, TS_CHARGE_FREQ, TS_DISCOUNT_REF, TS_ACT_INCLUSIVE
FROM TS_TARIFF_SERVICE
WHERE (TS_PACKAGE_CODE) = ? AND (TS_SERVICE_CODE) = ? AND ((TS_INTERNAL_TARIFF) = ? OR TS_INTERNAL_TARIFF IS NULL)
Argument(s): |500FF|APNA|ASKYL36M|
20190513: 083458     DEBUG  7363[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@b03be0
20190513: 083458     DEBUG  7463[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VstServiceTypes )
20190513: 083458     DEBUG  7464[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVstServiceTypesDAC(BaseAbstractDACFactory.java:499) - getVstServiceTypesDAC()
20190513: 083458     DEBUG  7467[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VstServiceTypesDACImpl com.eppixcomm.eppix.base.dml.VstServiceTypesDMLFactory@71dc3d
20190513: 083458     DEBUG  7467[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VstServiceTypesDACImpl
20190513: 083458     DEBUG  7468[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083458     DEBUG  7469[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VstServiceTypesDACImpl TO MAP
20190513: 083458     DEBUG  7469[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractBLO.get(VstServiceTypesAbstractBLO.java:595) - get( filter )
20190513: 083458     DEBUG  7469[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractDACImpl.get(VstServiceTypesAbstractDACImpl.java:540) - get( filter )
20190513: 083458     DEBUG  7469[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VstServiceTypes|0|equalVstServiceType|

20190513: 083459     DEBUG  7642[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VstServiceTypes
Execute SQL Statement: SELECT VST_SERVICE_TYPE, VST_SERVICE_DESC, VST_MULTI_CHARGE, VST_SERVICE_CLASS, VST_AUTO_CONNECT, VST_ORIGINATOR, VST_TARIFF_RELATED, VST_PARAMETERISED, VST_PARAMS_LEVEL, VST_ARCHIVE_MONTHS, VST_FUTURE_ACT, VST_NODE_LEVEL
FROM VST_SERVICE_TYPES
WHERE VST_SERVICE_TYPE = ?
Argument(s): |AP|
20190513: 083459     DEBUG  7643[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@16546ef
20190513: 083459      INFO  7762[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getServiceType(SubscriberUpgradeMigradeBLO.java:12935) - FOUND Service type from VST for AP
20190513: 083459     DEBUG  7763[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getMinVamConnectDate
20190513: 083459     DEBUG  7764[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getMinVamConnectDate|0||

20190513: 083459     DEBUG  7953[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getMinVamConnectDate
Execute SQL Statement: SELECT MIN((VAM_CONNECT_DATE)) FROM VAM_ACTIVE_MSISDN  WHERE VAM_SUBSCRIBER_ID = ?  AND VAM_STAT_CODE IN ( 1 , 4 )
Argument(s): |607878|
20190513: 083459     DEBUG  7955[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1af33d6
20190513: 083459     DEBUG  8065[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NmNetmat )
20190513: 083459     DEBUG  8065[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getNmNetmatDAC(BaseAbstractDACFactory.java:167) - getNmNetmatDAC()
20190513: 083459     DEBUG  8068[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.NmNetmatDACImpl com.eppixcomm.eppix.base.dml.NmNetmatDMLFactory@c79809
20190513: 083459     DEBUG  8068[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.NmNetmatDACImpl
20190513: 083459     DEBUG  8069[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083459     DEBUG  8070[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.NmNetmatDACImpl TO MAP
20190513: 083459     DEBUG  8070[main] - com.eppixcomm.eppix.base.blo.NmNetmatAbstractBLO.get(NmNetmatAbstractBLO.java:527) - get( filter )
20190513: 083459     DEBUG  8070[main] - com.eppixcomm.eppix.base.blo.NmNetmatAbstractDACImpl.get(NmNetmatAbstractDACImpl.java:501) - get( filter )
20190513: 083459     DEBUG  8073[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NmNetmat|0|equalNmInternalTariff|

20190513: 083459     DEBUG  8413[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: NmNetmat
Execute SQL Statement: SELECT NM_INTERNAL_TARIFF, NM_NETWORK_TARIFF, NM_CONTRACT_PERIOD, NM_NTWRK_CONTR_PER, NM_MIN_CANC_PERIOD, NM_HIGHER_MIG_TYPE, NM_LOWER_MIG_TYPE, NM_SAME_MIG_TYPE, NM_NETWORK_ID, NM_NET_TYPE 
FROM nm_netmat
WHERE NM_INTERNAL_TARIFF = ? 
Argument(s): |ASKYL36M|
20190513: 083459     DEBUG  8414[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@384065
20190513: 083500     DEBUG  8593[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: serviceExistsOnSim
20190513: 083500     DEBUG  8594[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
serviceExistsOnSim|0||

20190513: 083500     DEBUG  8823[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: serviceExistsOnSim
Execute SQL Statement: SELECT UNIQUE(0) FROM vam_active_msisdn, vsm_service_msisdn  WHERE vam_msisdn_no = vsm_msisdn_no AND vam_sim_no = ? AND vsm_service_code = ? 
Argument(s): |0004102502505|APNA|
20190513: 083500     DEBUG  8824[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@10bbf9e
20190513: 083500     ERROR  8963[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65083) - Service exist on SIM: 0004102502505 and Service Code: APNA
20190513: 083500     DEBUG  8963[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190513: 083500     DEBUG  8964[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190513: 083500     DEBUG  8964[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190513: 083500     DEBUG  8964[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190513: 083500     DEBUG  9033[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |VRSERVICE|
20190513: 083500     DEBUG  9034[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@513d61
20190513: 083500     DEBUG  9173[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190513: 083500     DEBUG  9176[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190513: 083500     DEBUG  9176[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190513: 083500     DEBUG  9176[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode+equalornullVasInternTariff|

20190513: 083500     DEBUG  9433[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ?  AND (VAS_INTERN_TARIFF = ? OR VAS_INTERN_TARIFF IS NULL) 
Argument(s): |607878|APNA|ASKYL36M|
20190513: 083501     ERROR  9553[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSubscriberService(SubscriberUpgradeMigradeBLO.java:5772) - Cannot SELECT subscriber service details from table vas_active_service for subscriber 607878 Service: APNA Tariff: ASKYL36M
20190513: 083501     DEBUG  9553[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65186) - 1 Before VAS create
20190513: 083501     DEBUG  9554[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65188) - 1A Before VAS createAP
20190513: 083501     DEBUG  9554[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65191) - 
Subscriber: 607878
connect_date: 2019-05-13
sub charge 1: null
sub charge 2: 
sub charge 3: 
multiCharge: N
tariff: ASKYL36M
20190513: 083501     DEBUG  9554[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65197) - VST TARIFF RELATED: Y
20190513: 083501     DEBUG  9554[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65217) - INSIDE TARIFF RELATED = 
20190513: 083501     DEBUG  9554[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65220) - 2 Before VAS create
20190513: 083501     DEBUG  9554[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
createVas|12||

20190513: 083501     DEBUG  9743[main] - com.eppixcomm.eppix.common.data.DAOImpl.execute(DAOImpl.java:3581) - execute(static SQL): DML Name: createVas
Execute SQL Statement: INSERT INTO VAS_ACTIVE_SERVICE (VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE)VALUES (?,?,?,?,?,?,?,?,?,?,?)
Argument(s): |607878|APNA|ASKYL36M|AP|2019-05-13|||||0|N|
20190513: 083501     DEBUG  9744[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getVasBillLimitByMsisdnTariff
20190513: 083501     DEBUG  9744[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getVasBillLimitByMsisdnTariff|0||

20190513: 083501     DEBUG  9983[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getVasBillLimitByMsisdnTariff
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE, VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE  FROM vas_active_service, vam_active_msisdn  WHERE vas_service_code = ?  AND vam_msisdn_no = ?  AND vas_subscriber_id = vam_subscriber_id  AND (vas_intern_tariff = ?  OR vas_intern_tariff IS NULL)
Argument(s): |APNA|833819663|ASKYL36M|
20190513: 083501     DEBUG  9984[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1bcdbf6
20190513: 083501     ERROR 10104[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65288) - Failed to get twinbill
20190513: 083501     DEBUG 10105[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 083501     DEBUG 10105[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190513: 083501     DEBUG 10105[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190513: 083501     DEBUG 10105[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId+equalVamSimNo+INVamStatCode_2|VamHierarchyasc,VamMsisdnKnownasc

20190513: 083501     DEBUG 10464[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ? AND (VAM_SIM_NO) = ? AND VAM_STAT_CODE IN ( ? , ? ) ORDER BY VAM_HIERARCHY ASC,VAM_MSISDN_KNOWN ASC
Argument(s): |607878|0004102502505|1|4|
20190513: 083501     DEBUG 10465[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@cf66b
20190513: 083502     DEBUG 10583[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 083502     DEBUG 10583[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 083502     DEBUG 10584[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 083502     DEBUG 10584[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 083502     DEBUG 10656[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 083502     DEBUG 10656[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@f9c40
20190513: 083502     DEBUG 10843[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190513: 083502     DEBUG 10843[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190513: 083502     DEBUG 10843[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190513: 083502     DEBUG 10844[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190513: 083502     DEBUG 10943[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |PRESTIGSVC|
20190513: 083502     DEBUG 10944[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@db4fa2
20190513: 083502     DEBUG 11083[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190513: 083502     DEBUG 11083[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190513: 083502     DEBUG 11084[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190513: 083502     DEBUG 11084[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode+equalornullVasInternTariff|

20190513: 083502     DEBUG 11153[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ?  AND (VAS_INTERN_TARIFF = ? OR VAS_INTERN_TARIFF IS NULL) 
Argument(s): |607878|PRST|ASKYL36M|
20190513: 083502     ERROR 11333[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.checkPrestigeSubscriber(SubscriberUpgradeMigradeBLO.java:9068) - Failed to get VAS records for subscriber: 607878 old service: ASKYL36M old tariff: PRST
20190513: 083502     DEBUG 11340[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsmServiceMsisdn )
20190513: 083502     DEBUG 11341[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVsmServiceMsisdnDAC(BaseDACFactory.java:271) - getVsmServiceMsisdnDAC()
20190513: 083502     DEBUG 11344[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VsmServiceMsisdnDACImpl com.eppixcomm.eppix.base.dml.VsmServiceMsisdnAbstractDMLFactory@165a3c2
20190513: 083502     DEBUG 11347[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VsmServiceMsisdnDACImpl
20190513: 083502     DEBUG 11347[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083502     DEBUG 11348[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VsmServiceMsisdnDACImpl TO MAP
20190513: 083502     DEBUG 11348[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractBLO.create(VsmServiceMsisdnAbstractBLO.java:209) - create( vsmServiceMsisdnDMO )
20190513: 083502     DEBUG 11348[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractBLO.exists(VsmServiceMsisdnAbstractBLO.java:453) - exists(vsmServiceMsisdn)
20190513: 083502     DEBUG 11348[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractDACImpl.exists(VsmServiceMsisdnAbstractDACImpl.java:249) - exists( VsmServiceMsisdnDMO)
20190513: 083502     DEBUG 11348[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsmServiceMsisdn|9|filterByPrimaryKey|

20190513: 083503     DEBUG 11623[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: VsmServiceMsisdn
Execute SQL Statement: SELECT DISTINCT(0)
FROM VSM_SERVICE_MSISDN
WHERE VSM_SUBSCRIBER_ID = ? AND  VSM_SERVICE_CODE = ? AND  VSM_MSISDN_NO = ?
Argument(s): |607878|APNA|833819663|
20190513: 083503      INFO 11695[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:156) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: vsmServiceMsisdnDMO does exist
20190513: 083503     ERROR 11695[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65386) - Exception inserting new VSM record for subscriber: 607878 EXCEPTION: com.eppixcomm.eppix.base.error.EPPIXBusinessException: vsmServiceMsisdnDMO does exist
20190513: 083503     DEBUG 11697[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.MshMsisdnHistory )
20190513: 083503     DEBUG 11697[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getMshMsisdnHistoryDAC(BaseAbstractDACFactory.java:762) - getMshMsisdnHistoryDAC()
20190513: 083503     DEBUG 11699[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.MshMsisdnHistoryDACImpl com.eppixcomm.eppix.base.dml.MshMsisdnHistoryDMLFactory@1884174
20190513: 083503     DEBUG 11702[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.MshMsisdnHistoryDACImpl
20190513: 083503     DEBUG 11702[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083503     DEBUG 11702[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.MshMsisdnHistoryDACImpl TO MAP
20190513: 083503     DEBUG 11703[main] - com.eppixcomm.eppix.base.blo.MshMsisdnHistoryAbstractBLO.create(MshMsisdnHistoryAbstractBLO.java:138) - create( mshMsisdnHistoryDMO )
20190513: 083503     DEBUG 11703[main] - com.eppixcomm.eppix.base.blo.MshMsisdnHistoryAbstractDACImpl.create(MshMsisdnHistoryAbstractDACImpl.java:98) - create( mshMsisdnHistoryDMO )
20190513: 083503     DEBUG 11703[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
MshMsisdnHistory|11||

20190513: 083503     DEBUG 11793[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 607878|833819663      |EAPA      |BAPA A0311553 APNA 0004102502505 2019-05-13       |||2019-05-13 08:35:03
20190513: 083503     DEBUG 11953[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: MshMsisdnHistory
Execute SQL Statement: INSERT INTO MSH_MSISDN_HISTORY (MSH_SUBSCRIBER_ID, MSH_MSISDN_NO, MSH_HIST_CODE, MSH_COMMENT, MSH_USER_ID, MSH_TERMINAL_ID, MSH_TIMESTAMP) VALUES (?,?,?,?,?,?,?)
Argument(s): |607878|833819663      |EAPA      |BAPA A0311553 APNA 0004102502505 2019-05-13       |||2019-05-13 08:35:03|
20190513: 083503     DEBUG 11955[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.ShcSmsHistcode )
20190513: 083503     DEBUG 11956[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getShcSmsHistcodeDAC(BaseAbstractDACFactory.java:1429) - getShcSmsHistcodeDAC()
20190513: 083503     DEBUG 11959[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.ShcSmsHistcodeDACImpl com.eppixcomm.eppix.base.dml.ShcSmsHistcodeDMLFactory@1e232b5
20190513: 083503     DEBUG 11959[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.ShcSmsHistcodeDACImpl
20190513: 083503     DEBUG 11961[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083503     DEBUG 11961[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.ShcSmsHistcodeDACImpl TO MAP
20190513: 083503     DEBUG 11962[main] - com.eppixcomm.eppix.base.blo.ShcSmsHistcodeAbstractBLO.get(ShcSmsHistcodeAbstractBLO.java:267) - get( filter )
20190513: 083503     DEBUG 11963[main] - com.eppixcomm.eppix.base.blo.ShcSmsHistcodeAbstractDACImpl.get(ShcSmsHistcodeAbstractDACImpl.java:192) - get( filter )
20190513: 083503     DEBUG 11963[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
ShcSmsHistcode|0|equalShcHistCode|

20190513: 083503     DEBUG 12213[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: ShcSmsHistcode
Execute SQL Statement: SELECT SHC_MESG_ID, SHC_HIST_CODE 
FROM shc_sms_histcode
WHERE SHC_HIST_CODE = ? 
Argument(s): |EAPA|
20190513: 083503     DEBUG 12393[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65424) - BEFORE CHECK : (multiCharge.equals('Y') || firstOnSim
20190513: 083503     DEBUG 12393[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65426) - 
multiCharge: N
firstOnSim: true
vamDmo.getVamMsisdnNo: 833819663
20190513: 083503     DEBUG 12393[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65441) - BEFORE updateVsmBilledupto
20190513: 083503     DEBUG 12394[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.updateVsmBilledupto(SubscriberUpgradeMigradeBLO.java:6453) - 
updateVsmBilledupto 
Subscriber: 607878
msisdnNo: 833819663
serviceCode: APNA
PRORATA DATE: 2019-05-13
20190513: 083503     DEBUG 12394[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 083503     DEBUG 12394[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 083503     DEBUG 12394[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 083503     DEBUG 12394[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 083503     DEBUG 12483[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 083503     DEBUG 12484[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@baa466
20190513: 083504     DEBUG 12694[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.BcyBillingCycle )
20190513: 083504     DEBUG 12695[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getBcyBillingCycleDAC(BaseAbstractDACFactory.java:550) - getBcyBillingCycleDAC()
20190513: 083504     DEBUG 12700[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.BcyBillingCycleDACImpl com.eppixcomm.eppix.base.dml.BcyBillingCycleDMLFactory@15c07d8
20190513: 083504     DEBUG 12700[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.BcyBillingCycleDACImpl
20190513: 083504     DEBUG 12701[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083504     DEBUG 12702[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.BcyBillingCycleDACImpl TO MAP
20190513: 083504     DEBUG 12702[main] - com.eppixcomm.eppix.base.blo.BcyBillingCycleAbstractBLO.get(BcyBillingCycleAbstractBLO.java:587) - get( filter )
20190513: 083504     DEBUG 12702[main] - com.eppixcomm.eppix.base.blo.BcyBillingCycleAbstractDACImpl.get(BcyBillingCycleAbstractDACImpl.java:492) - get( filter )
20190513: 083504     DEBUG 12702[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
BcyBillingCycle|0|equalBcyBillCycle|

20190513: 083504     DEBUG 12925[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: BcyBillingCycle
Execute SQL Statement: SELECT BCY_BILL_CYCLE, BCY_DESCRIPTION, BCY_PERIOD, BCY_FREQUENCY, BCY_DAY_OF_RUN, BCY_NEXT_RUN, BCY_SUSPENDED, BCY_USE_STATUS, BCY_NEXT_CALL_RUN, BCY_IN_ADVANCE
FROM BCY_BILLING_CYCLE
WHERE BCY_BILL_CYCLE = ?
Argument(s): |CYC13|
20190513: 083504     DEBUG 12925[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@2f48d2
20190513: 083504     DEBUG 13074[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17874) - initialDate: 26 Apr 2019
20190513: 083504     DEBUG 13074[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17875) - period: M
20190513: 083504     DEBUG 13074[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17876) - freq: 1
20190513: 083504     DEBUG 13075[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17877) - day: 26
20190513: 083504     DEBUG 13075[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17878) - type: F
20190513: 083504     DEBUG 13075[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.shiftPeriod(SubscriberUpgradeMigradeBLO.java:17923) - MONTH calcDate: 26 May 2019
20190513: 083504     DEBUG 13076[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsmServiceMsisdn )
20190513: 083504     DEBUG 13076[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractBLO.modify(VsmServiceMsisdnAbstractBLO.java:369) - modify( filter )
20190513: 083504     DEBUG 13076[main] - com.eppixcomm.eppix.base.blo.VsmServiceMsisdnAbstractDACImpl.modify(VsmServiceMsisdnAbstractDACImpl.java:181) - modify( filter )
20190513: 083504     DEBUG 13076[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsmServiceMsisdn|16|equalVsmSubscriberId+equalVsmMsisdnNo+equalVsmServiceCode|

20190513: 083504     DEBUG 13274[main] - com.eppixcomm.eppix.common.data.DAOImpl.updateCustom(DAOImpl.java:2935) - updateCustom(DBO): DML Name: VsmServiceMsisdn
Execute SQL Statement: UPDATE VSM_SERVICE_MSISDN SET VSM_BILLED_UPTO = ?
WHERE VSM_SUBSCRIBER_ID = ? AND (VSM_MSISDN_NO) = ? AND (VSM_SERVICE_CODE) = ?
Argument(s): |2019-05-25|607878|833819663|APNA|
20190513: 083504     DEBUG 13274[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65447) - AFTER updateVsmBilledupto
20190513: 083504     DEBUG 13275[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65470) - AFTER CHECK : (multiCharge.equals('Y') || firstOnSim
20190513: 083504     DEBUG 13275[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getSbuActive
20190513: 083504     DEBUG 13277[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getSbuActive|0||

20190513: 083504     ERROR 13350[main] - com.eppixcomm.eppix.common.data.DAOThrower.unexpected(DAOThrower.java:150) - com.eppixcomm.eppix.base.error.EPPIXSeriousException: A database error has occurred: SQL Error: Reason: A syntax error has occurred., SQL State: 42000, Vendor Code: -201, DML Name: getSbuActive, SQL Statement: SELECT * FROM sbu_sub_upgrade WHERE sbu_subscriber_id = ? AND sbu_subupgrade_id = (SELECT MAX (sbu_subupgrade_id) FROM sbu_sub_upgrade WHERE sbu_subscriber_id = ? AND sbu_record_status = 'A', Argument(s): None
20190513: 083504     ERROR 13352[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createServiceNonBasic(SubscriberUpgradeMigradeBLO.java:65479) - Digital Service - Exception getting the active SBU record for the subscriber
20190513: 083504     DEBUG 13352[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VsrService )
20190513: 083504     DEBUG 13352[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractBLO.get(VsrServiceAbstractBLO.java:576) - get( filter )
20190513: 083504     DEBUG 13352[main] - com.eppixcomm.eppix.base.blo.VsrServiceAbstractDACImpl.get(VsrServiceAbstractDACImpl.java:517) - get( filter )
20190513: 083504     DEBUG 13353[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VsrService|0|equalVsrServiceCode|

20190513: 083504     DEBUG 13414[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VsrService
Execute SQL Statement: SELECT VSR_SERVICE_CODE, VSR_SERVICE_TYPE, VSR_SERVICE_DESC, VSR_ORIGINATOR, VSR_SERVICE_CLASS, VSR_TEMP_DEACT, VSR_PRORATA, VSR_PROVIDER_ID, VSR_SHORT_DESC, VSR_SUSPEND
FROM VSR_SERVICE
WHERE VSR_SERVICE_CODE = ?
Argument(s): |APNA|
20190513: 083504     DEBUG 13414[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1712b3a
20190513: 083505     DEBUG 13624[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VstServiceTypes )
20190513: 083505     DEBUG 13624[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractBLO.get(VstServiceTypesAbstractBLO.java:595) - get( filter )
20190513: 083505     DEBUG 13624[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractDACImpl.get(VstServiceTypesAbstractDACImpl.java:540) - get( filter )
20190513: 083505     DEBUG 13624[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VstServiceTypes|0|equalVstServiceType|

20190513: 083505     DEBUG 13784[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VstServiceTypes
Execute SQL Statement: SELECT VST_SERVICE_TYPE, VST_SERVICE_DESC, VST_MULTI_CHARGE, VST_SERVICE_CLASS, VST_AUTO_CONNECT, VST_ORIGINATOR, VST_TARIFF_RELATED, VST_PARAMETERISED, VST_PARAMS_LEVEL, VST_ARCHIVE_MONTHS, VST_FUTURE_ACT, VST_NODE_LEVEL
FROM VST_SERVICE_TYPES
WHERE VST_SERVICE_TYPE = ?
Argument(s): |AP|
20190513: 083505     DEBUG 13784[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@9446e4
20190513: 083505      INFO 13964[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1820) - 
IS PARAMETER SERVICES: true
20190513: 083505      INFO 13964[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1823) - 
START PARAMETER SERVICES
20190513: 083505     DEBUG 13964[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getSpcSpvPshPsdBySubServCode
20190513: 083505     DEBUG 13967[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getSpcSpvPshPsdBySubServCode|0||

20190513: 083505     DEBUG 14324[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getSpcSpvPshPsdBySubServCode
Execute SQL Statement: SELECT * FROM spc_param_config, spv_param_values, psh_param_serv_hdr, psd_param_serv_det WHERE spc_param_id = spv_param_id AND spc_service_code = psh_service_code AND psd_psh_id = psh_id AND psh_archived = 'N' AND psd_param_value = spv_param_value AND psh_service_code = ? AND psh_subscriber_id = ? 
Argument(s): |APNA|607878|
20190513: 083505     DEBUG 14475[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TtTypeText )
20190513: 083505     DEBUG 14476[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getTtTypeTextDAC(BaseAbstractDACFactory.java:144) - getTtTypeTextDAC()
20190513: 083505     DEBUG 14478[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.TtTypeTextDACImpl com.eppixcomm.eppix.base.dml.TtTypeTextAbstractDMLFactory@e61a35
20190513: 083505     DEBUG 14478[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.TtTypeTextDACImpl
20190513: 083505     DEBUG 14479[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083505     DEBUG 14479[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.TtTypeTextDACImpl TO MAP
20190513: 083505     DEBUG 14479[main] - com.eppixcomm.eppix.base.blo.TtTypeTextAbstractBLO.get(TtTypeTextAbstractBLO.java:542) - get( filter )
20190513: 083505     DEBUG 14479[main] - com.eppixcomm.eppix.base.blo.TtTypeTextAbstractDACImpl.get(TtTypeTextAbstractDACImpl.java:451) - get( filter )
20190513: 083505     DEBUG 14480[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TtTypeText|0|equalTtGroup+equalTtType+equalTtLang|

20190513: 083506     DEBUG 14705[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TtTypeText
Execute SQL Statement: SELECT TT_GROUP, TT_LANG, TT_TYPE, TT_TEXT, TT_CONFIG
FROM TT_TYPE_TEXT
WHERE (TT_GROUP) = ? AND (TT_TYPE) = ? AND (TT_LANG) = ?
Argument(s): |CHGVARPARM|AP|ENG|
20190513: 083506     DEBUG 14835[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SpvParamValues )
20190513: 083506     DEBUG 14835[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSpvParamValuesDAC(BaseAbstractDACFactory.java:1165) - getSpvParamValuesDAC()
20190513: 083506     DEBUG 14839[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SpvParamValuesDACImpl com.eppixcomm.eppix.base.dml.SpvParamValuesDMLFactory@b60b93
20190513: 083506     DEBUG 14839[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SpvParamValuesDACImpl
20190513: 083506     DEBUG 14840[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083506     DEBUG 14840[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SpvParamValuesDACImpl TO MAP
20190513: 083506     DEBUG 14840[main] - com.eppixcomm.eppix.base.blo.SpvParamValuesAbstractBLO.get(SpvParamValuesAbstractBLO.java:299) - get( filter )
20190513: 083506     DEBUG 14840[main] - com.eppixcomm.eppix.base.blo.SpvParamValuesAbstractDACImpl.get(SpvParamValuesAbstractDACImpl.java:253) - get( filter )
20190513: 083506     DEBUG 14841[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SpvParamValues|0|equalspvNetwrkCode|

20190513: 083506     DEBUG 15164[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SpvParamValues
Execute SQL Statement: SELECT SPV_PARAM_ID, SPV_PARAM_VALUE, SPV_ACT_CHARGE, SPV_CHARGE_CODE, SPV_DEFAULT_VALUE, SPV_NETWRK_CODE
FROM spv_param_values
WHERE SPV_NETWRK_CODE = ? 
Argument(s): |APN|
20190513: 083506     ERROR 15314[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doParamInsertValidation(SubscriberActiveServicesBLO.java:2492) - Failed to get SPV for NETWRKCODE: APN
20190513: 083506      INFO 15314[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1830) - 
END PARAMETER SERVICES
20190513: 083506     DEBUG 15314[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getScv
20190513: 083506     DEBUG 15315[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getScv|0||

20190513: 083507     DEBUG 15564[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getScv
Execute SQL Statement: SELECT SCV_SUBSCRIBER_ID, SCV_CRM_VALUE, SCV_TYPE FROM SCV_SUB_CRM_VALUE WHERE SCV_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 083507     DEBUG 15564[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1829e6f
20190513: 083507     DEBUG 15705[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 083507     DEBUG 15706[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 083507     DEBUG 15706[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 083507     DEBUG 15706[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 083507     DEBUG 15774[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 083507     DEBUG 15774[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@100ebec
20190513: 083507     DEBUG 15924[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbaSubAux )
20190513: 083507     DEBUG 15924[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractBLO.get(SbaSubAuxAbstractBLO.java:283) - get( filter )
20190513: 083507     DEBUG 15924[main] - com.eppixcomm.eppix.base.blo.SbaSubAuxAbstractDACImpl.get(SbaSubAuxAbstractDACImpl.java:101) - get( filter )
20190513: 083507     DEBUG 15924[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbaSubAux|0|equalSbaSubscriberId|

20190513: 083507     DEBUG 16005[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbaSubAux
Execute SQL Statement: SELECT SBA_SUBSCRIBER_ID, SBA_ID_NUMBER, SBA_MATCHCODE, SBA_MARKETING, SBA_THIRD_PARTY, SBA_CUST_DEPT, SBA_DEALER_ID, SBA_DEPARTMENT, SBA_SALESMAN, SBA_REGION, SBA_INVOICE_ADDRID, SBA_INV_ACCOUNT, SBA_PREPAID_STAT, SBA_ANALYSIS_1, SBA_ANALYSIS_2, SBA_ANALYSIS_3, SBA_ANALYSIS_4, SBA_ANALYSIS_5, SBA_ANALYSIS_6, SBA_ANALYSIS_7, SBA_ANALYSIS_8, SBA_ANALYSIS_9, SBA_ANALYSIS_10, SBA_ANALYSIS_11, SBA_ANALYSIS_12, SBA_ANALYSIS_13, SBA_ANALYSIS_14, SBA_ANALYSIS_15, SBA_ANALYSIS_16, SBA_ANALYSIS_17, SBA_ANALYSIS_18, SBA_ANALYSIS_19, SBA_ANALYSIS_20, SBA_ANALYSIS_21, SBA_ANALYSIS_22, SBA_ANALYSIS_23, SBA_ANALYSIS_24, SBA_ANALYSIS_25, SBA_ANALYSIS_26, SBA_ANALYSIS_27, SBA_ANALYSIS_28, SBA_ANALYSIS_29, SBA_ANALYSIS_30,SBA_COMMENTS
FROM SBA_SUB_AUX
WHERE SBA_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 083507     DEBUG 16006[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@180f96c
20190513: 083507     DEBUG 16195[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.AuxCustomers )
20190513: 083507     DEBUG 16196[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getAuxCustomersDAC(BaseAbstractDACFactory.java:122) - getAuxCustomersDAC()
20190513: 083507     DEBUG 16206[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.AuxCustomersDACImpl com.eppixcomm.eppix.base.dml.AuxCustomersDMLFactory@419d05
20190513: 083507     DEBUG 16207[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.AuxCustomersDACImpl
20190513: 083507     DEBUG 16211[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083507     DEBUG 16211[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.AuxCustomersDACImpl TO MAP
20190513: 083507     DEBUG 16211[main] - com.eppixcomm.eppix.base.blo.AuxCustomersAbstractBLO.get(AuxCustomersAbstractBLO.java:689) - get( filter )
20190513: 083507     DEBUG 16211[main] - com.eppixcomm.eppix.base.blo.AuxCustomersAbstractDACImpl.get(AuxCustomersAbstractDACImpl.java:1309) - get( filter )
20190513: 083507     DEBUG 16215[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
AuxCustomers|0|equalBillAcNo|

20190513: 083508     DEBUG 16624[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: AuxCustomers
Execute SQL Statement: SELECT AUX_TITLE, AUX_FIRSTNAME, AUX_INVOICE_ADDRID, BANK_NAME, BANK_ADDR1, BANK_ADDR2, BANK_AC_NAME, REF, BANK_SCODE, BANK_AC_NO, BANK_AC_TYPE, BANK_PAY_TYPE, AUX_PREF_DEBIT_DAY, BILL_AC_NO, PROTECT_CODE, HANDSET_CT, BANK_DATE, CONF_DATE, AUX_COMMENT, DATE_OF_BIRTH, REF_PAY_DATE, AC_CLOS_DATE, NO_REAS_DATE, REM_LET_DATE, AC_TRAN_DATE, NO_AC_DATE, SR_FLAG, PROCESSED, PACKAGE_CODE, AUX_ACCOUNT_TYPE, AUX_BILL_CYCLE, CREDIT_CARD_NO, CREDIT_CARD_NAME, EXPIRY_DATE, AUX_CARD_CVV_NO, CREDIT_SCORE, SERV_PROV_ID, DEALER_ID, SALESMAN, ID_NUMBER, ACC_STATUS, COMP_REG_NO, STATIONARY_TYPE, MAX_NO_SUBS, AUX_CURRENCY, AUX_COUNTRY_CODE, AUX_GENDER, AUX_SUB_GRP_ACC_NO, AUX_PREPAID_STAT, AUX_CREDIT_CLASS, AUX_AUTO_LIMIT_IND, AUX_LMT_UP_VAL, AUX_LMT_DN_VAL, AUX_ANALYSIS_1, AUX_ANALYSIS_2, AUX_ANALYSIS_3, AUX_ANALYSIS_4, AUX_ANALYSIS_5, AUX_ANALYSIS_6, AUX_ANALYSIS_7, AUX_ANALYSIS_8, AUX_ANALYSIS_9, AUX_ANALYSIS_10, AUX_ANALYSIS_11, AUX_ANALYSIS_12, AUX_ANALYSIS_13, AUX_ANALYSIS_14, AUX_ANALYSIS_15, AUX_ANALYSIS_16, AUX_ANALYSIS_17, AUX_ANALYSIS_18, AUX_ANALYSIS_19, AUX_ANALYSIS_20, AUX_ANALYSIS_21, AUX_ANALYSIS_22, AUX_ANALYSIS_23, AUX_ANALYSIS_24, AUX_ANALYSIS_25, AUX_ANALYSIS_26, AUX_ANALYSIS_27, AUX_ANALYSIS_28, AUX_ANALYSIS_29, AUX_ANALYSIS_30
FROM AUX_CUSTOMERS
WHERE (BILL_AC_NO) = ?
Argument(s): |A0311553|
20190513: 083508     DEBUG 16626[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@186c730
20190513: 083508     DEBUG 16744[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getSerialCustomer
20190513: 083508     DEBUG 16745[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getSerialCustomer|0||

20190513: 083508     DEBUG 17034[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getSerialCustomer
Execute SQL Statement: SELECT SC_SERIAL, SC_BILL_AC_NO FROM SC_SERIAL_CUSTOMER WHERE SC_BILL_AC_NO = ?
Argument(s): |A0311553|
20190513: 083508     DEBUG 17034[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1d6a56e
20190513: 083508     DEBUG 17184[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getEppixHierarchyByTypeSubscriber|0|NONE|

20190513: 083509     DEBUG 17544[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getEppixHierarchyByTypeSubscriber
Execute SQL Statement: SELECT EH_SERIAL, EH_ENTITY_ID, EH_TYPE, EH_VALUE, EH_LINK, EH_HIER_TYPE FROM EH_EPPIX_HIERARCHY WHERE EH_TYPE = 'SUBSCRIBER' AND EH_ENTITY_ID = ? 
Argument(s): |607878|
20190513: 083509     DEBUG 17594[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getVsmUniqueServiceCodeBySubsciber|0|NONE|

20190513: 083509     DEBUG 17773[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getVsmUniqueServiceCodeBySubsciber
Execute SQL Statement: select vsm_service_code from vsm_service_msisdn	where vsm_subscriber_id = ? group by vsm_service_code
Argument(s): |607878|
20190513: 083509     DEBUG 17774[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1b06041
20190513: 083509     DEBUG 17774[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@7f5580
20190513: 083509     DEBUG 17774[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1c6572b
20190513: 083509     DEBUG 17774[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@84cc09
20190513: 083509     DEBUG 17774[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@6f9b8e
20190513: 083509     DEBUG 17774[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@14db0e3
20190513: 083509     DEBUG 17775[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1982fc1
20190513: 083509     DEBUG 17775[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@676437
20190513: 083509     DEBUG 17775[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1e4853f
20190513: 083509     DEBUG 17776[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@992bae
20190513: 083509     DEBUG 17776[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@2bd3a
20190513: 083509     DEBUG 17776[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1d53f5b
20190513: 083509     DEBUG 17776[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1329642
20190513: 083509     DEBUG 17776[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@26d607
20190513: 083509     DEBUG 17776[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@165f738
20190513: 083509     DEBUG 17777[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@149b290
20190513: 083509     DEBUG 17777[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@16a38b5
20190513: 083509     DEBUG 17777[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@b1074a
20190513: 083509     DEBUG 17777[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@55a338
20190513: 083509     DEBUG 17777[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@22ab57
20190513: 083509     DEBUG 17777[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1eec35
20190513: 083509     DEBUG 17824[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 1
20190513: 083509     DEBUG 17824[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 2
20190513: 083509     DEBUG 17825[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17825[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17825[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17825[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17825[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17825[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17825[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17825[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17825[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17825[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17826[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17826[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17826[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17827[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17827[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17827[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17827[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17827[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17827[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17827[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17827[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17827[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17827[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17829[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17829[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17829[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17829[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17829[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17829[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17829[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17829[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17829[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17829[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17830[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17830[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17830[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17830[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17830[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17830[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.discountApplyChanges(SubscriberUpgradeMigradeBLO.java:16850) - 
LINK TO CREATE QUAL KEY 2: 0
20190513: 083509     DEBUG 17830[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 4
20190513: 083509     DEBUG 17831[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 8
20190513: 083509     DEBUG 17831[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 16
20190513: 083509     DEBUG 17831[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 32
20190513: 083509     DEBUG 17831[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17831[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17831[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17831[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17831[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17831[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17832[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17832[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17832[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17832[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17832[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17832[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17832[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17832[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17832[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17832[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17833[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17833[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17833[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17833[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17833[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 64
20190513: 083509     DEBUG 17833[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 128
20190513: 083509     DEBUG 17833[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.generateQualityKey(SubscriberUpgradeMigradeBLO.java:16980) - QUALIFICATION VALUE: 256
20190513: 083509     DEBUG 17834[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSdiSubsDiscountNotByQualId(SubscriberUpgradeMigradeBLO.java:20227) - 
SELECT SDI_SUB_DISC_ID,SDI_SUBSCRIBER_ID,SDI_DISCOUNT_ID,SDI_START_DATE,SDI_END_DATE,SDI_SUSPEND_DATE,SDI_QUAL_ID,SDI_QUAL_TYPE,SDI_PACKAGE_CODE,SDI_TARIFF_PLAN,SDI_SERVICE_CODE,SDI_PAYMENT_TYPE,SDI_ACCOUNT_TYPE,SDI_DISCOUNT_UPTO FROM SDI_SUBS_DISCOUNT WHERE SDI_SUBSCRIBER_ID = 607878 AND sdi_qual_id NOT IN (SELECT dqk_qual_id FROM dqk_disc_qual_key WHERE dqk_key_val IN  (2,4,6,10,18,34,66,130,258) AND dqk_key IN  ('ISIS','ISISA0311553','ISIS0','ISIS500FF','ISISACCDO','ISISHV','ISISAM10','ISISAM50','ISISAMR5','ISISAPNA','ISISAPNW','ISISBCDF','ISISBSTL','ISISCSCP','ISISGPRS','ISISITBL','ISISMEXU','ISISMMSS','ISISNBUN','ISISNDEP','ISISNPRO','ISISNUL ','ISISPSF ','ISISRSMS','ISISSPUL','ISISSUL ','ISISVCMA','ISISASKYL36M','ISISEXCEL') AND dqk_from  <= '43597' AND dqk_to >= '43597') AND sdi_end_date IS NULL  AND sdi_qual_id IS NOT NULL
20190513: 083509     DEBUG 18054[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getDiqDiscountQualByQualId(SubscriberUpgradeMigradeBLO.java:21944) - 
SELECT DIQ_QUAL_DESC, DIQ_QUAL_TYPE, DIQ_START_DATE, 
DIQ_END_DATE, DIQ_PACKAGE_CODE, DIQ_PACK_AFFECT, 
DIQ_TARIFF_PLAN, DIQ_TAR_AFFECT, DIQ_SERVICE_CODE, 
DIQ_SERV_AFFECT, DIQ_PAYMENT_TYPE, DIQ_PAY_AFFECT, 
DIQ_ACCOUNT_TYPE, DIQ_ACC_AFFECT, DIQ_DISCOUNT_ID, 
DIQ_USED FROM DIQ_DISCOUNT_QUAL 
 WHERE DIQ_QUAL_ID IN (  SELECT DQK_QUAL_ID 
 FROM DQK_DISC_QUAL_KEY 
 WHERE DQK_KEY_VAL IN  (2,4,6,10,18,34,66,130,258)
 AND DQK_KEY IN  ('ISIS','ISISA0311553','ISIS0','ISIS500FF','ISISACCDO','ISISHV','ISISAM10','ISISAM50','ISISAMR5','ISISAPNA','ISISAPNW','ISISBCDF','ISISBSTL','ISISCSCP','ISISGPRS','ISISITBL','ISISMEXU','ISISMMSS','ISISNBUN','ISISNDEP','ISISNPRO','ISISNUL ','ISISPSF ','ISISRSMS','ISISSPUL','ISISSUL ','ISISVCMA','ISISASKYL36M','ISISEXCEL') AND DQK_FROM  <= 43597
 AND DQK_TO >= 43597
 AND DQK_QUAL_ID NOT IN ( 
 SELECT NVL(SDI_QUAL_ID, 0)  FROM SDI_SUBS_DISCOUNT 
 WHERE SDI_SUBSCRIBER_ID = 607878 AND SDI_END_DATE IS NULL))
20190513: 083509     DEBUG 18334[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1895) - 
this.tsDMO: 
TsTariffServiceDMO [fieldSizes=[5, 20, 4, 15, 5, 5, 5, 5, 5, 5, 5, 1, 0, 4, 1]
tsChargeFreq=1
tsActCharge=
tsActInclusive=N
tsChargePeriod=M
tsDiscountRef=
tsInternalTariff=ASKYL36M
tsNetServCode=APN
tsPackageCode=500FF
tsPdeactCharge=
tsReactCharge=
tsServiceCode=APNA
tsSubCharge1=null
tsSubCharge2=
tsSubCharge3=
tsTdeactCharge=]
20190513: 083509     DEBUG 18335[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.serviceCreateNonBasicN2N(SubscriberUpgradeMigradeBLO.java:46052) - 
Integer subscriberId: 607878
String simNo: 0004102502505
String newSim: N
String serviceExists: 
Integer priority: 5
String pCommand: 
Integer seqNo: 0
String netServCode: APN
String message: MODIFY_SERVICES
String serviceType: AP
String primarySIM: 
String primaryMSISDN: 
String secondMSISDN: 
String serviceCode: APNA
String location: M1
String applyOption: MODIFY
Date activateDate: 2019-05-13
short depReqd: 0
20190513: 083509     DEBUG 18335[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 083509     DEBUG 18335[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.get(VamActiveMsisdnAbstractBLO.java:654) - get( filter )
20190513: 083509     DEBUG 18336[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.get(VamActiveMsisdnAbstractDACImpl.java:683) - get( filter )
20190513: 083509     DEBUG 18336[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId+equalVamSimNo+equalVamHierarchy+INVamStatCode_3|

20190513: 083510     DEBUG 18584[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ? AND (VAM_SIM_NO) = ? AND (VAM_HIERARCHY) = ? AND VAM_STAT_CODE IN ( ? , ? , ? )
Argument(s): |607878|0004102502505|0|1|4|6|
20190513: 083510     DEBUG 18586[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@a77106
20190513: 083510     DEBUG 18707[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 083510     DEBUG 18707[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSysdirmDAC(BaseAbstractDACFactory.java:327) - getSysdirmDAC()
20190513: 083510     DEBUG 18712[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SysdirmDACImpl com.eppixcomm.eppix.base.dml.SysdirmAbstractDMLFactory@cbdb20
20190513: 083510     DEBUG 18712[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SysdirmDACImpl
20190513: 083510     DEBUG 18713[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083510     DEBUG 18713[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SysdirmDACImpl TO MAP
20190513: 083510     DEBUG 18713[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 083510     DEBUG 18713[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 083510     DEBUG 18714[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 083510     DEBUG 18894[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASSWITCHM1|
20190513: 083510     DEBUG 18895[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@19f3736
20190513: 083510     DEBUG 19014[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 083510     DEBUG 19015[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 083510     DEBUG 19015[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 083510     DEBUG 19015[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 083510     DEBUG 19074[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASIMSIALGO|
20190513: 083510     DEBUG 19075[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1e1dadb
20190513: 083510     DEBUG 19194[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9355) - 
=======================================================================================
PARAM OPTION: ALL
PARAM SIM NO: 0004102502505
PARAM NETWORK ID: 
PARAM HLR: 
PARAM DEALER ID: 
PARAM CUSTOMER: 
=======================================================================================
20190513: 083510     DEBUG 19195[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SacSimAssignCus )
20190513: 083510     DEBUG 19195[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractBLO.get(SacSimAssignCusAbstractBLO.java:287) - get( filter )
20190513: 083510     DEBUG 19196[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractDACImpl.get(SacSimAssignCusAbstractDACImpl.java:205) - get( filter )
20190513: 083510     DEBUG 19196[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SacSimAssignCus|0|equalSacSimNo|

20190513: 083510     DEBUG 19255[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SacSimAssignCus
Execute SQL Statement: SELECT SAC_BILL_AC_NO, SAC_SIM_NO 
FROM sac_sim_assign_cus
WHERE SAC_SIM_NO = ? 
Argument(s): |0004102502505|
20190513: 083510      INFO 19374[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9984) - Passed customer no  not found in Sac_Sim_assign_cus
20190513: 083510     DEBUG 19375[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190513: 083510     DEBUG 19375[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190513: 083510     DEBUG 19375[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190513: 083510     DEBUG 19375[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo|

20190513: 083511     DEBUG 19524[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ?
Argument(s): |0004102502505|
20190513: 083511     DEBUG 19525[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@bac9b9
20190513: 083511     DEBUG 19705[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:10075) - NETWORK PARAMS: OPTION: ALL NETWORK ID:  NETWORKID.LENGTH: 0
20190513: 083511     DEBUG 19705[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 083511     DEBUG 19705[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.get(VamActiveMsisdnAbstractBLO.java:654) - get( filter )
20190513: 083511     DEBUG 19706[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.get(VamActiveMsisdnAbstractDACImpl.java:683) - get( filter )
20190513: 083511     DEBUG 19706[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamMsisdnNo|

20190513: 083511     DEBUG 20074[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE (VAM_MSISDN_NO) = ?
Argument(s): |833819663|
20190513: 083511     DEBUG 20076[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@111b910
20190513: 083511     DEBUG 20216[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VpnProviderNetwk )
20190513: 083511     DEBUG 20216[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVpnProviderNetwkDAC(BaseAbstractDACFactory.java:435) - getVpnProviderNetwkDAC()
20190513: 083511     DEBUG 20219[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VpnProviderNetwkDACImpl com.eppixcomm.eppix.base.dml.VpnProviderNetwkDMLFactory@1d5a0
20190513: 083511     DEBUG 20219[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VpnProviderNetwkDACImpl
20190513: 083511     DEBUG 20220[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083511     DEBUG 20220[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VpnProviderNetwkDACImpl TO MAP
20190513: 083511     DEBUG 20221[main] - com.eppixcomm.eppix.base.blo.VpnProviderNetwkAbstractBLO.iterate(VpnProviderNetwkAbstractBLO.java:500) - iterate( filter )
20190513: 083511     DEBUG 20221[main] - com.eppixcomm.eppix.base.blo.VpnProviderNetwkAbstractDACImpl.iterate(VpnProviderNetwkAbstractDACImpl.java:421) - iterate( filter )
20190513: 083511     DEBUG 20221[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VpnProviderNetwk|0|VpnNetworkPrefixMatch|

20190513: 083511     DEBUG 20484[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VpnProviderNetwk
Execute SQL Statement: SELECT VPN_PROVIDER_ID, VPN_NETWORK_PREFIX, VPN_MSISDN_MASK, VPN_SIM_MASK
FROM VPN_PROVIDER_NETWK
WHERE VPN_NETWORK_PREFIX LIKE ?
Argument(s): |%83%|
20190513: 083511     DEBUG 20485[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1c50507
20190513: 083512     DEBUG 20554[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 083512     DEBUG 20555[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 083512     DEBUG 20555[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 083512     DEBUG 20555[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 083512     DEBUG 20624[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNUBLOCK|
20190513: 083512     DEBUG 20625[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1f64158
20190513: 083512     DEBUG 20774[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getImsiRestriction|0|NONE|

20190513: 083512     DEBUG 21094[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getImsiRestriction
Execute SQL Statement: SELECT UNIQUE(vas_active_service.vas_service_type) FROM vam_active_msisdn, vas_active_service, vsm_service_msisdn  WHERE vam_subscriber_id = ?  AND   vam_sim_no        = ?  AND   vam_subscriber_id = vas_subscriber_id AND   vas_service_type  IN ('NR','HR','HF') AND   vas_service_code  = vsm_service_code AND   vsm_msisdn_no     = vam_msisdn_no AND   vsm_subscriber_id = vam_subscriber_id ORDER BY vas_service_type
Argument(s): |607878|0004102502505|
20190513: 083512     DEBUG 21154[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 083512     DEBUG 21154[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 083512     DEBUG 21155[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 083512     DEBUG 21155[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 083512     DEBUG 21214[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNDEFRR|
20190513: 083512     DEBUG 21215[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@3c2378
20190513: 083512     DEBUG 21334[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getImsiCategory|0|NONE|

20190513: 083513     DEBUG 21544[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2376) - iterator(static SQL): DML Name: getImsiCategory
Execute SQL Statement: SELECT vas_active_service.vas_service_type FROM vam_active_msisdn, vas_active_service, vsm_service_msisdn  WHERE vam_subscriber_id = ? AND vam_sim_no = ? AND vam_subscriber_id = vas_subscriber_id AND vas_service_type = 'HB' AND vas_service_code = vsm_service_code AND vsm_msisdn_no = vam_msisdn_no AND vsm_subscriber_id = vam_subscriber_id ORDER BY vas_service_type
Argument(s): |607878|0004102502505|
20190513: 083513     DEBUG 21605[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 083513     DEBUG 21605[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 083513     DEBUG 21606[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 083513     DEBUG 21606[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 083513     DEBUG 21714[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNDEFACT|
20190513: 083513     DEBUG 21715[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@fdb00d
20190513: 083513     DEBUG 21945[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SfeSimFutEvent )
20190513: 083513     DEBUG 21946[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSfeSimFutEventDAC(BaseAbstractDACFactory.java:1153) - getSfeSimFutEventDAC()
20190513: 083513     DEBUG 21951[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SfeSimFutEventDACImpl com.eppixcomm.eppix.base.dml.SfeSimFutEventDMLFactory@f18e8e
20190513: 083513     DEBUG 21951[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SfeSimFutEventDACImpl
20190513: 083513     DEBUG 21954[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083513     DEBUG 21954[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SfeSimFutEventDACImpl TO MAP
20190513: 083513     DEBUG 21955[main] - com.eppixcomm.eppix.base.blo.SfeSimFutEventAbstractBLO.get(SfeSimFutEventAbstractBLO.java:341) - get( filter )
20190513: 083513     DEBUG 21955[main] - com.eppixcomm.eppix.base.blo.SfeSimFutEventAbstractDACImpl.get(SfeSimFutEventAbstractDACImpl.java:326) - get( filter )
20190513: 083513     DEBUG 21955[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SfeSimFutEvent|0|equalSfeSimNo+equalSfeFutEventId+nullSfeMsisdnNo+nullSfeServiceCode|

20190513: 083513     DEBUG 22314[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SfeSimFutEvent
Execute SQL Statement: SELECT SFE_COMMAND,SFE_FUT_EVENT_ID,SFE_SUBSCRIBER_ID,SFE_SIM_NO,SFE_MSISDN_NO,SFE_SERVICE_CODE,SFE_EVENT_DATE,SFE_TIMESTAMP,SFE_ERROR_COMMENT,SFE_ORIG_STATUS
FROM SFE_SIM_FUT_EVENT
WHERE SFE_SIM_NO = ?  AND SFE_FUT_EVENT_ID = ?  AND (SFE_MSISDN_NO IS NULL OR LENGTH(SFE_MSISDN_NO) IS NULL OR LENGTH(SFE_MSISDN_NO) = 0) AND (SFE_SERVICE_CODE IS NULL OR LENGTH(SFE_SERVICE_CODE) IS NULL OR LENGTH(SFE_SERVICE_CODE) = 0)
Argument(s): |0004102502505|SIM_ACTIVATE|
20190513: 083513     DEBUG 22454[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getNmMsisdnVam
20190513: 083513     DEBUG 22454[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getNmMsisdnVam|0||

20190513: 083514     DEBUG 22684[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getNmMsisdnVam
Execute SQL Statement: SELECT NM_INTERNAL_TARIFF, NM_NETWORK_TARIFF, NM_CONTRACT_PERIOD, NM_NTWRK_CONTR_PER, NM_MIN_CANC_PERIOD, NM_HIGHER_MIG_TYPE, NM_LOWER_MIG_TYPE, NM_SAME_MIG_TYPE, NM_NETWORK_ID, NM_NET_TYPE FROM nm_netmat, vam_active_msisdn WHERE vam_msisdn_no = ?  AND vam_intern_tariff = nm_internal_tariff
Argument(s): |833819663|
20190513: 083514     DEBUG 22684[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@15311bd
20190513: 083514     DEBUG 22847[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NgsNetGroupServ )
20190513: 083514     DEBUG 22848[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getNgsNetGroupServDAC(BaseAbstractDACFactory.java:748) - getNgsNetGroupServDAC()
20190513: 083514     DEBUG 22852[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.NgsNetGroupServDACImpl com.eppixcomm.eppix.base.dml.NgsNetGroupServAbstractDMLFactory@1a918d5
20190513: 083514     DEBUG 22852[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.NgsNetGroupServDACImpl
20190513: 083514     DEBUG 22854[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083514     DEBUG 22854[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.NgsNetGroupServDACImpl TO MAP
20190513: 083514     DEBUG 22854[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractBLO.iterate(NgsNetGroupServAbstractBLO.java:563) - iterate( filter )
20190513: 083514     DEBUG 22855[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractDACImpl.iterate(NgsNetGroupServAbstractDACImpl.java:618) - iterate( filter )
20190513: 083514     DEBUG 22855[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NgsNetGroupServ|0|NgsCodeMatch|NgsSequenceasc

20190513: 083514     ERROR 23006[main] - com.eppixcomm.eppix.common.data.DAOThrower.unexpected(DAOThrower.java:150) - com.eppixcomm.eppix.base.error.EPPIXSeriousException: A database error has occurred: SQL Error: Reason: Too many or too few host variables given., SQL State: 07001, Vendor Code: -254, DML Name: NgsNetGroupServ, SQL Statement: SELECT NGS_CODE, NGS_NETWORK, NGS_NET_SERV_CODE, NGS_SEQUENCE, NGS_APPLY_TEXT, NGS_MODIFY_TEXT, NGS_REMOVE_TEXT, NGS_PARAM_NAME1, NGS_PARAM_VALUE1, NGS_PARAM_NAME2, NGS_PARAM_VALUE2, NGS_PARAM_NAME3, NGS_PARAM_VALUE3, NGS_PARAM_NAME4, NGS_PARAM_VALUE4, NGS_PARAM_NAME5, NGS_PARAM_VALUE5
FROM NGS_NET_GROUP_SERV
WHERE NGS_CODE LIKE ? ORDER BY NGS_SEQUENCE ASC, Argument(s): None
20190513: 083514     DEBUG 23007[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getNgsNetServCode
20190513: 083514     DEBUG 23007[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getNgsNetServCode|0||

20190513: 083514     DEBUG 23255[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getNgsNetServCode
Execute SQL Statement: SELECT first 1 ngs_net_serv_code  FROM ngs_net_group_serv  WHERE ngs_code = ?  AND ngs_network  = ?  AND ngs_sequence  = 1
Argument(s): |APN|M1|
20190513: 083514     DEBUG 23255[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@238a47
20190513: 083514     DEBUG 23385[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.processExistingSimNonBasic(SubscriberUpgradeMigradeBLO.java:47589) - 
subscriberId: 607878
simNo: 0004102502505
serviceType: AP
serviceCode: APNA
networkService: APN       
networkService: APN       
location: M1
priority: 5
activateDate: 20190513
command: 
primaryMsisdn: 833819663
smnDMO: 
SmnSimNosDMO [smnActiveDate=1999-11-23
smnAvailDate=2016-06-14
smnExpiryDate=2019-06-14
smnAnalysis1=null
smnAnalysis2=null
smnAnalysis3=null
smnDealerId=MTEL
smnHlr=25
smnImsiNo=null
smnKi=null
smnNetworkId=M1
smnOnNetwork=Y
smnPinNo=null
smnPinNo2=null
smnProductCode=83USIM
smnPukNo=32063218
smnPukNo2=null
smnSimNo=0004102502505
smnStatus=1
smnTransportKey=null
smnWarehouse=25]
20190513: 083514     DEBUG 23385[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 083514     DEBUG 23386[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 083514     DEBUG 23386[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 083514     DEBUG 23386[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 083514     DEBUG 23455[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASNNTRANID|
20190513: 083514     DEBUG 23455[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@15d17d7
20190513: 083515     DEBUG 23596[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 083515     DEBUG 23597[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.modify(SysdirmAbstractBLO.java:308) - modify( filter )
20190513: 083515     DEBUG 23597[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.modify(SysdirmAbstractDACImpl.java:175) - modify( filter )
20190513: 083515     DEBUG 23597[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|16|equalSystemKey|

20190513: 083515     DEBUG 23915[main] - com.eppixcomm.eppix.common.data.DAOImpl.updateCustom(DAOImpl.java:2935) - updateCustom(DBO): DML Name: Sysdirm
Execute SQL Statement: UPDATE SYSDIRM SET KEY_VALUE = ?
WHERE (SYSTEM_KEY) = ?
Argument(s): |46989892|ASNNTRANID|
20190513: 083515     DEBUG 23915[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SksKeySetting )
20190513: 083515     DEBUG 23916[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractBLO.get(SksKeySettingAbstractBLO.java:500) - get( filter )
20190513: 083515     DEBUG 23916[main] - com.eppixcomm.eppix.base.blo.SksKeySettingAbstractDACImpl.get(SksKeySettingAbstractDACImpl.java:420) - get( filter )
20190513: 083515     DEBUG 23916[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SksKeySetting|0|equalSksKeyCode|

20190513: 083515     DEBUG 23996[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SksKeySetting
Execute SQL Statement: SELECT SKS_KEY_CODE, SKS_VALUE, SKS_COMMENT, SKS_TIMESTAMP
FROM SKS_KEY_SETTING
WHERE (SKS_KEY_CODE) = ?
Argument(s): |ASSMROOTM1|
20190513: 083515     DEBUG 23998[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@ae533a
20190513: 083515     DEBUG 24225[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getAuxSbd
20190513: 083515     DEBUG 24225[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getAuxSbd|0||

20190513: 083516     DEBUG 24745[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getAuxSbd
Execute SQL Statement: SELECT AUX_TITLE, AUX_FIRSTNAME, AUX_INVOICE_ADDRID, BANK_NAME, BANK_ADDR1, BANK_ADDR2, BANK_AC_NAME, REF, BANK_SCODE, BANK_AC_NO, BANK_AC_TYPE, BANK_PAY_TYPE, AUX_PREF_DEBIT_DAY, BILL_AC_NO, PROTECT_CODE, HANDSET_CT, BANK_DATE, CONF_DATE, AUX_COMMENT, DATE_OF_BIRTH, REF_PAY_DATE, AC_CLOS_DATE, NO_REAS_DATE, REM_LET_DATE, AC_TRAN_DATE, NO_AC_DATE, SR_FLAG, PROCESSED, PACKAGE_CODE, AUX_ACCOUNT_TYPE, AUX_BILL_CYCLE, CREDIT_CARD_NO, CREDIT_CARD_NAME, EXPIRY_DATE, AUX_CARD_CVV_NO, CREDIT_SCORE, SERV_PROV_ID, DEALER_ID, SALESMAN, ID_NUMBER, ACC_STATUS, COMP_REG_NO, STATIONARY_TYPE, MAX_NO_SUBS, AUX_CURRENCY, AUX_COUNTRY_CODE, AUX_GENDER, AUX_SUB_GRP_ACC_NO, AUX_PREPAID_STAT, AUX_CREDIT_CLASS, AUX_AUTO_LIMIT_IND, AUX_LMT_UP_VAL, AUX_LMT_DN_VAL, AUX_ANALYSIS_1, AUX_ANALYSIS_2, AUX_ANALYSIS_3, AUX_ANALYSIS_4, AUX_ANALYSIS_5, AUX_ANALYSIS_6, AUX_ANALYSIS_7, AUX_ANALYSIS_8, AUX_ANALYSIS_9, AUX_ANALYSIS_10, AUX_ANALYSIS_11, AUX_ANALYSIS_12, AUX_ANALYSIS_13, AUX_ANALYSIS_14, AUX_ANALYSIS_15, AUX_ANALYSIS_16, AUX_ANALYSIS_17, AUX_ANALYSIS_18, AUX_ANALYSIS_19, AUX_ANALYSIS_20, AUX_ANALYSIS_21, AUX_ANALYSIS_22, AUX_ANALYSIS_23, AUX_ANALYSIS_24, AUX_ANALYSIS_25, AUX_ANALYSIS_26, AUX_ANALYSIS_27, AUX_ANALYSIS_28, AUX_ANALYSIS_29, AUX_ANALYSIS_30 FROM aux_customers, sbd_sub_dets WHERE sbd_bill_ac_no = bill_ac_no AND sbd_subscriber_id = ? 
Argument(s): |607878|
20190513: 083516     DEBUG 24746[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@da18ac
20190513: 083516     DEBUG 25215[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:761) - DML NAME: getNmMsisdnVam
20190513: 083516     DEBUG 25215[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
getNmMsisdnVam|0||

20190513: 083516     DEBUG 25395[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:788) - get(static SQL): DML Name: getNmMsisdnVam
Execute SQL Statement: SELECT NM_INTERNAL_TARIFF, NM_NETWORK_TARIFF, NM_CONTRACT_PERIOD, NM_NTWRK_CONTR_PER, NM_MIN_CANC_PERIOD, NM_HIGHER_MIG_TYPE, NM_LOWER_MIG_TYPE, NM_SAME_MIG_TYPE, NM_NETWORK_ID, NM_NET_TYPE FROM nm_netmat, vam_active_msisdn WHERE vam_msisdn_no = ?  AND vam_intern_tariff = nm_internal_tariff
Argument(s): |833819663|
20190513: 083516     DEBUG 25395[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@8a0544
20190513: 083517     DEBUG 25676[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SdSimDeactivate )
20190513: 083517     DEBUG 25677[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSdSimDeactivateDAC(BaseAbstractDACFactory.java:1141) - getSdSimDeactivateDAC()
20190513: 083517     DEBUG 25682[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SdSimDeactivateDACImpl com.eppixcomm.eppix.base.dml.SdSimDeactivateDMLFactory@10b9279
20190513: 083517     DEBUG 25682[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SdSimDeactivateDACImpl
20190513: 083517     DEBUG 25683[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083517     DEBUG 25684[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SdSimDeactivateDACImpl TO MAP
20190513: 083517     DEBUG 25684[main] - com.eppixcomm.eppix.base.blo.SdSimDeactivateAbstractBLO.get(SdSimDeactivateAbstractBLO.java:400) - get( filter )
20190513: 083517     DEBUG 25684[main] - com.eppixcomm.eppix.base.blo.SdSimDeactivateAbstractDACImpl.get(SdSimDeactivateAbstractDACImpl.java:421) - get( filter )
20190513: 083517     DEBUG 25685[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SdSimDeactivate|0|equalSdSimNo+notnullSdDconnectDate+greaterthanSdDconnectDate|equalSdTransStatus|

20190513: 083518     DEBUG 26615[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SdSimDeactivate
Execute SQL Statement: SELECT SD_SUBSCRIBER_ID,SD_HANDSET_NO,SD_SIM_NO,SD_TRANS_STATUS,SD_STAT_CODE,SD_DCONNECT_DATE,SD_PRORATA_TO_DATE,SD_REASON,SD_LETTER_TYPE,SD_DISCON_CHARGE1,SD_DISCON_CHARGE2,SD_DISCON_CHARGE3,SD_DISCON_CHARGE4,SD_DISCON_CHARGE5,SD_EL_COMMAND,SD_EPPIX_STAMP,SD_N2N_STAMP,SD_ERROR_COMMENT
FROM SD_SIM_DEACTIVATE
WHERE SD_SIM_NO = ?  AND SD_DCONNECT_DATE IS NOT NULL AND SD_DCONNECT_DATE > ?  AND (SD_TRANS_STATUS = ?  )
Argument(s): |0004102502505|2019-05-13|F|
20190513: 083518     ERROR 26895[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSimFutureDeactivate(SubscriberUpgradeMigradeBLO.java:29727) - No SIM details found in table sd_sim_deactivate for SIM no 0004102502505
20190513: 083518     DEBUG 26898[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcEventCommand )
20190513: 083518     DEBUG 26898[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getEcEventCommandDAC(BaseDACFactory.java:131) - getEcEventCommandDAC()
20190513: 083518     DEBUG 26922[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.EcEventCommandDACImpl com.eppixcomm.eppix.base.dml.EcEventCommandDMLFactory@aeea66
20190513: 083518     DEBUG 26922[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.EcEventCommandDACImpl
20190513: 083518     DEBUG 26923[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083518     DEBUG 26923[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.EcEventCommandDACImpl TO MAP
20190513: 083518     DEBUG 26923[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractBLO.create(EcEventCommandAbstractBLO.java:189) - create( ecEventCommandDMO )
20190513: 083518     DEBUG 26923[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractBLO.exists(EcEventCommandAbstractBLO.java:423) - exists(ecEventCommand)
20190513: 083518     DEBUG 26923[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractDACImpl.exists(EcEventCommandAbstractDACImpl.java:227) - exists( EcEventCommandDMO)
20190513: 083518     DEBUG 26924[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcEventCommand|9|filterByPrimaryKey|

20190513: 083519     DEBUG 27996[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: EcEventCommand
Execute SQL Statement: SELECT DISTINCT(0)
FROM EC_EVENT_COMMAND
WHERE (EC_COMMAND) = ?
Argument(s): |201905130835379 |
20190513: 083519     DEBUG 28436[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractDACImpl.create(EcEventCommandAbstractDACImpl.java:99) - create( ecEventCommandDMO )
20190513: 083519     DEBUG 28437[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcEventCommand|11||

20190513: 083520     DEBUG 28676[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 201905130835379 |1|2019-05-13|835|MODIFY_SERVICES               |83   |C|5||607878|833819663           |0004102502505            ||eppixcomm     
20190513: 083520     DEBUG 29016[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: EcEventCommand
Execute SQL Statement: INSERT INTO EC_EVENT_COMMAND (EC_COMMAND, EC_STATUS, EC_DATE, EC_TIME, EC_MESSAGE, EC_NETWORK, EC_TYPE, EC_PRIORITY, EC_SEND_SEQ, EC_SUBSCRIBER_ID, EC_MSISDN, EC_SIM, EC_OPERATOR, EC_TTY) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Argument(s): |201905130835379 |1|2019-05-13|835|MODIFY_SERVICES               |83   |C|5||607878|833819663           |0004102502505            ||eppixcomm     |
20190513: 083520     DEBUG 29016[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcEventCommand )
20190513: 083520     DEBUG 29016[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractBLO.iterate(EcEventCommandAbstractBLO.java:494) - iterate( filter )
20190513: 083520     DEBUG 29016[main] - com.eppixcomm.eppix.base.blo.EcEventCommandAbstractDACImpl.iterate(EcEventCommandAbstractDACImpl.java:492) - iterate( filter )
20190513: 083520     DEBUG 29016[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcEventCommand|0|equalEcMsisdn~|equalEcSim+INEcMessage_2+INEcStatus_3+notequalEcCommand|EcCommanddesc

20190513: 083521     DEBUG 29556[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: EcEventCommand
Execute SQL Statement: SELECT EC_COMMAND, EC_STATUS, EC_DATE, EC_TIME, EC_MESSAGE, EC_NETWORK, EC_TYPE, EC_PRIORITY, EC_SEND_SEQ, EC_SUBSCRIBER_ID, EC_MSISDN, EC_SIM, EC_OPERATOR, EC_TTY
FROM EC_EVENT_COMMAND
WHERE (EC_MSISDN) = ? AND ((EC_SIM) = ?) AND (EC_MESSAGE) IN ( ? , ? ) AND (EC_STATUS) IN ( ? , ? , ? ) AND (EC_COMMAND) != ? ORDER BY EC_COMMAND DESC
Argument(s): |833819663|0004102502505|ACTIVATE_SIM|RESUME_SIM|1|2|4|201905130835379|
20190513: 083521     DEBUG 29677[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NtpNetTransPend )
20190513: 083521     DEBUG 29678[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getNtpNetTransPendDAC(BaseDACFactory.java:176) - getNtpNetTransPendDAC()
20190513: 083521     DEBUG 29681[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl com.eppixcomm.eppix.base.dml.NtpNetTransPendDMLFactory@ab444
20190513: 083521     DEBUG 29681[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl
20190513: 083521     DEBUG 29682[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083521     DEBUG 29682[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl TO MAP
20190513: 083521     DEBUG 29683[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractBLO.create(NtpNetTransPendAbstractBLO.java:92) - create( NtpnetTransPendDMO )
20190513: 083521     DEBUG 29683[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractBLO.exists(NtpNetTransPendAbstractBLO.java:357) - exists(nmNetmat)
20190513: 083521     DEBUG 29683[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl.exists(NtpNetTransPendAbstractDACImpl.java:191) - exists( NtpNetTransPendDMO)
20190513: 083521     DEBUG 29683[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NtpNetTransPend|9|filterByPrimaryKey|

20190513: 083521     DEBUG 30095[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: NtpNetTransPend
Execute SQL Statement: SELECT DISTINCT(0)
FROM NTP_NET_TRANS_PEND
WHERE NTP_SERIAL_ID = ?
Argument(s): |0|
20190513: 083521     DEBUG 30335[main] - com.eppixcomm.eppix.base.blo.NtpNetTransPendAbstractDACImpl.create(NtpNetTransPendAbstractDACImpl.java:63) - create( ntpNetTransPendDMO )
20190513: 083521     DEBUG 30336[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NtpNetTransPend|11||

20190513: 083522     DEBUG 30556[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 0|201905130835379 |0|  |607878|                    |                    |APNA|1|2019-05-13 08:35:21
20190513: 083522     DEBUG 30895[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: NtpNetTransPend
Execute SQL Statement: INSERT INTO NTP_NET_TRANS_PEND (NTP_SERIAL_ID, NTP_COMMAND, NTP_SEND_SEQ,NTP_TRAN_TYPE, NTP_SUBSCRIBER_ID, NTP_OLD_VALUE, NTP_NEW_VALUE, NTP_SERVICE_CODE, NTP_STATUS, NTP_TIMESTAMP) VALUES (?,?,?,?,?,?,?,?,?,?)
Argument(s): |0|201905130835379 |0|  |607878|                    |                    |APNA|1|2019-05-13 08:35:21|
20190513: 083522     DEBUG 30897[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.EcdEventCmdDet )
20190513: 083522     DEBUG 30898[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getEcdEventCmdDetDAC(BaseDACFactory.java:161) - getEcdEventCmdDetDAC()
20190513: 083522     DEBUG 30901[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.EcdEventCmdDetDACImpl com.eppixcomm.eppix.base.dml.EcdEventCmdDetDMLFactory@100bac2
20190513: 083522     DEBUG 30901[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.EcdEventCmdDetDACImpl
20190513: 083522     DEBUG 30901[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083522     DEBUG 30902[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.EcdEventCmdDetDACImpl TO MAP
20190513: 083522     DEBUG 30902[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.create(EcdEventCmdDetAbstractBLO.java:184) - create( ecdEventCmdDetDMO )
20190513: 083522     DEBUG 30902[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractBLO.exists(EcdEventCmdDetAbstractBLO.java:411) - exists(ecdEventCmdDet)
20190513: 083522     DEBUG 30902[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.exists(EcdEventCmdDetAbstractDACImpl.java:236) - exists( EcdEventCmdDetDMO)
20190513: 083522     DEBUG 30902[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|9|filterByPrimaryKey|

20190513: 083522     DEBUG 31355[main] - com.eppixcomm.eppix.common.data.DAOImpl.exists(DAOImpl.java:1086) - exists(param SQL): DML Name: EcdEventCmdDet
Execute SQL Statement: SELECT DISTINCT(0)
FROM ECD_EVENT_CMD_DET
WHERE (ECD_COMMAND) = ? AND  ECD_SEQNO = ?
Argument(s): |201905130835379 |1|
20190513: 083523     DEBUG 31656[main] - com.eppixcomm.eppix.base.blo.EcdEventCmdDetAbstractDACImpl.create(EcdEventCmdDetAbstractDACImpl.java:100) - create( ecdEventCmdDetDMO )
20190513: 083523     DEBUG 31657[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
EcdEventCmdDet|11||

20190513: 083523     DEBUG 31835[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2509) - 201905130835379 |1|DET|[SERVICE_REQUEST_HEADER],SERV_REQ_TYPE=Modify_Subscriber_Services,ICC_ID=8927000004102502505,IMSI=null,PRIMARY_MSISDN=833819663,LOCATION=M1,SPID=        59,NETWORK_TARIFF=ASL,NETWORK_ID=M1,TRANS_ID=0046989892,PRIORITY=5,VERSION_NO=1.0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             | |2019-05-13 08:35:22
20190513: 083523     DEBUG 32297[main] - com.eppixcomm.eppix.common.data.DAOImpl.insert(DAOImpl.java:2543) - insert(DBO): DML Name: EcdEventCmdDet
Execute SQL Statement: INSERT INTO ECD_EVENT_CMD_DET (ECD_COMMAND, ECD_SEQNO, ECD_DET_TYPE, ECD_TEXT, ECD_FLAG, ECD_TIMESTAMP) VALUES (?,?,?,?,?,?)
Argument(s): |201905130835379 |1|DET|[SERVICE_REQUEST_HEADER],SERV_REQ_TYPE=Modify_Subscriber_Services,ICC_ID=8927000004102502505,IMSI=null,PRIMARY_MSISDN=833819663,LOCATION=M1,SPID=        59,NETWORK_TARIFF=ASL,NETWORK_ID=M1,TRANS_ID=0046989892,PRIORITY=5,VERSION_NO=1.0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             | |2019-05-13 08:35:22|
20190513: 083523     DEBUG 32297[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createN2NDetailSegment(SubscriberUpgradeMigradeBLO.java:33011) - 
N2N_CreateDetailSegment
NETWORK: M1
NET SERV CODE: APN
COMMAND: 201905130835379
SEQ NO: 1
SIM: 0004102502505
NETWORK: M1
MSISDN: 
CATEGORY: ORDINARY
RESTRICTION: RR
MS STATE: U_ADMIN
TARIFF TYPE: CTRCT
PERIMARY SIM: 
SECOND SIM: 0004102502505
PRIMARY MISISDN: 
SECOND MSISDN: 
SERVICE TYPE: AP
SERVICE CODE: APNA
SUBSCRIBER: 607878
OPTION: MODIFY
20190513: 083523     DEBUG 32297[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.NgsNetGroupServ )
20190513: 083523     DEBUG 32298[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractBLO.iterate(NgsNetGroupServAbstractBLO.java:563) - iterate( filter )
20190513: 083523     DEBUG 32298[main] - com.eppixcomm.eppix.base.blo.NgsNetGroupServAbstractDACImpl.iterate(NgsNetGroupServAbstractDACImpl.java:618) - iterate( filter )
20190513: 083523     DEBUG 32298[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
NgsNetGroupServ|0|equalNgsCode+equalNgsNetwork|NgsSequenceasc

20190513: 083524     DEBUG 33216[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: NgsNetGroupServ
Execute SQL Statement: SELECT NGS_CODE, NGS_NETWORK, NGS_NET_SERV_CODE, NGS_SEQUENCE, NGS_APPLY_TEXT, NGS_MODIFY_TEXT, NGS_REMOVE_TEXT, NGS_PARAM_NAME1, NGS_PARAM_VALUE1, NGS_PARAM_NAME2, NGS_PARAM_VALUE2, NGS_PARAM_NAME3, NGS_PARAM_VALUE3, NGS_PARAM_NAME4, NGS_PARAM_VALUE4, NGS_PARAM_NAME5, NGS_PARAM_VALUE5
FROM NGS_NET_GROUP_SERV
WHERE NGS_CODE = ? AND NGS_NETWORK = ? ORDER BY NGS_SEQUENCE ASC
Argument(s): |APN|M1|
20190513: 083524     DEBUG 33217[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 083524     DEBUG 33217[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 083524     DEBUG 33217[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 083524     DEBUG 33219[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 083524     DEBUG 33396[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASGENMBM1|
20190513: 083524     DEBUG 33396[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@941db6
20190513: 083525     DEBUG 33656[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.Sysdirm )
20190513: 083525     DEBUG 33656[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractBLO.get(SysdirmAbstractBLO.java:501) - get( filter )
20190513: 083525     DEBUG 33656[main] - com.eppixcomm.eppix.base.blo.SysdirmAbstractDACImpl.get(SysdirmAbstractDACImpl.java:435) - get( filter )
20190513: 083525     DEBUG 33657[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
Sysdirm|0|equalSystemKey|

20190513: 083525     DEBUG 33817[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: Sysdirm
Execute SQL Statement: SELECT SYSTEM_KEY, KEY_VALUE, DESCRIPTION
FROM SYSDIRM
WHERE (SYSTEM_KEY) = ?
Argument(s): |ASMBPWDM1|
20190513: 083525     DEBUG 33817[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@2acc57
20190513: 083525     DEBUG 34096[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9355) - 
=======================================================================================
PARAM OPTION: ALL
PARAM SIM NO: 0004102502505
PARAM NETWORK ID: 
PARAM HLR: 
PARAM DEALER ID: 
PARAM CUSTOMER: 
=======================================================================================
20190513: 083525     DEBUG 34096[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SacSimAssignCus )
20190513: 083525     DEBUG 34096[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractBLO.get(SacSimAssignCusAbstractBLO.java:287) - get( filter )
20190513: 083525     DEBUG 34097[main] - com.eppixcomm.eppix.base.blo.SacSimAssignCusAbstractDACImpl.get(SacSimAssignCusAbstractDACImpl.java:205) - get( filter )
20190513: 083525     DEBUG 34097[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SacSimAssignCus|0|equalSacSimNo|

20190513: 083525     DEBUG 34256[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SacSimAssignCus
Execute SQL Statement: SELECT SAC_BILL_AC_NO, SAC_SIM_NO 
FROM sac_sim_assign_cus
WHERE SAC_SIM_NO = ? 
Argument(s): |0004102502505|
20190513: 083526      INFO 34556[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:9984) - Passed customer no  not found in Sac_Sim_assign_cus
20190513: 083526     DEBUG 34556[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SmnSimNos )
20190513: 083526     DEBUG 34556[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractBLO.get(SmnSimNosAbstractBLO.java:498) - get( filter )
20190513: 083526     DEBUG 34556[main] - com.eppixcomm.eppix.base.blo.SmnSimNosAbstractDACImpl.get(SmnSimNosAbstractDACImpl.java:635) - get( filter )
20190513: 083526     DEBUG 34557[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SmnSimNos|0|equalSmnSimNo|

20190513: 083526     DEBUG 34736[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SmnSimNos
Execute SQL Statement: SELECT SMN_SIM_NO, SMN_NETWORK_ID, SMN_IMSI_NO, SMN_KI, SMN_ON_NETWORK, SMN_HLR, SMN_PUK_NO, SMN_STATUS, SMN_ACTIVE_DATE, SMN_AVAIL_DATE, SMN_EXPIRY_DATE, SMN_WAREHOUSE, SMN_PRODUCT_CODE, SMN_DEALER_ID, SMN_TRANSPORT_KEY, SMN_PIN_NO, SMN_PUK_NO_2, SMN_PIN_NO_2, SMN_ANALYSIS_1, SMN_ANALYSIS_2, SMN_ANALYSIS_3
FROM SMN_SIM_NOS
WHERE SMN_SIM_NO = ?
Argument(s): |0004102502505|
20190513: 083526     DEBUG 34738[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@6b9c84
20190513: 083526     DEBUG 34996[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getSim(SubscriberUpgradeMigradeBLO.java:10075) - NETWORK PARAMS: OPTION: ALL NETWORK ID:  NETWORKID.LENGTH: 0
20190513: 083526     DEBUG 34996[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VstServiceTypes )
20190513: 083526     DEBUG 34996[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractBLO.get(VstServiceTypesAbstractBLO.java:595) - get( filter )
20190513: 083526     DEBUG 34996[main] - com.eppixcomm.eppix.base.blo.VstServiceTypesAbstractDACImpl.get(VstServiceTypesAbstractDACImpl.java:540) - get( filter )
20190513: 083526     DEBUG 34997[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VstServiceTypes|0|equalVstServiceType|

20190513: 083526     DEBUG 35156[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VstServiceTypes
Execute SQL Statement: SELECT VST_SERVICE_TYPE, VST_SERVICE_DESC, VST_MULTI_CHARGE, VST_SERVICE_CLASS, VST_AUTO_CONNECT, VST_ORIGINATOR, VST_TARIFF_RELATED, VST_PARAMETERISED, VST_PARAMS_LEVEL, VST_ARCHIVE_MONTHS, VST_FUTURE_ACT, VST_NODE_LEVEL
FROM VST_SERVICE_TYPES
WHERE VST_SERVICE_TYPE = ?
Argument(s): |AP|
20190513: 083526     DEBUG 35157[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@f0b7f8
20190513: 083526     DEBUG 35417[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.PshParamServHdr )
20190513: 083526     DEBUG 35418[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getPshParamServHdrDAC(BaseDACFactory.java:194) - getPshParamServHdrDAC()
20190513: 083526     DEBUG 35420[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.PshParamServHdrDACImpl com.eppixcomm.eppix.base.dml.PshParamServHdrAbstractDMLFactory@90832e
20190513: 083526     DEBUG 35420[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.PshParamServHdrDACImpl
20190513: 083526     DEBUG 35421[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 083526     DEBUG 35421[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.PshParamServHdrDACImpl TO MAP
20190513: 083526     DEBUG 35421[main] - com.eppixcomm.eppix.base.blo.PshParamServHdrAbstractBLO.get(PshParamServHdrAbstractBLO.java:516) - get( filter )
20190513: 083526     DEBUG 35422[main] - com.eppixcomm.eppix.base.blo.PshParamServHdrAbstractDACImpl.get(PshParamServHdrAbstractDACImpl.java:448) - get( filter )
20190513: 083526     DEBUG 35424[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
PshParamServHdr|0|equalPshServiceCode+equalPshSubscriberId+equalPshSimNo+equalPshArchived|

20190513: 083527     DEBUG 36336[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: PshParamServHdr
Execute SQL Statement: SELECT PSH_ID, PSH_SERVICE_CODE, PSH_SERVICE_TYPE, PSH_SUBSCRIBER_ID, PSH_SIM_NO, PSH_MSISDN_NO, PSH_ARCHIVED
FROM PSH_PARAM_SERV_HDR
WHERE (PSH_SERVICE_CODE) = ? AND PSH_SUBSCRIBER_ID = ? AND (PSH_SIM_NO) = ? AND (PSH_ARCHIVED) = ?
Argument(s): |APNA|607878|0004102502505|N|
20190513: 083528     ERROR 36596[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.getPsh(SubscriberUpgradeMigradeBLO.java:6549) - Service code does not exists on parameter service code: APNA: Sim no: 0004102502505: Msisdn No: 
20190513: 083528     ERROR 36596[main] - com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeBLO.createN2NDetailSegment(SubscriberUpgradeMigradeBLO.java:33654) - NO HEADER FOUND
20190513: 083528     ERROR 36596[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1925) - NO HEADER FOUND
20190513: 083528      INFO 36596[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:109) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: N2N creation failed: NO HEADER FOUND
20190513: 095629     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:150) - loading appProperties
20190513: 095629     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:157) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190513: 095629     DEBUG     3[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:170) - DB Connection start
20190513: 095629     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:173) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190513: 095630     DEBUG   949[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190513: 095630     DEBUG   951[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190513: 095630     DEBUG   952[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190513: 095630     DEBUG   952[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190513: 095630     DEBUG   986[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190513: 095630     DEBUG   994[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@1b8f864
20190513: 095630     DEBUG   996[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190513: 095630     DEBUG  1026[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095630     DEBUG  1027[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190513: 095630     DEBUG  1028[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 095630     DEBUG  1030[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190513: 095630     DEBUG  1033[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@3e89c3
20190513: 095630     DEBUG  1034[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190513: 095630     DEBUG  1035[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095630     DEBUG  1035[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190513: 095630     DEBUG  1036[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190513: 095630     DEBUG  1038[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190513: 095630     DEBUG  1041[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1bc82e7
20190513: 095630     DEBUG  1042[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190513: 095630     DEBUG  1042[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095630     DEBUG  1042[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190513: 095630     DEBUG  1043[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190513: 095630     DEBUG  1046[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190513: 095630     DEBUG  1049[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@140c281
20190513: 095630     DEBUG  1049[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190513: 095630     DEBUG  1049[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095630     DEBUG  1049[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190513: 095630     DEBUG  1050[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 095630     DEBUG  1059[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 095630     DEBUG  1252[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190513: 095630     DEBUG  1262[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@162dbb6
20190513: 095630     DEBUG  1263[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190513: 095630     DEBUG  1270[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095630     DEBUG  1270[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190513: 095630     DEBUG  1271[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 095630     DEBUG  1271[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190513: 095630     DEBUG  1271[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 095630     DEBUG  1271[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 095630     DEBUG  1271[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:200) - DB Connection successfull
20190513: 095630     DEBUG  1271[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1379) - 
Integer subscriberID: 607878
String msisdn: null
String serviceCode: BDRT
String partnerId: null
20190513: 095630     DEBUG  1274[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 095630     DEBUG  1440[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbdSubDetsDAC(BaseAbstractDACFactory.java:234) - getSbdSubDetsDAC()
20190513: 095630     DEBUG  1452[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl com.eppixcomm.eppix.base.dml.SbdSubDetsAbstractDMLFactory@1d0fafc
20190513: 095630     DEBUG  1452[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl
20190513: 095630     DEBUG  1454[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095630     DEBUG  1454[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl TO MAP
20190513: 095630     DEBUG  1455[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 095630     DEBUG  1455[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 095630     DEBUG  1461[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 095631     DEBUG  1816[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 095631     DEBUG  1819[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@fcfa52
20190513: 095631     DEBUG  2037[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 095631     DEBUG  2038[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190513: 095631     DEBUG  2047[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@8ee016
20190513: 095631     DEBUG  2047[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190513: 095631     DEBUG  2049[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095631     DEBUG  2050[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190513: 095631     DEBUG  2050[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190513: 095631     DEBUG  2050[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190513: 095631     DEBUG  2051[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190513: 095631     DEBUG  2386[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 095631     DEBUG  2392[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1e845c2
20190513: 095631     DEBUG  2457[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190513: 095631     DEBUG  2458[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVasActiveServiceDAC(BaseAbstractDACFactory.java:1177) - getVasActiveServiceDAC()
20190513: 095631     DEBUG  2462[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl com.eppixcomm.eppix.base.dml.VasActiveServiceDMLFactory@102799c
20190513: 095631     DEBUG  2462[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl
20190513: 095631     DEBUG  2463[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095631     DEBUG  2464[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl TO MAP
20190513: 095631     DEBUG  2464[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190513: 095631     DEBUG  2464[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190513: 095631     DEBUG  2464[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode|

20190513: 095631     DEBUG  2746[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ? 
Argument(s): |607878|BDRT|
20190513: 095632     DEBUG  2848[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TsTariffService )
20190513: 095632     DEBUG  2849[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getTsTariffServiceDAC(BaseDACFactory.java:287) - getTsTariffServiceDAC()
20190513: 095632     DEBUG  2853[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl com.eppixcomm.eppix.base.dml.TsTariffServiceAbstractDMLFactory@b25b9d
20190513: 095632     DEBUG  2854[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl
20190513: 095632     DEBUG  2855[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095632     DEBUG  2855[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl TO MAP
20190513: 095632     DEBUG  2855[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractBLO.get(TsTariffServiceAbstractBLO.java:593) - get( filter )
20190513: 095632     DEBUG  2855[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractDACImpl.get(TsTariffServiceAbstractDACImpl.java:589) - get( filter )
20190513: 095632     DEBUG  2856[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TsTariffService|0|equalTsServiceCode+equalTsPackageCode+equalTsInternalTariff|

20190513: 095632     DEBUG  3056[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TsTariffService
Execute SQL Statement: SELECT TS_PACKAGE_CODE, TS_INTERNAL_TARIFF, TS_SERVICE_CODE, TS_NET_SERV_CODE, TS_ACT_CHARGE, TS_TDEACT_CHARGE, TS_REACT_CHARGE, TS_PDEACT_CHARGE, TS_SUB_CHARGE1, TS_SUB_CHARGE2, TS_SUB_CHARGE3, TS_CHARGE_PERIOD, TS_CHARGE_FREQ, TS_DISCOUNT_REF, TS_ACT_INCLUSIVE
FROM TS_TARIFF_SERVICE
WHERE (TS_SERVICE_CODE) = ? AND (TS_PACKAGE_CODE) = ? AND (TS_INTERNAL_TARIFF) = ?
Argument(s): |BDRT|500FF|ASKYL36M|
20190513: 095632      INFO  3158[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:109) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: Failed to get the charges for service (BDRT)
20190513: 095648     DEBUG     0[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:150) - loading appProperties
20190513: 095648     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.loadproperties(TestSubscriberServices.java:157) - appProperties loaded : {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190513: 095648     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:170) - DB Connection start
20190513: 095648     DEBUG     4[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:173) - {jdbc_driver=com.informix.jdbc.IfxDriver, jdbc_user=compans, jdbc_pass=@Wsxcde34, jdbc_url=jdbc:informix-sqli:mtnx83:8302/eppix:INFORMIXSERVER=epx_83_dev_2}
20190513: 095649     DEBUG  1154[main] - com.eppixcomm.eppix.common.data.DACFactory.<init>(DACFactory.java:95) - constructor( connection, thrower )
20190513: 095649     DEBUG  1156[main] - com.eppixcomm.eppix.common.data.ConnectionContext.connect(ConnectionContext.java:100) - connect( connection )
20190513: 095649     DEBUG  1157[main] - com.eppixcomm.eppix.common.data.ConnectionContext.get(ConnectionContext.java:82) - get()
20190513: 095649     DEBUG  1157[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberActiveServices )
20190513: 095649     DEBUG  1183[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberActiveServicesDAC(BaseDACFactory.java:501) - getSubscriberActiveServicesDAC
20190513: 095649     DEBUG  1189[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl com.eppixcomm.eppix.base.dml.SubscriberActiveServicesDML@1b8f864
20190513: 095649     DEBUG  1190[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl
20190513: 095649     DEBUG  1216[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095649     DEBUG  1216[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberActiveServicesDACImpl TO MAP
20190513: 095649     DEBUG  1217[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 095649     DEBUG  1220[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetServiceDiscountDAC(BaseDACFactory.java:421) - getGetServiceDiscountDAC()
20190513: 095649     DEBUG  1222[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl com.eppixcomm.eppix.base.dml.GetServiceDiscountDML@3e89c3
20190513: 095649     DEBUG  1222[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl
20190513: 095649     DEBUG  1223[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095649     DEBUG  1223[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetServiceDiscountDACImpl TO MAP
20190513: 095649     DEBUG  1224[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SimAPNServices )
20190513: 095649     DEBUG  1226[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSimAPNServicesDAC(BaseDACFactory.java:462) - getSimAPNServicesDAC
20190513: 095649     DEBUG  1228[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl com.eppixcomm.eppix.base.dml.SimAPNServicesDML@1bc82e7
20190513: 095649     DEBUG  1229[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl
20190513: 095649     DEBUG  1229[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095649     DEBUG  1229[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SimAPNServicesDACImpl TO MAP
20190513: 095649     DEBUG  1231[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190513: 095649     DEBUG  1233[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getGetSULMaxUsageAllowedDAC(BaseDACFactory.java:527) - getGetSULMaxUsageAllowedDAC
20190513: 095649     DEBUG  1236[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl com.eppixcomm.eppix.base.dml.GetSULMaxUsageAllowedDML@140c281
20190513: 095649     DEBUG  1236[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl
20190513: 095649     DEBUG  1237[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095649     DEBUG  1237[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowedDACImpl TO MAP
20190513: 095649     DEBUG  1238[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 095649     DEBUG  1248[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 095649     DEBUG  1425[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getSubscriberUpgradeMigradeDAC(BaseDACFactory.java:514) - getSubscriberUpgradeMigradeDAC
20190513: 095649     DEBUG  1431[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl com.eppixcomm.eppix.base.dml.SubscriberUpgradeMigradeDML@162dbb6
20190513: 095649     DEBUG  1431[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl
20190513: 095649     DEBUG  1436[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095649     DEBUG  1437[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigradeDACImpl TO MAP
20190513: 095649     DEBUG  1437[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 095649     DEBUG  1437[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetSULMaxUsageAllowed )
20190513: 095649     DEBUG  1437[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.GetServiceDiscount )
20190513: 095649     DEBUG  1437[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SubscriberUpgradeMigrade )
20190513: 095649     DEBUG  1437[main] - com.eppixcomm.eppix.base.test.TestSubscriberServices.dbConnectionInit(TestSubscriberServices.java:200) - DB Connection successfull
20190513: 095649     DEBUG  1438[main] - com.eppixcomm.eppix.base.blo.SubscriberActiveServicesBLO.doActivateSubscriberService(SubscriberActiveServicesBLO.java:1379) - 
Integer subscriberID: 607878
String msisdn: null
String serviceCode: BRDT
String partnerId: null
20190513: 095649     DEBUG  1440[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.SbdSubDets )
20190513: 095650     DEBUG  1538[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getSbdSubDetsDAC(BaseAbstractDACFactory.java:234) - getSbdSubDetsDAC()
20190513: 095650     DEBUG  1549[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl com.eppixcomm.eppix.base.dml.SbdSubDetsAbstractDMLFactory@1d0fafc
20190513: 095650     DEBUG  1550[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl
20190513: 095650     DEBUG  1552[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095650     DEBUG  1552[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.SbdSubDetsDACImpl TO MAP
20190513: 095650     DEBUG  1553[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractBLO.get(SbdSubDetsAbstractBLO.java:531) - get( filter )
20190513: 095650     DEBUG  1553[main] - com.eppixcomm.eppix.base.blo.SbdSubDetsAbstractDACImpl.get(SbdSubDetsAbstractDACImpl.java:556) - get( filter )
20190513: 095650     DEBUG  1559[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
SbdSubDets|0|equalSbdSubscriberId|

20190513: 095650     DEBUG  1863[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: SbdSubDets
Execute SQL Statement: SELECT SBD_SUBSCRIBER_ID, SBD_DIALLING_NO, SBD_BILL_AC_NO, SBD_CONNECT_DATE, SBD_DCONNECT_DATE, SBD_TERM_DATE, SBD_TITLE, SBD_SURNAME, SBD_FIRSTNAME, SBD_GENDER, SBD_DOB, SBD_PASSWORD, SBD_LOCATION_CODE, SBD_BILL_CYCLE, SBD_PACKAGE_CODE, SBD_BILLED_UPTO, SBD_TARIFF_PLAN
FROM SBD_SUB_DETS
WHERE SBD_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 095650     DEBUG  1866[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@fcfa52
20190513: 095650     DEBUG  2004[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VamActiveMsisdn )
20190513: 095650     DEBUG  2005[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getVamActiveMsisdnDAC(BaseDACFactory.java:256) - getVamActiveMsisdnDAC()
20190513: 095650     DEBUG  2015[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl com.eppixcomm.eppix.base.dml.VamActiveMsisdnDMLFactory@8ee016
20190513: 095650     DEBUG  2016[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl
20190513: 095650     DEBUG  2018[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095650     DEBUG  2018[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VamActiveMsisdnDACImpl TO MAP
20190513: 095650     DEBUG  2018[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractBLO.iterate(VamActiveMsisdnAbstractBLO.java:616) - iterate( filter )
20190513: 095650     DEBUG  2018[main] - com.eppixcomm.eppix.base.blo.VamActiveMsisdnAbstractDACImpl.iterate(VamActiveMsisdnAbstractDACImpl.java:652) - iterate( filter )
20190513: 095650     DEBUG  2020[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VamActiveMsisdn|0|equalVamSubscriberId|

20190513: 095650     DEBUG  2273[main] - com.eppixcomm.eppix.common.data.DAOImpl.iterator(DAOImpl.java:2276) - iterator(param SQL): DML Name: VamActiveMsisdn
Execute SQL Statement: SELECT VAM_SUBSCRIBER_ID, VAM_SIM_NO, VAM_MSISDN_NO, VAM_TWINBILL_NO, VAM_STAT_CODE, VAM_CONNECT_DATE, VAM_DCONNECT_DATE, VAM_INTERN_TARIFF, VAM_CONTR_TERMINAT, VAM_CONTR_PERIOD, VAM_TERMINAT_NOTIF, VAM_DIR_ENTRY, VAM_ITEMISED, VAM_DEPARTMENT, VAM_SALESMAN, VAM_DEALER_ID, VAM_ABAR_DATE, VAM_SUBS_SUFFIX, VAM_MESS_COMMENT, VAM_AIRTIME_NET, VAM_PR_FLAG, VAM_HIERARCHY, VAM_MSISDN_KNOWN, VAM_TARIFF_CHG, VAM_ORIG_PROV_ID, VAM_IMP_PROV_ID, VAM_ORIG_SERV_PROV, VAM_IMP_SERV_PROV, VAM_MSISDN_TYPE, VAM_DUMMY, VAM_MSISDN_EXPRTD, VAM_EXPORTED_TO, VAM_ANALYSIS_1, VAM_ANALYSIS_2, VAM_ANALYSIS_3, VAM_ANALYSIS_4, VAM_ANALYSIS_5
FROM VAM_ACTIVE_MSISDN
WHERE VAM_SUBSCRIBER_ID = ?
Argument(s): |607878|
20190513: 095650     DEBUG  2278[main] - com.eppixcomm.eppix.common.data.DAOImpl.fetchDMO(DAOImpl.java:4029) - ROW COMPLETED AND DMO CREATED: ROW: [Ljava.lang.Object;@1e845c2
20190513: 095650     DEBUG  2344[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.VasActiveService )
20190513: 095650     DEBUG  2345[main] - com.eppixcomm.eppix.base.blo.BaseAbstractDACFactory.getVasActiveServiceDAC(BaseAbstractDACFactory.java:1177) - getVasActiveServiceDAC()
20190513: 095650     DEBUG  2348[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl com.eppixcomm.eppix.base.dml.VasActiveServiceDMLFactory@102799c
20190513: 095650     DEBUG  2348[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl
20190513: 095650     DEBUG  2349[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095650     DEBUG  2350[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.VasActiveServiceDACImpl TO MAP
20190513: 095650     DEBUG  2350[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractBLO.get(VasActiveServiceAbstractBLO.java:318) - get( filter )
20190513: 095650     DEBUG  2350[main] - com.eppixcomm.eppix.base.blo.VasActiveServiceAbstractDACImpl.get(VasActiveServiceAbstractDACImpl.java:377) - get( filter )
20190513: 095650     DEBUG  2350[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
VasActiveService|0|equalVasSubscriberId+equalVasServiceCode|

20190513: 095651     DEBUG  2553[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: VasActiveService
Execute SQL Statement: SELECT VAS_SUBSCRIBER_ID,VAS_SERVICE_CODE,VAS_INTERN_TARIFF,VAS_SERVICE_TYPE,VAS_ACT_DATE,VAS_DEACT_DATE,VAS_SUB_CHARGE1,VAS_SUB_CHARGE2,VAS_SUB_CHARGE3,VAS_TWINBILL_NO,VAS_MULTI_CHARGE
FROM VAS_ACTIVE_SERVICE
WHERE VAS_SUBSCRIBER_ID = ?  AND VAS_SERVICE_CODE = ? 
Argument(s): |607878|BRDT|
20190513: 095651     DEBUG  2665[main] - com.eppixcomm.eppix.common.core.BLOBinder.getBLO(BLOBinder.java:225) - getBLO( bloClass=com.eppixcomm.eppix.base.blo.TsTariffService )
20190513: 095651     DEBUG  2666[main] - com.eppixcomm.eppix.base.blo.BaseDACFactory.getTsTariffServiceDAC(BaseDACFactory.java:287) - getTsTariffServiceDAC()
20190513: 095651     DEBUG  2669[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:115) - getDAC( dacImplClass, dmlFactory )com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl com.eppixcomm.eppix.base.dml.TsTariffServiceAbstractDMLFactory@b25b9d
20190513: 095651     DEBUG  2670[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:129) - BEFORE INSTANTIATION DAC CLASS: class com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl
20190513: 095651     DEBUG  2671[main] - com.eppixcomm.eppix.common.data.DAC.<init>(DAC.java:66) - constructor(dao, thrower )
20190513: 095651     DEBUG  2671[main] - com.eppixcomm.eppix.common.data.DACFactory.getDAC(DACFactory.java:136) - AFTER ADDING DAC CLASS: class com.eppixcomm.eppix.base.blo.TsTariffServiceDACImpl TO MAP
20190513: 095651     DEBUG  2671[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractBLO.get(TsTariffServiceAbstractBLO.java:593) - get( filter )
20190513: 095651     DEBUG  2672[main] - com.eppixcomm.eppix.base.blo.TsTariffServiceAbstractDACImpl.get(TsTariffServiceAbstractDACImpl.java:589) - get( filter )
20190513: 095651     DEBUG  2672[main] - com.eppixcomm.eppix.common.data.DAOImpl$DAOStmtPool.get(DAOImpl.java:4451) - 
======================================================================
TsTariffService|0|equalTsServiceCode+equalTsPackageCode+equalTsInternalTariff|

20190513: 095651     DEBUG  2933[main] - com.eppixcomm.eppix.common.data.DAOImpl.get(DAOImpl.java:631) - get(param SQL): DML Name: TsTariffService
Execute SQL Statement: SELECT TS_PACKAGE_CODE, TS_INTERNAL_TARIFF, TS_SERVICE_CODE, TS_NET_SERV_CODE, TS_ACT_CHARGE, TS_TDEACT_CHARGE, TS_REACT_CHARGE, TS_PDEACT_CHARGE, TS_SUB_CHARGE1, TS_SUB_CHARGE2, TS_SUB_CHARGE3, TS_CHARGE_PERIOD, TS_CHARGE_FREQ, TS_DISCOUNT_REF, TS_ACT_INCLUSIVE
FROM TS_TARIFF_SERVICE
WHERE (TS_SERVICE_CODE) = ? AND (TS_PACKAGE_CODE) = ? AND (TS_INTERNAL_TARIFF) = ?
Argument(s): |BRDT|500FF|ASKYL36M|
20190513: 095651      INFO  3074[main] - com.eppixcomm.eppix.base.error.Thrower.business(Thrower.java:109) - com.eppixcomm.eppix.base.error.EPPIXBusinessException: Failed to get the charges for service (BRDT)
